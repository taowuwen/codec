!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADDRLENGTH	shadowsocks/common.py	/^    ADDRLENGTH = {socket.AF_INET: 32, socket.AF_INET6: 128, False: 0}$/;"	v	class:IPNetwork
ADDRTYPE_HOST	shadowsocks/common.py	/^ADDRTYPE_HOST = 3$/;"	v
ADDRTYPE_IPV4	shadowsocks/common.py	/^ADDRTYPE_IPV4 = 1$/;"	v
ADDRTYPE_IPV6	shadowsocks/common.py	/^ADDRTYPE_IPV6 = 4$/;"	v
API_INTERFACE	apiconfig.py	/^API_INTERFACE = 'sspanelv2' #mudbjson, sspanelv2, sspanelv3, sspanelv3ssr, muapiv2(not support)$/;"	v
AddressMap	shadowsocks/udprelay.py	/^class AddressMap(object):$/;"	c
BLOCK_SIZE	shadowsocks/crypto/ctypes_libsodium.py	/^BLOCK_SIZE = 64$/;"	v
BLOCK_SIZE	shadowsocks/crypto/sodium.py	/^BLOCK_SIZE = 64$/;"	v
BUF_SIZE	shadowsocks/manager.py	/^BUF_SIZE = 1506$/;"	v
BUF_SIZE	shadowsocks/tcprelay.py	/^BUF_SIZE = 32 * 1024$/;"	v
BUF_SIZE	shadowsocks/udprelay.py	/^BUF_SIZE = 65536$/;"	v
CACHE_SWEEP_INTERVAL	shadowsocks/asyncdns.py	/^CACHE_SWEEP_INTERVAL = 30$/;"	v
CDLL	shadowsocks/crypto/ctypes_libsodium.py	/^    create_string_buffer, c_void_p$/;"	i
CDLL	shadowsocks/crypto/ctypes_openssl.py	/^    create_string_buffer, c_void_p$/;"	i
CDLL	shadowsocks/crypto/util.py	/^    from ctypes import CDLL$/;"	i
CIPHERS_TO_TEST	shadowsocks/encrypt.py	/^CIPHERS_TO_TEST = [$/;"	v
CMD_BIND	shadowsocks/tcprelay.py	/^CMD_BIND = 2$/;"	v
CMD_CONNECT	shadowsocks/tcprelay.py	/^CMD_CONNECT = 1$/;"	v
CMD_CONNECT	shadowsocks/udprelay.py	/^CMD_CONNECT = 0$/;"	v
CMD_CONNECT_REMOTE	shadowsocks/udprelay.py	/^CMD_CONNECT_REMOTE = 2$/;"	v
CMD_DISCONNECT	shadowsocks/udprelay.py	/^CMD_DISCONNECT = 8$/;"	v
CMD_POST	shadowsocks/udprelay.py	/^CMD_POST = 4$/;"	v
CMD_POST_64	shadowsocks/udprelay.py	/^CMD_POST_64 = 6$/;"	v
CMD_RSP_CONNECT	shadowsocks/udprelay.py	/^CMD_RSP_CONNECT = 1$/;"	v
CMD_RSP_CONNECT_REMOTE	shadowsocks/udprelay.py	/^CMD_RSP_CONNECT_REMOTE = 3$/;"	v
CMD_SYN_STATUS	shadowsocks/udprelay.py	/^CMD_SYN_STATUS = 5$/;"	v
CMD_SYN_STATUS_64	shadowsocks/udprelay.py	/^CMD_SYN_STATUS_64 = 7$/;"	v
CMD_UDP_ASSOCIATE	shadowsocks/tcprelay.py	/^CMD_UDP_ASSOCIATE = 3$/;"	v
CMD_VER_STR	shadowsocks/udprelay.py	/^CMD_VER_STR = b"\\x08"$/;"	v
Config	asyncmgr.py	/^import Config$/;"	i
CtypesCrypto	shadowsocks/crypto/ctypes_openssl.py	/^class CtypesCrypto(object):$/;"	c
DNSResolver	shadowsocks/asyncdns.py	/^class DNSResolver(object):$/;"	c
DNSResponse	shadowsocks/asyncdns.py	/^class DNSResponse(object):$/;"	c
DOUBLE_SEND_BEG_IDS	shadowsocks/udprelay.py	/^DOUBLE_SEND_BEG_IDS = 16$/;"	v
DbTransfer	db_transfer.py	/^class DbTransfer(TransferBase):$/;"	c
Dbv3Transfer	db_transfer.py	/^class Dbv3Transfer(DbTransfer):$/;"	c
EVENT_NAMES	shadowsocks/eventloop.py	/^EVENT_NAMES = {$/;"	v
EVP_BytesToKey	shadowsocks/encrypt.py	/^def EVP_BytesToKey(password, key_len, iv_len):$/;"	f
Encryptor	shadowsocks/encrypt.py	/^class Encryptor(object):$/;"	c
EventLoop	shadowsocks/eventloop.py	/^class EventLoop(object):$/;"	c
ExtensionPlugin	tests/nose_plugin.py	/^class ExtensionPlugin(Plugin):$/;"	c
IPNetwork	shadowsocks/common.py	/^class IPNetwork(object):$/;"	c
IPNetwork	shadowsocks/shell.py	/^from shadowsocks.common import to_bytes, to_str, IPNetwork, PortRange$/;"	i
IPV6_CONNECTION_SUPPORT	shadowsocks/asyncdns.py	/^IPV6_CONNECTION_SUPPORT = detect_ipv6_supprot()$/;"	v
KqueueLoop	shadowsocks/eventloop.py	/^class KqueueLoop(object):$/;"	c
LRUCache	shadowsocks/lru_cache.py	/^class LRUCache(collections.MutableMapping):$/;"	c
MAX_EVENTS	shadowsocks/eventloop.py	/^    MAX_EVENTS = 1024$/;"	v	class:KqueueLoop
MSG_FASTOPEN	shadowsocks/tcprelay.py	/^MSG_FASTOPEN = 0x20000000$/;"	v
MUAPI_CONFIG	apiconfig.py	/^MUAPI_CONFIG = 'usermuapi.json'$/;"	v
MUDB_FILE	apiconfig.py	/^MUDB_FILE = 'mudb.json'$/;"	v
MYSQL_CONFIG	apiconfig.py	/^MYSQL_CONFIG = 'usermysql.json'$/;"	v
MainHandler	tests/coverage_server.py	/^    class MainHandler(tornado.web.RequestHandler):$/;"	c
MainThread	server.py	/^class MainThread(threading.Thread):$/;"	c
MainThread	server_pool.py	/^class MainThread(threading.Thread):$/;"	c
Manager	shadowsocks/manager.py	/^class Manager(object):$/;"	c
MuJsonLoader	mujson_mgr.py	/^class MuJsonLoader(object):$/;"	c
MuJsonTransfer	db_transfer.py	/^class MuJsonTransfer(TransferBase):$/;"	c
MuMgr	mujson_mgr.py	/^class MuMgr(object):$/;"	c
NoneCipher	shadowsocks/crypto/table.py	/^class NoneCipher(object):$/;"	c
OpenSSLCrypto	shadowsocks/crypto/openssl.py	/^class OpenSSLCrypto(object):$/;"	c
OrderedDict	shadowsocks/lru_cache.py	/^    from collections import OrderedDict$/;"	i
OrderedDict	shadowsocks/lru_cache.py	/^    from shadowsocks.ordereddict import OrderedDict$/;"	i
OrderedDict	shadowsocks/ordereddict.py	/^class OrderedDict(dict):$/;"	c
PIPE	tests/test.py	/^from subprocess import Popen, PIPE$/;"	i
POLL_ERR	shadowsocks/eventloop.py	/^POLL_ERR = 0x08$/;"	v
POLL_HUP	shadowsocks/eventloop.py	/^POLL_HUP = 0x10$/;"	v
POLL_IN	shadowsocks/eventloop.py	/^POLL_IN = 0x01$/;"	v
POLL_NULL	shadowsocks/eventloop.py	/^POLL_NULL = 0x00$/;"	v
POLL_NVAL	shadowsocks/eventloop.py	/^POLL_NVAL = 0x20$/;"	v
POLL_OUT	shadowsocks/eventloop.py	/^POLL_OUT = 0x04$/;"	v
POST_MTU_MAX	shadowsocks/udprelay.py	/^POST_MTU_MAX = 1400$/;"	v
POST_MTU_MIN	shadowsocks/udprelay.py	/^POST_MTU_MIN = 500$/;"	v
PacketInfo	shadowsocks/udprelay.py	/^class PacketInfo(object):$/;"	c
Plugin	tests/nose_plugin.py	/^from nose.plugins.base import Plugin$/;"	i
Popen	tests/test.py	/^from subprocess import Popen, PIPE$/;"	i
PortRange	shadowsocks/common.py	/^class PortRange(object):$/;"	c
PortRange	shadowsocks/shell.py	/^from shadowsocks.common import to_bytes, to_str, IPNetwork, PortRange$/;"	i
QCLASS_IN	shadowsocks/asyncdns.py	/^QCLASS_IN = 1$/;"	v
QTYPE_A	shadowsocks/asyncdns.py	/^QTYPE_A = 1$/;"	v
QTYPE_AAAA	shadowsocks/asyncdns.py	/^QTYPE_AAAA = 28$/;"	v
QTYPE_ANY	shadowsocks/asyncdns.py	/^QTYPE_ANY = 255$/;"	v
QTYPE_CNAME	shadowsocks/asyncdns.py	/^QTYPE_CNAME = 5$/;"	v
QTYPE_NS	shadowsocks/asyncdns.py	/^QTYPE_NS = 2$/;"	v
RSP_STATE_CONNECTED	shadowsocks/udprelay.py	/^RSP_STATE_CONNECTED = b"\\x01"$/;"	v
RSP_STATE_CONNECTEDREMOTE	shadowsocks/udprelay.py	/^RSP_STATE_CONNECTEDREMOTE = b"\\x02"$/;"	v
RSP_STATE_DISCONNECT	shadowsocks/udprelay.py	/^RSP_STATE_DISCONNECT = b"\\x04"$/;"	v
RSP_STATE_EMPTY	shadowsocks/udprelay.py	/^RSP_STATE_EMPTY = b""$/;"	v
RSP_STATE_ERROR	shadowsocks/udprelay.py	/^RSP_STATE_ERROR = b"\\x03"$/;"	v
RSP_STATE_REDIRECT	shadowsocks/udprelay.py	/^RSP_STATE_REDIRECT = b"\\x05"$/;"	v
RSP_STATE_REJECT	shadowsocks/udprelay.py	/^RSP_STATE_REJECT = b"\\x00"$/;"	v
RecvQueue	shadowsocks/udprelay.py	/^class RecvQueue(object):$/;"	c
SENDING_WINDOW_SIZE	shadowsocks/udprelay.py	/^SENDING_WINDOW_SIZE = 8192$/;"	v
SERVER_IP	tests/test_udp_src.py	/^SERVER_IP = '127.0.0.1'$/;"	v
SERVER_PORT	tests/test_udp_src.py	/^SERVER_PORT = 1081$/;"	v
SERVER_PUB_ADDR	apiconfig.py	/^SERVER_PUB_ADDR = '127.0.0.1' # mujson_mgr need this to generate ssr link$/;"	v
STAGE_ADDR	shadowsocks/tcprelay.py	/^STAGE_ADDR = 1$/;"	v
STAGE_CONNECTING	shadowsocks/tcprelay.py	/^STAGE_CONNECTING = 4$/;"	v
STAGE_CONNECTING	shadowsocks/udprelay.py	/^STAGE_CONNECTING = 3$/;"	v
STAGE_DESTROYED	shadowsocks/tcprelay.py	/^STAGE_DESTROYED = -1$/;"	v
STAGE_DESTROYED	shadowsocks/udprelay.py	/^STAGE_DESTROYED = -1$/;"	v
STAGE_DNS	shadowsocks/tcprelay.py	/^STAGE_DNS = 3$/;"	v
STAGE_DNS	shadowsocks/udprelay.py	/^STAGE_DNS = 2$/;"	v
STAGE_INIT	shadowsocks/tcprelay.py	/^STAGE_INIT = 0$/;"	v
STAGE_INIT	shadowsocks/udprelay.py	/^STAGE_INIT = 0$/;"	v
STAGE_RSP_ID	shadowsocks/udprelay.py	/^STAGE_RSP_ID = 1$/;"	v
STAGE_STREAM	shadowsocks/tcprelay.py	/^STAGE_STREAM = 5$/;"	v
STAGE_STREAM	shadowsocks/udprelay.py	/^STAGE_STREAM = 4$/;"	v
STAGE_UDP_ASSOC	shadowsocks/tcprelay.py	/^STAGE_UDP_ASSOC = 2$/;"	v
STATUS_IPV4	shadowsocks/asyncdns.py	/^STATUS_IPV4 = 0$/;"	v
STATUS_IPV6	shadowsocks/asyncdns.py	/^STATUS_IPV6 = 1$/;"	v
STAT_SEND_LIMIT	shadowsocks/manager.py	/^STAT_SEND_LIMIT = 50$/;"	v
STREAM_DOWN	shadowsocks/tcprelay.py	/^STREAM_DOWN = 1$/;"	v
STREAM_DOWN	shadowsocks/udprelay.py	/^STREAM_DOWN = 1$/;"	v
STREAM_UP	shadowsocks/tcprelay.py	/^STREAM_UP = 0$/;"	v
STREAM_UP	shadowsocks/udprelay.py	/^STREAM_UP = 0$/;"	v
SWEEP_MAX_ITEMS	shadowsocks/lru_cache.py	/^SWEEP_MAX_ITEMS = 1024$/;"	v
Salsa20Crypto	shadowsocks/crypto/ctypes_libsodium.py	/^class Salsa20Crypto(object):$/;"	c
SelectLoop	shadowsocks/eventloop.py	/^class SelectLoop(object):$/;"	c
SendingQueue	shadowsocks/udprelay.py	/^class SendingQueue(object):$/;"	c
ServerMgr	asyncmgr.py	/^class ServerMgr(object):$/;"	c
ServerPool	db_transfer.py	/^from server_pool import ServerPool$/;"	i
ServerPool	server_pool.py	/^class ServerPool(object):$/;"	c
SodiumCrypto	shadowsocks/crypto/sodium.py	/^class SodiumCrypto(object):$/;"	c
TCPRelay	shadowsocks/tcprelay.py	/^class TCPRelay(object):$/;"	c
TCPRelayHandler	shadowsocks/tcprelay.py	/^class TCPRelayHandler(object):$/;"	c
TCPRelayHandler	shadowsocks/udprelay.py	/^class TCPRelayHandler(object):$/;"	c
TIMEOUTS_CLEAN_SIZE	shadowsocks/tcprelay.py	/^TIMEOUTS_CLEAN_SIZE = 512$/;"	v
TIMEOUTS_CLEAN_SIZE	shadowsocks/udprelay.py	/^TIMEOUTS_CLEAN_SIZE = 512$/;"	v
TIMEOUT_PRECISION	shadowsocks/eventloop.py	/^TIMEOUT_PRECISION = 5$/;"	v
TableCipher	shadowsocks/crypto/table.py	/^class TableCipher(object):$/;"	c
TransferBase	db_transfer.py	/^class TransferBase(object):$/;"	c
UDPLocalAddress	shadowsocks/udprelay.py	/^class UDPLocalAddress(object):$/;"	c
UDPRelay	shadowsocks/udprelay.py	/^class UDPRelay(object):$/;"	c
UDP_MAX_BUF_SIZE	shadowsocks/tcprelay.py	/^UDP_MAX_BUF_SIZE = 65536$/;"	v
UPDATE_TIME	apiconfig.py	/^UPDATE_TIME = 60$/;"	v
VALID_HOSTNAME	shadowsocks/asyncdns.py	/^VALID_HOSTNAME = re.compile(br"(?!-)[A-Z\\d_-]{1,63}(?<!-)$", re.IGNORECASE)$/;"	v
VERBOSE_LEVEL	shadowsocks/shell.py	/^VERBOSE_LEVEL = 5$/;"	v
WAIT_STATUS_INIT	shadowsocks/tcprelay.py	/^WAIT_STATUS_INIT = 0$/;"	v
WAIT_STATUS_INIT	shadowsocks/udprelay.py	/^WAIT_STATUS_INIT = 0$/;"	v
WAIT_STATUS_READING	shadowsocks/tcprelay.py	/^WAIT_STATUS_READING = 1$/;"	v
WAIT_STATUS_READING	shadowsocks/udprelay.py	/^WAIT_STATUS_READING = 1$/;"	v
WAIT_STATUS_READWRITING	shadowsocks/tcprelay.py	/^WAIT_STATUS_READWRITING = WAIT_STATUS_READING | WAIT_STATUS_WRITING$/;"	v
WAIT_STATUS_READWRITING	shadowsocks/udprelay.py	/^WAIT_STATUS_READWRITING = WAIT_STATUS_READING | WAIT_STATUS_WRITING$/;"	v
WAIT_STATUS_WRITING	shadowsocks/tcprelay.py	/^WAIT_STATUS_WRITING = 2$/;"	v
WAIT_STATUS_WRITING	shadowsocks/udprelay.py	/^WAIT_STATUS_WRITING = 2$/;"	v
__all__	shadowsocks/crypto/ctypes_libsodium.py	/^__all__ = ['ciphers']$/;"	v
__all__	shadowsocks/crypto/ctypes_openssl.py	/^__all__ = ['ciphers']$/;"	v
__all__	shadowsocks/crypto/openssl.py	/^__all__ = ['ciphers']$/;"	v
__all__	shadowsocks/crypto/rc4_md5.py	/^__all__ = ['ciphers']$/;"	v
__all__	shadowsocks/crypto/sodium.py	/^__all__ = ['ciphers']$/;"	v
__all__	shadowsocks/crypto/table.py	/^__all__ = ['ciphers']$/;"	v
__all__	shadowsocks/eventloop.py	/^__all__ = ['EventLoop', 'POLL_NULL', 'POLL_IN', 'POLL_OUT', 'POLL_ERR',$/;"	v
__cmp__	shadowsocks/common.py	/^    def __cmp__(self, other):$/;"	m	class:IPNetwork	file:
__cmp__	shadowsocks/common.py	/^    def __cmp__(self, other):$/;"	m	class:PortRange	file:
__contains__	shadowsocks/common.py	/^    def __contains__(self, addr):$/;"	m	class:IPNetwork	file:
__contains__	shadowsocks/common.py	/^    def __contains__(self, val):$/;"	m	class:PortRange	file:
__del__	shadowsocks/crypto/ctypes_openssl.py	/^    def __del__(self):$/;"	m	class:CtypesCrypto	file:
__del__	shadowsocks/crypto/openssl.py	/^    def __del__(self):$/;"	m	class:OpenSSLCrypto	file:
__del__	shadowsocks/eventloop.py	/^    def __del__(self):$/;"	m	class:EventLoop	file:
__delitem__	shadowsocks/lru_cache.py	/^    def __delitem__(self, key):$/;"	m	class:LRUCache	file:
__delitem__	shadowsocks/ordereddict.py	/^    def __delitem__(self, key, dict_delitem=dict.__delitem__):$/;"	m	class:OrderedDict	file:
__eq__	shadowsocks/ordereddict.py	/^    def __eq__(self, other):$/;"	m	class:OrderedDict	file:
__getitem__	shadowsocks/lru_cache.py	/^    def __getitem__(self, key):$/;"	m	class:LRUCache	file:
__hash__	shadowsocks/tcprelay.py	/^    def __hash__(self):$/;"	m	class:TCPRelayHandler	file:
__hash__	shadowsocks/udprelay.py	/^    def __hash__(self):$/;"	m	class:TCPRelayHandler	file:
__init__	asyncmgr.py	/^    def __init__(self):$/;"	m	class:ServerMgr
__init__	db_transfer.py	/^	def __init__(self):$/;"	m	class:DbTransfer
__init__	db_transfer.py	/^	def __init__(self):$/;"	m	class:Dbv3Transfer
__init__	db_transfer.py	/^	def __init__(self):$/;"	m	class:MuJsonTransfer
__init__	db_transfer.py	/^	def __init__(self):$/;"	m	class:TransferBase
__init__	mujson_mgr.py	/^	def __init__(self):$/;"	m	class:MuJsonLoader
__init__	mujson_mgr.py	/^	def __init__(self):$/;"	m	class:MuMgr
__init__	server.py	/^	def __init__(self, obj):$/;"	m	class:MainThread
__init__	server_pool.py	/^	def __init__(self):$/;"	m	class:ServerPool
__init__	server_pool.py	/^	def __init__(self, params):$/;"	m	class:MainThread
__init__	shadowsocks/asyncdns.py	/^    def __init__(self):$/;"	m	class:DNSResolver
__init__	shadowsocks/asyncdns.py	/^    def __init__(self):$/;"	m	class:DNSResponse
__init__	shadowsocks/common.py	/^    def __init__(self, addrs):$/;"	m	class:IPNetwork
__init__	shadowsocks/common.py	/^    def __init__(self, range_str):$/;"	m	class:PortRange
__init__	shadowsocks/crypto/ctypes_libsodium.py	/^    def __init__(self, cipher_name, key, iv, op):$/;"	m	class:Salsa20Crypto
__init__	shadowsocks/crypto/ctypes_openssl.py	/^    def __init__(self, cipher_name, key, iv, op):$/;"	m	class:CtypesCrypto
__init__	shadowsocks/crypto/openssl.py	/^    def __init__(self, cipher_name, key, iv, op):$/;"	m	class:OpenSSLCrypto
__init__	shadowsocks/crypto/sodium.py	/^    def __init__(self, cipher_name, key, iv, op):$/;"	m	class:SodiumCrypto
__init__	shadowsocks/crypto/table.py	/^    def __init__(self, cipher_name, key, iv, op):$/;"	m	class:NoneCipher
__init__	shadowsocks/crypto/table.py	/^    def __init__(self, cipher_name, key, iv, op):$/;"	m	class:TableCipher
__init__	shadowsocks/encrypt.py	/^    def __init__(self, key, method):$/;"	m	class:Encryptor
__init__	shadowsocks/eventloop.py	/^    def __init__(self):$/;"	m	class:EventLoop
__init__	shadowsocks/eventloop.py	/^    def __init__(self):$/;"	m	class:KqueueLoop
__init__	shadowsocks/eventloop.py	/^    def __init__(self):$/;"	m	class:SelectLoop
__init__	shadowsocks/lru_cache.py	/^    def __init__(self, timeout=60, close_callback=None, *args, **kwargs):$/;"	m	class:LRUCache
__init__	shadowsocks/manager.py	/^    def __init__(self, config):$/;"	m	class:Manager
__init__	shadowsocks/obfs.py	/^    def __init__(self, data):$/;"	m	class:server_info
__init__	shadowsocks/obfs.py	/^    def __init__(self, method):$/;"	m	class:obfs
__init__	shadowsocks/obfsplugin/auth.py	/^    def __init__(self):$/;"	m	class:obfs_auth_data
__init__	shadowsocks/obfsplugin/auth.py	/^    def __init__(self):$/;"	m	class:obfs_auth_v2_data
__init__	shadowsocks/obfsplugin/auth.py	/^    def __init__(self):$/;"	m	class:obfs_verify_data
__init__	shadowsocks/obfsplugin/auth.py	/^    def __init__(self, begin_id):$/;"	m	class:client_queue
__init__	shadowsocks/obfsplugin/auth.py	/^    def __init__(self, method):$/;"	m	class:auth_sha1
__init__	shadowsocks/obfsplugin/auth.py	/^    def __init__(self, method):$/;"	m	class:auth_sha1_v2
__init__	shadowsocks/obfsplugin/auth.py	/^    def __init__(self, method):$/;"	m	class:auth_sha1_v3
__init__	shadowsocks/obfsplugin/auth.py	/^    def __init__(self, method):$/;"	m	class:verify_base
__init__	shadowsocks/obfsplugin/http_simple.py	/^    def __init__(self, method):$/;"	m	class:http_post
__init__	shadowsocks/obfsplugin/http_simple.py	/^    def __init__(self, method):$/;"	m	class:http_simple
__init__	shadowsocks/obfsplugin/http_simple.py	/^    def __init__(self, method):$/;"	m	class:random_head
__init__	shadowsocks/obfsplugin/obfs_tls.py	/^    def __init__(self):$/;"	m	class:obfs_auth_data
__init__	shadowsocks/obfsplugin/obfs_tls.py	/^    def __init__(self, method):$/;"	m	class:tls_ticket_auth
__init__	shadowsocks/obfsplugin/plain.py	/^    def __init__(self, method):$/;"	m	class:plain
__init__	shadowsocks/obfsplugin/verify.py	/^    def __init__(self):$/;"	m	class:obfs_verify_data
__init__	shadowsocks/obfsplugin/verify.py	/^    def __init__(self, method):$/;"	m	class:verify_base
__init__	shadowsocks/obfsplugin/verify.py	/^    def __init__(self, method):$/;"	m	class:verify_deflate
__init__	shadowsocks/obfsplugin/verify.py	/^    def __init__(self, method):$/;"	m	class:verify_sha1
__init__	shadowsocks/obfsplugin/verify.py	/^    def __init__(self, method):$/;"	m	class:verify_simple
__init__	shadowsocks/ordereddict.py	/^    def __init__(*args, **kwds):$/;"	m	class:OrderedDict
__init__	shadowsocks/tcprelay.py	/^    def __init__(self, config, dns_resolver, is_local, stat_callback=None, stat_counter=None):$/;"	m	class:TCPRelay
__init__	shadowsocks/tcprelay.py	/^    def __init__(self, server, fd_to_handlers, loop, local_sock, config,$/;"	m	class:TCPRelayHandler
__init__	shadowsocks/udprelay.py	/^    def __init__(self):$/;"	m	class:AddressMap
__init__	shadowsocks/udprelay.py	/^    def __init__(self):$/;"	m	class:RecvQueue
__init__	shadowsocks/udprelay.py	/^    def __init__(self):$/;"	m	class:SendingQueue
__init__	shadowsocks/udprelay.py	/^    def __init__(self, addr):$/;"	m	class:UDPLocalAddress
__init__	shadowsocks/udprelay.py	/^    def __init__(self, config, dns_resolver, is_local, stat_callback=None, stat_counter=None):$/;"	m	class:UDPRelay
__init__	shadowsocks/udprelay.py	/^    def __init__(self, data):$/;"	m	class:PacketInfo
__init__	shadowsocks/udprelay.py	/^    def __init__(self, server, reqid_to_handlers, fd_to_handlers, loop,$/;"	m	class:TCPRelayHandler
__iter__	shadowsocks/lru_cache.py	/^    def __iter__(self):$/;"	m	class:LRUCache	file:
__iter__	shadowsocks/ordereddict.py	/^    def __iter__(self):$/;"	m	class:OrderedDict	file:
__len__	shadowsocks/lru_cache.py	/^    def __len__(self):$/;"	m	class:LRUCache	file:
__marker	shadowsocks/ordereddict.py	/^    __marker = object()$/;"	v	class:OrderedDict
__ne__	shadowsocks/ordereddict.py	/^    def __ne__(self, other):$/;"	m	class:OrderedDict	file:
__reduce__	shadowsocks/ordereddict.py	/^    def __reduce__(self):$/;"	m	class:OrderedDict	file:
__repr__	shadowsocks/ordereddict.py	/^    def __repr__(self, _repr_running={}):$/;"	m	class:OrderedDict	file:
__reversed__	shadowsocks/ordereddict.py	/^    def __reversed__(self):$/;"	m	class:OrderedDict	file:
__setitem__	shadowsocks/lru_cache.py	/^    def __setitem__(self, key, value):$/;"	m	class:LRUCache	file:
__setitem__	shadowsocks/ordereddict.py	/^    def __setitem__(self, key, value, dict_setitem=dict.__setitem__):$/;"	m	class:OrderedDict	file:
__str__	shadowsocks/asyncdns.py	/^    def __str__(self):$/;"	m	class:DNSResponse	file:
__update	shadowsocks/ordereddict.py	/^    __update = update # let subclasses override update without breaking __init__$/;"	v	class:OrderedDict
_assert_cleanup	tests/assert.sh	/^_assert_cleanup() {$/;"	f
_assert_fail	tests/assert.sh	/^_assert_fail() {$/;"	f
_assert_reset	tests/assert.sh	/^_assert_reset() {$/;"	f
_call_callback	shadowsocks/asyncdns.py	/^    def _call_callback(self, hostname, ip, error=None):$/;"	m	class:DNSResolver
_chr	shadowsocks/common.py	/^_chr = chr$/;"	v
_close_client	shadowsocks/udprelay.py	/^    def _close_client(self, client):$/;"	m	class:UDPRelay
_control	shadowsocks/eventloop.py	/^    def _control(self, fd, mode, flags):$/;"	m	class:KqueueLoop
_create_remote_socket	shadowsocks/tcprelay.py	/^    def _create_remote_socket(self, ip, port):$/;"	m	class:TCPRelayHandler
_create_remote_socket	shadowsocks/udprelay.py	/^    def _create_remote_socket(self, ip, port):$/;"	m	class:TCPRelayHandler
_decode_dict	shadowsocks/shell.py	/^def _decode_dict(data):$/;"	f
_decode_list	shadowsocks/shell.py	/^def _decode_list(data):$/;"	f
_get_a_server	shadowsocks/tcprelay.py	/^    def _get_a_server(self):$/;"	m	class:TCPRelayHandler
_get_a_server	shadowsocks/udprelay.py	/^    def _get_a_server(self):$/;"	m	class:UDPRelay
_get_head_size	shadowsocks/tcprelay.py	/^    def _get_head_size(self, buf, def_value):$/;"	m	class:TCPRelayHandler
_get_redirect_host	shadowsocks/tcprelay.py	/^    def _get_redirect_host(self, client_address, ogn_data):$/;"	m	class:TCPRelayHandler
_handel_protocol_error	shadowsocks/tcprelay.py	/^    def _handel_protocol_error(self, client_address, ogn_data):$/;"	m	class:TCPRelayHandler
_handel_protocol_error	shadowsocks/udprelay.py	/^    def _handel_protocol_error(self, client_address, ogn_data):$/;"	m	class:UDPRelay
_handle_client	shadowsocks/udprelay.py	/^    def _handle_client(self, sock):$/;"	m	class:UDPRelay
_handle_data	asyncmgr.py	/^    def _handle_data(self, sock):$/;"	m	class:ServerMgr
_handle_data	shadowsocks/asyncdns.py	/^    def _handle_data(self, data):$/;"	m	class:DNSResolver
_handle_dns_resolved	shadowsocks/tcprelay.py	/^    def _handle_dns_resolved(self, result, error):$/;"	m	class:TCPRelayHandler
_handle_dns_resolved	shadowsocks/udprelay.py	/^    def _handle_dns_resolved(self, result, error):$/;"	m	class:TCPRelayHandler
_handle_server	shadowsocks/udprelay.py	/^    def _handle_server(self):$/;"	m	class:UDPRelay
_handle_stage_addr	shadowsocks/tcprelay.py	/^    def _handle_stage_addr(self, ogn_data, data):$/;"	m	class:TCPRelayHandler
_handle_stage_connecting	shadowsocks/tcprelay.py	/^    def _handle_stage_connecting(self, data):$/;"	m	class:TCPRelayHandler
_handle_tcp_over_udp	shadowsocks/udprelay.py	/^    def _handle_tcp_over_udp(self, data, r_addr):$/;"	m	class:UDPRelay
_log_error	shadowsocks/tcprelay.py	/^    def _log_error(self, e):$/;"	m	class:TCPRelayHandler
_log_error	shadowsocks/udprelay.py	/^    def _log_error(self, e):$/;"	m	class:TCPRelayHandler
_loop	server_pool.py	/^	def _loop(loop, dns_resolver, mgr):$/;"	m	class:ServerPool
_on_local_error	shadowsocks/tcprelay.py	/^    def _on_local_error(self):$/;"	m	class:TCPRelayHandler
_on_local_error	shadowsocks/udprelay.py	/^    def _on_local_error(self):$/;"	m	class:TCPRelayHandler
_on_local_read	shadowsocks/tcprelay.py	/^    def _on_local_read(self):$/;"	m	class:TCPRelayHandler
_on_local_read	shadowsocks/udprelay.py	/^    def _on_local_read(self):$/;"	m	class:TCPRelayHandler
_on_local_write	shadowsocks/tcprelay.py	/^    def _on_local_write(self):$/;"	m	class:TCPRelayHandler
_on_local_write	shadowsocks/udprelay.py	/^    def _on_local_write(self):$/;"	m	class:TCPRelayHandler
_on_remote_error	shadowsocks/tcprelay.py	/^    def _on_remote_error(self):$/;"	m	class:TCPRelayHandler
_on_remote_error	shadowsocks/udprelay.py	/^    def _on_remote_error(self):$/;"	m	class:TCPRelayHandler
_on_remote_read	shadowsocks/tcprelay.py	/^    def _on_remote_read(self, is_remote_sock):$/;"	m	class:TCPRelayHandler
_on_remote_read	shadowsocks/udprelay.py	/^    def _on_remote_read(self):$/;"	m	class:TCPRelayHandler
_on_remote_write	shadowsocks/tcprelay.py	/^    def _on_remote_write(self):$/;"	m	class:TCPRelayHandler
_on_remote_write	shadowsocks/udprelay.py	/^    def _on_remote_write(self):$/;"	m	class:TCPRelayHandler
_ord	shadowsocks/common.py	/^_ord = ord$/;"	v
_pack_post_data	shadowsocks/udprelay.py	/^    def _pack_post_data(self, cmd, pack_id, data):$/;"	m	class:TCPRelayHandler
_pack_post_data_64	shadowsocks/udprelay.py	/^    def _pack_post_data_64(self, cmd, send_id, pack_id, data):$/;"	m	class:TCPRelayHandler
_pack_rnd_data	shadowsocks/udprelay.py	/^    def _pack_rnd_data(self, data):$/;"	m	class:TCPRelayHandler
_pack_rsp_data	shadowsocks/udprelay.py	/^    def _pack_rsp_data(self, cmd, data):$/;"	m	class:TCPRelayHandler
_pack_rsp_data	shadowsocks/udprelay.py	/^    def _pack_rsp_data(self, cmd, request_id, data):$/;"	m	class:UDPRelay
_parse_command	shadowsocks/manager.py	/^    def _parse_command(self, data):$/;"	m	class:Manager
_parse_hosts	shadowsocks/asyncdns.py	/^    def _parse_hosts(self):$/;"	m	class:DNSResolver
_parse_resolv	shadowsocks/asyncdns.py	/^    def _parse_resolv(self):$/;"	m	class:DNSResolver
_pre_parse_udp_header	shadowsocks/udprelay.py	/^    def _pre_parse_udp_header(self, data):$/;"	m	class:UDPRelay
_send_control_data	shadowsocks/manager.py	/^    def _send_control_data(self, data):$/;"	m	class:Manager
_send_req	shadowsocks/asyncdns.py	/^    def _send_req(self, hostname, qtype):$/;"	m	class:DNSResolver
_sweep_timeout	shadowsocks/tcprelay.py	/^    def _sweep_timeout(self):$/;"	m	class:TCPRelay
_sweep_timeout	shadowsocks/udprelay.py	/^    def _sweep_timeout(self):$/;"	m	class:UDPRelay
_update_activity	shadowsocks/tcprelay.py	/^    def _update_activity(self, data_len=0):$/;"	m	class:TCPRelayHandler
_update_activity	shadowsocks/udprelay.py	/^    def _update_activity(self):$/;"	m	class:TCPRelayHandler
_update_stream	shadowsocks/tcprelay.py	/^    def _update_stream(self, stream, status):$/;"	m	class:TCPRelayHandler
_update_stream	shadowsocks/udprelay.py	/^    def _update_stream(self, stream, status):$/;"	m	class:TCPRelayHandler
_write_to_sock	shadowsocks/tcprelay.py	/^    def _write_to_sock(self, data, sock):$/;"	m	class:TCPRelayHandler
_write_to_sock	shadowsocks/udprelay.py	/^    def _write_to_sock(self, data, sock, addr = None):$/;"	m	class:TCPRelayHandler
absolute_import	shadowsocks/__init__.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/asyncdns.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/common.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/crypto/__init__.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/crypto/ctypes_libsodium.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/crypto/ctypes_openssl.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/crypto/openssl.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/crypto/rc4_md5.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/crypto/sodium.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/crypto/table.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/crypto/util.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/daemon.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/encrypt.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/encrypt_test.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/eventloop.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/local.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/lru_cache.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/manager.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/obfs.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/obfsplugin/__init__.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/obfsplugin/auth.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/obfsplugin/http_simple.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/obfsplugin/obfs_tls.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/obfsplugin/plain.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/obfsplugin/verify.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/server.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/shell.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/tcprelay.py	/^    with_statement$/;"	i
absolute_import	shadowsocks/udprelay.py	/^    with_statement$/;"	i
absolute_import	tests/test.py	/^    with_statement$/;"	i
absolute_import	utils/autoban.py	/^    with_statement$/;"	i
add	mujson_mgr.py	/^	def add(self, user):$/;"	m	class:MuMgr
add	shadowsocks/eventloop.py	/^    def add(self, f, mode, handler):$/;"	m	class:EventLoop
add	shadowsocks/udprelay.py	/^    def add(self, addr):$/;"	m	class:AddressMap
add_connection	shadowsocks/tcprelay.py	/^    def add_connection(self, val):$/;"	m	class:TCPRelay
add_local_address	shadowsocks/udprelay.py	/^    def add_local_address(self, addr):$/;"	m	class:TCPRelayHandler
add_network	shadowsocks/common.py	/^    def add_network(self, addr):$/;"	m	class:IPNetwork
add_periodic	shadowsocks/eventloop.py	/^    def add_periodic(self, callback):$/;"	m	class:EventLoop
add_port	shadowsocks/manager.py	/^    def add_port(self, config):$/;"	m	class:Manager
add_to_loop	asyncmgr.py	/^    def add_to_loop(self, loop):$/;"	m	class:ServerMgr
add_to_loop	shadowsocks/asyncdns.py	/^    def add_to_loop(self, loop):$/;"	m	class:DNSResolver
add_to_loop	shadowsocks/tcprelay.py	/^    def add_to_loop(self, loop):$/;"	m	class:TCPRelay
add_to_loop	shadowsocks/udprelay.py	/^    def add_to_loop(self, loop):$/;"	m	class:UDPRelay
append	shadowsocks/udprelay.py	/^    def append(self, data):$/;"	m	class:SendingQueue
application	tests/coverage_server.py	/^    application = tornado.web.Application([$/;"	v
argparse	tests/test.py	/^import argparse$/;"	i
argparse	utils/autoban.py	/^import argparse$/;"	i
assert	tests/assert.sh	/^assert() {$/;"	f
assert_end	tests/assert.sh	/^assert_end() {$/;"	f
assert_raises	tests/assert.sh	/^assert_raises() {$/;"	f
asyncdns	server_pool.py	/^from shadowsocks import shell, eventloop, tcprelay, udprelay, asyncdns, common$/;"	i
asyncdns	shadowsocks/local.py	/^from shadowsocks import shell, daemon, eventloop, tcprelay, udprelay, asyncdns$/;"	i
asyncdns	shadowsocks/manager.py	/^from shadowsocks import common, eventloop, tcprelay, udprelay, asyncdns, shell$/;"	i
asyncdns	shadowsocks/server.py	/^    asyncdns, manager$/;"	i
auth	shadowsocks/obfs.py	/^from shadowsocks.obfsplugin import plain, http_simple, obfs_tls, verify, auth$/;"	i
auth_data	shadowsocks/obfsplugin/auth.py	/^    def auth_data(self):$/;"	m	class:auth_sha1
auth_data	shadowsocks/obfsplugin/auth.py	/^    def auth_data(self):$/;"	m	class:auth_sha1_v2
auth_data	shadowsocks/obfsplugin/auth.py	/^    def auth_data(self):$/;"	m	class:auth_sha1_v3
auth_sha1	shadowsocks/obfsplugin/auth.py	/^class auth_sha1(verify_base):$/;"	c
auth_sha1_v2	shadowsocks/obfsplugin/auth.py	/^class auth_sha1_v2(verify_base):$/;"	c
auth_sha1_v3	shadowsocks/obfsplugin/auth.py	/^class auth_sha1_v3(verify_base):$/;"	c
author	setup.py	/^    author='clowwindy',$/;"	v
author_email	setup.py	/^    author_email='clowwindy42@gmail.com',$/;"	v
banned	utils/autoban.py	/^    banned = set()$/;"	v
base64	mujson_mgr.py	/^import base64$/;"	i
base64	shadowsocks/obfsplugin/auth.py	/^import base64$/;"	i
base64	shadowsocks/obfsplugin/http_simple.py	/^import base64$/;"	i
base64	shadowsocks/obfsplugin/obfs_tls.py	/^import base64$/;"	i
base64	shadowsocks/obfsplugin/verify.py	/^import base64$/;"	i
binascii	shadowsocks/common.py	/^import binascii$/;"	i
binascii	shadowsocks/obfsplugin/auth.py	/^import binascii$/;"	i
binascii	shadowsocks/obfsplugin/http_simple.py	/^import binascii$/;"	i
binascii	shadowsocks/obfsplugin/obfs_tls.py	/^import binascii$/;"	i
binascii	shadowsocks/obfsplugin/verify.py	/^import binascii$/;"	i
binascii	shadowsocks/tcprelay.py	/^import binascii$/;"	i
binascii	shadowsocks/udprelay.py	/^import binascii$/;"	i
boundary	shadowsocks/obfsplugin/http_simple.py	/^    def boundary(self):$/;"	m	class:http_post
buf_size	shadowsocks/crypto/ctypes_libsodium.py	/^buf_size = 2048$/;"	v
buf_size	shadowsocks/crypto/ctypes_openssl.py	/^buf_size = 2048$/;"	v
buf_size	shadowsocks/crypto/openssl.py	/^buf_size = 2048$/;"	v
buf_size	shadowsocks/crypto/sodium.py	/^buf_size = 2048$/;"	v
build_address	shadowsocks/asyncdns.py	/^def build_address(address):$/;"	f
build_request	shadowsocks/asyncdns.py	/^def build_request(address, qtype):$/;"	f
byref	shadowsocks/crypto/ctypes_libsodium.py	/^    create_string_buffer, c_void_p$/;"	i
byref	shadowsocks/crypto/ctypes_openssl.py	/^    create_string_buffer, c_void_p$/;"	i
byref	shadowsocks/crypto/openssl.py	/^    create_string_buffer, c_void_p$/;"	i
byref	shadowsocks/crypto/sodium.py	/^    create_string_buffer, c_void_p$/;"	i
c_char_p	shadowsocks/crypto/ctypes_libsodium.py	/^    create_string_buffer, c_void_p$/;"	i
c_char_p	shadowsocks/crypto/ctypes_openssl.py	/^    create_string_buffer, c_void_p$/;"	i
c_char_p	shadowsocks/crypto/openssl.py	/^    create_string_buffer, c_void_p$/;"	i
c_char_p	shadowsocks/crypto/sodium.py	/^    create_string_buffer, c_void_p$/;"	i
c_int	shadowsocks/crypto/ctypes_libsodium.py	/^    create_string_buffer, c_void_p$/;"	i
c_int	shadowsocks/crypto/ctypes_openssl.py	/^    create_string_buffer, c_void_p$/;"	i
c_int	shadowsocks/crypto/openssl.py	/^    create_string_buffer, c_void_p$/;"	i
c_int	shadowsocks/crypto/sodium.py	/^    create_string_buffer, c_void_p$/;"	i
c_long	shadowsocks/crypto/ctypes_openssl.py	/^    create_string_buffer, c_void_p$/;"	i
c_long	shadowsocks/crypto/openssl.py	/^    create_string_buffer, c_void_p$/;"	i
c_ulong	shadowsocks/crypto/sodium.py	/^    create_string_buffer, c_void_p$/;"	i
c_ulonglong	shadowsocks/crypto/ctypes_libsodium.py	/^    create_string_buffer, c_void_p$/;"	i
c_ulonglong	shadowsocks/crypto/sodium.py	/^    create_string_buffer, c_void_p$/;"	i
c_void_p	shadowsocks/crypto/ctypes_libsodium.py	/^    create_string_buffer, c_void_p$/;"	i
c_void_p	shadowsocks/crypto/ctypes_openssl.py	/^    create_string_buffer, c_void_p$/;"	i
c_void_p	shadowsocks/crypto/openssl.py	/^    create_string_buffer, c_void_p$/;"	i
c_void_p	shadowsocks/crypto/sodium.py	/^    create_string_buffer, c_void_p$/;"	i
cached_keys	shadowsocks/encrypt.py	/^cached_keys = {}$/;"	v
cached_tables	shadowsocks/crypto/table.py	/^cached_tables = {}$/;"	v
callback	shadowsocks/asyncdns.py	/^        def callback(result, error):$/;"	f	function:test.make_callback
cb_del_server	server_pool.py	/^	def cb_del_server(self, port):$/;"	m	class:ServerPool
check_config	shadowsocks/shell.py	/^def check_config(config, is_local):$/;"	f
check_python	shadowsocks/shell.py	/^def check_python():$/;"	f
child_handler	shadowsocks/server.py	/^        def child_handler(signum, _):$/;"	f	function:main.run_server
chr	shadowsocks/common.py	/^chr = compat_chr$/;"	v
chr	shadowsocks/obfsplugin/auth.py	/^from shadowsocks.common import to_bytes, to_str, ord, chr$/;"	i
chr	shadowsocks/obfsplugin/http_simple.py	/^from shadowsocks.common import to_bytes, to_str, ord, chr$/;"	i
chr	shadowsocks/obfsplugin/verify.py	/^from shadowsocks.common import to_bytes, to_str, ord, chr$/;"	i
ciphers	shadowsocks/crypto/ctypes_libsodium.py	/^ciphers = {$/;"	v
ciphers	shadowsocks/crypto/ctypes_openssl.py	/^ciphers = {$/;"	v
ciphers	shadowsocks/crypto/openssl.py	/^ciphers = {$/;"	v
ciphers	shadowsocks/crypto/rc4_md5.py	/^ciphers = {$/;"	v
ciphers	shadowsocks/crypto/sodium.py	/^ciphers = {$/;"	v
ciphers	shadowsocks/crypto/table.py	/^ciphers = {$/;"	v
classifiers	setup.py	/^    classifiers=[$/;"	v
clean	shadowsocks/crypto/ctypes_openssl.py	/^    def clean(self):$/;"	m	class:CtypesCrypto
clean	shadowsocks/crypto/openssl.py	/^    def clean(self):$/;"	m	class:OpenSSLCrypto
clear	shadowsocks/lru_cache.py	/^    def clear(self, keep):$/;"	m	class:LRUCache
clear	shadowsocks/ordereddict.py	/^    def clear(self):$/;"	m	class:OrderedDict
clear_ud	mujson_mgr.py	/^	def clear_ud(self, user):$/;"	m	class:MuMgr
client_args	tests/test.py	/^client_args = python + ['shadowsocks\/local.py', '-v']$/;"	v
client_decode	shadowsocks/obfs.py	/^    def client_decode(self, buf):$/;"	m	class:obfs
client_decode	shadowsocks/obfsplugin/auth.py	/^    def client_decode(self, buf):$/;"	m	class:verify_base
client_decode	shadowsocks/obfsplugin/http_simple.py	/^    def client_decode(self, buf):$/;"	m	class:http_simple
client_decode	shadowsocks/obfsplugin/http_simple.py	/^    def client_decode(self, buf):$/;"	m	class:random_head
client_decode	shadowsocks/obfsplugin/obfs_tls.py	/^    def client_decode(self, buf):$/;"	m	class:tls_ticket_auth
client_decode	shadowsocks/obfsplugin/plain.py	/^    def client_decode(self, buf):$/;"	m	class:plain
client_decode	shadowsocks/obfsplugin/verify.py	/^    def client_decode(self, buf):$/;"	m	class:verify_base
client_encode	shadowsocks/obfs.py	/^    def client_encode(self, buf):$/;"	m	class:obfs
client_encode	shadowsocks/obfsplugin/auth.py	/^    def client_encode(self, buf):$/;"	m	class:verify_base
client_encode	shadowsocks/obfsplugin/http_simple.py	/^    def client_encode(self, buf):$/;"	m	class:http_post
client_encode	shadowsocks/obfsplugin/http_simple.py	/^    def client_encode(self, buf):$/;"	m	class:http_simple
client_encode	shadowsocks/obfsplugin/http_simple.py	/^    def client_encode(self, buf):$/;"	m	class:random_head
client_encode	shadowsocks/obfsplugin/obfs_tls.py	/^    def client_encode(self, buf):$/;"	m	class:tls_ticket_auth
client_encode	shadowsocks/obfsplugin/plain.py	/^    def client_encode(self, buf):$/;"	m	class:plain
client_encode	shadowsocks/obfsplugin/verify.py	/^    def client_encode(self, buf):$/;"	m	class:verify_base
client_key	shadowsocks/udprelay.py	/^def client_key(source_addr, server_af):$/;"	f
client_post_decrypt	shadowsocks/obfs.py	/^    def client_post_decrypt(self, buf):$/;"	m	class:obfs
client_post_decrypt	shadowsocks/obfsplugin/auth.py	/^    def client_post_decrypt(self, buf):$/;"	m	class:auth_sha1
client_post_decrypt	shadowsocks/obfsplugin/auth.py	/^    def client_post_decrypt(self, buf):$/;"	m	class:auth_sha1_v2
client_post_decrypt	shadowsocks/obfsplugin/auth.py	/^    def client_post_decrypt(self, buf):$/;"	m	class:auth_sha1_v3
client_post_decrypt	shadowsocks/obfsplugin/plain.py	/^    def client_post_decrypt(self, buf):$/;"	m	class:plain
client_post_decrypt	shadowsocks/obfsplugin/verify.py	/^    def client_post_decrypt(self, buf):$/;"	m	class:verify_deflate
client_post_decrypt	shadowsocks/obfsplugin/verify.py	/^    def client_post_decrypt(self, buf):$/;"	m	class:verify_sha1
client_post_decrypt	shadowsocks/obfsplugin/verify.py	/^    def client_post_decrypt(self, buf):$/;"	m	class:verify_simple
client_pre_encrypt	shadowsocks/obfs.py	/^    def client_pre_encrypt(self, buf):$/;"	m	class:obfs
client_pre_encrypt	shadowsocks/obfsplugin/auth.py	/^    def client_pre_encrypt(self, buf):$/;"	m	class:auth_sha1
client_pre_encrypt	shadowsocks/obfsplugin/auth.py	/^    def client_pre_encrypt(self, buf):$/;"	m	class:auth_sha1_v2
client_pre_encrypt	shadowsocks/obfsplugin/auth.py	/^    def client_pre_encrypt(self, buf):$/;"	m	class:auth_sha1_v3
client_pre_encrypt	shadowsocks/obfsplugin/plain.py	/^    def client_pre_encrypt(self, buf):$/;"	m	class:plain
client_pre_encrypt	shadowsocks/obfsplugin/verify.py	/^    def client_pre_encrypt(self, buf):$/;"	m	class:verify_deflate
client_pre_encrypt	shadowsocks/obfsplugin/verify.py	/^    def client_pre_encrypt(self, buf):$/;"	m	class:verify_sha1
client_pre_encrypt	shadowsocks/obfsplugin/verify.py	/^    def client_pre_encrypt(self, buf):$/;"	m	class:verify_simple
client_queue	shadowsocks/obfsplugin/auth.py	/^class client_queue(object):$/;"	c
client_udp_post_decrypt	shadowsocks/obfs.py	/^    def client_udp_post_decrypt(self, buf):$/;"	m	class:obfs
client_udp_post_decrypt	shadowsocks/obfsplugin/plain.py	/^    def client_udp_post_decrypt(self, buf):$/;"	m	class:plain
client_udp_pre_encrypt	shadowsocks/obfs.py	/^    def client_udp_pre_encrypt(self, buf):$/;"	m	class:obfs
client_udp_pre_encrypt	shadowsocks/obfsplugin/plain.py	/^    def client_udp_pre_encrypt(self, buf):$/;"	m	class:plain
client_udp_pre_encrypt	shadowsocks/obfsplugin/verify.py	/^    def client_udp_pre_encrypt(self, buf):$/;"	m	class:verify_sha1
close	asyncmgr.py	/^    def close(self):$/;"	m	class:ServerMgr
close	shadowsocks/asyncdns.py	/^    def close(self):$/;"	m	class:DNSResolver
close	shadowsocks/eventloop.py	/^    def close(self):$/;"	m	class:KqueueLoop
close	shadowsocks/eventloop.py	/^    def close(self):$/;"	m	class:SelectLoop
close	shadowsocks/tcprelay.py	/^    def close(self, next_tick=False):$/;"	m	class:TCPRelay
close	shadowsocks/udprelay.py	/^    def close(self, next_tick=False):$/;"	m	class:UDPRelay
close_cb	shadowsocks/lru_cache.py	/^    def close_cb(t):$/;"	f	function:test
cmd	utils/autoban.py	/^                cmd = 'iptables -A INPUT -s %s -j DROP' % ip$/;"	v
cmp	db_transfer.py	/^	def cmp(self, val1, val2):$/;"	m	class:TransferBase
codecs	setup.py	/^import codecs$/;"	i
collections	shadowsocks/lru_cache.py	/^import collections$/;"	i
collections	shadowsocks/manager.py	/^import collections$/;"	i
collections	shadowsocks/ordereddict.py	/^import collections$/;"	i
common	asyncmgr.py	/^from shadowsocks import common$/;"	i
common	db_transfer.py	/^from shadowsocks import common, shell, lru_cache$/;"	i
common	mujson_mgr.py	/^from shadowsocks import shell, common$/;"	i
common	server_pool.py	/^from shadowsocks import shell, eventloop, tcprelay, udprelay, asyncdns, common$/;"	i
common	shadowsocks/asyncdns.py	/^from shadowsocks import common, lru_cache, eventloop, shell$/;"	i
common	shadowsocks/crypto/openssl.py	/^from shadowsocks import common$/;"	i
common	shadowsocks/daemon.py	/^from shadowsocks import common, shell$/;"	i
common	shadowsocks/encrypt.py	/^from shadowsocks import common$/;"	i
common	shadowsocks/manager.py	/^from shadowsocks import common, eventloop, tcprelay, udprelay, asyncdns, shell$/;"	i
common	shadowsocks/obfs.py	/^from shadowsocks import common$/;"	i
common	shadowsocks/obfsplugin/auth.py	/^from shadowsocks import common, lru_cache$/;"	i
common	shadowsocks/obfsplugin/http_simple.py	/^from shadowsocks import common$/;"	i
common	shadowsocks/obfsplugin/obfs_tls.py	/^from shadowsocks import common$/;"	i
common	shadowsocks/obfsplugin/verify.py	/^from shadowsocks import common$/;"	i
common	shadowsocks/tcprelay.py	/^from shadowsocks import encrypt, obfs, eventloop, shell, common$/;"	i
common	shadowsocks/udprelay.py	/^from shadowsocks import encrypt, obfs, eventloop, lru_cache, common, shell$/;"	i
compat_chr	shadowsocks/common.py	/^def compat_chr(d):$/;"	f
compat_ord	shadowsocks/common.py	/^def compat_ord(s):$/;"	f
config	tests/test.py	/^config = parser.parse_args()$/;"	v
config	utils/autoban.py	/^    config = parser.parse_args()$/;"	v
configure	tests/nose_plugin.py	/^    def configure(self, options, config):$/;"	m	class:ExtensionPlugin
connect_log	shadowsocks/common.py	/^connect_log = logging.debug$/;"	v
copy	shadowsocks/ordereddict.py	/^    def copy(self):$/;"	m	class:OrderedDict
create_auth_obfs	shadowsocks/obfsplugin/verify.py	/^def create_auth_obfs(method):$/;"	f
create_auth_sha1	shadowsocks/obfsplugin/auth.py	/^def create_auth_sha1(method):$/;"	f
create_auth_sha1_v2	shadowsocks/obfsplugin/auth.py	/^def create_auth_sha1_v2(method):$/;"	f
create_auth_sha1_v3	shadowsocks/obfsplugin/auth.py	/^def create_auth_sha1_v3(method):$/;"	f
create_cipher	shadowsocks/crypto/rc4_md5.py	/^def create_cipher(alg, key, iv, op, key_as_bytes=0, d=None, salt=None,$/;"	f
create_http_post_obfs	shadowsocks/obfsplugin/http_simple.py	/^def create_http_post_obfs(method):$/;"	f
create_http_simple_obfs	shadowsocks/obfsplugin/http_simple.py	/^def create_http_simple_obfs(method):$/;"	f
create_obfs	shadowsocks/obfsplugin/plain.py	/^def create_obfs(method):$/;"	f
create_random_head_obfs	shadowsocks/obfsplugin/http_simple.py	/^def create_random_head_obfs(method):$/;"	f
create_string_buffer	shadowsocks/crypto/ctypes_libsodium.py	/^    create_string_buffer, c_void_p$/;"	i
create_string_buffer	shadowsocks/crypto/ctypes_openssl.py	/^    create_string_buffer, c_void_p$/;"	i
create_string_buffer	shadowsocks/crypto/openssl.py	/^    create_string_buffer, c_void_p$/;"	i
create_string_buffer	shadowsocks/crypto/sodium.py	/^    create_string_buffer, c_void_p$/;"	i
create_tls_ticket_auth_obfs	shadowsocks/obfsplugin/obfs_tls.py	/^def create_tls_ticket_auth_obfs(method):$/;"	f
create_verify_deflate	shadowsocks/obfsplugin/verify.py	/^def create_verify_deflate(method):$/;"	f
create_verify_obfs	shadowsocks/obfsplugin/verify.py	/^def create_verify_obfs(method):$/;"	f
create_verify_sha1	shadowsocks/obfsplugin/verify.py	/^def create_verify_sha1(method):$/;"	f
ctypes	shadowsocks/crypto/util.py	/^    import ctypes.util$/;"	i
cymysql	db_transfer.py	/^		import cymysql$/;"	i
daemon	shadowsocks/local.py	/^from shadowsocks import shell, daemon, eventloop, tcprelay, udprelay, asyncdns$/;"	i
daemon	shadowsocks/server.py	/^    asyncdns, manager$/;"	i
daemon_exec	shadowsocks/daemon.py	/^def daemon_exec(config):$/;"	f
daemon_start	shadowsocks/daemon.py	/^def daemon_start(pid_file, log_file):$/;"	f
daemon_stop	shadowsocks/daemon.py	/^def daemon_stop(pid_file):$/;"	f
datetime	shadowsocks/obfsplugin/auth.py	/^import datetime$/;"	i
datetime	shadowsocks/obfsplugin/http_simple.py	/^import datetime$/;"	i
datetime	shadowsocks/obfsplugin/verify.py	/^import datetime$/;"	i
db_instance	db_transfer.py	/^db_instance = None$/;"	v
db_transfer	server.py	/^import db_transfer$/;"	i
decode_error_return	shadowsocks/obfsplugin/obfs_tls.py	/^    def decode_error_return(self, buf):$/;"	m	class:tls_ticket_auth
decrypt	shadowsocks/encrypt.py	/^    def decrypt(self, buf):$/;"	m	class:Encryptor
default_url	tests/test.py	/^default_url = 'http:\/\/localhost\/'$/;"	v
defaultdict	shadowsocks/eventloop.py	/^from collections import defaultdict$/;"	i
del_server	server_pool.py	/^	def del_server(self, port):$/;"	m	class:ServerPool
del_server_out_of_bound_safe	db_transfer.py	/^	def del_server_out_of_bound_safe(self, last_rows, rows):$/;"	m	class:TransferBase
del_servers	db_transfer.py	/^	def del_servers():$/;"	m	class:TransferBase
delete	mujson_mgr.py	/^	def delete(self, user):$/;"	m	class:MuMgr
description	setup.py	/^    description="A fast tunnel proxy that help you get through firewalls",$/;"	v
destroy	shadowsocks/tcprelay.py	/^    def destroy(self):$/;"	m	class:TCPRelayHandler
destroy	shadowsocks/udprelay.py	/^    def destroy(self):$/;"	m	class:TCPRelayHandler
destroy_local	shadowsocks/udprelay.py	/^    def destroy_local(self):$/;"	m	class:TCPRelayHandler
detect_ipv6_supprot	shadowsocks/asyncdns.py	/^def detect_ipv6_supprot():$/;"	f
dispose	shadowsocks/obfs.py	/^    def dispose(self):$/;"	m	class:obfs
dispose	shadowsocks/obfsplugin/plain.py	/^    def dispose(self):$/;"	m	class:plain
division	shadowsocks/__init__.py	/^    with_statement$/;"	i
division	shadowsocks/asyncdns.py	/^    with_statement$/;"	i
division	shadowsocks/common.py	/^    with_statement$/;"	i
division	shadowsocks/crypto/__init__.py	/^    with_statement$/;"	i
division	shadowsocks/crypto/ctypes_libsodium.py	/^    with_statement$/;"	i
division	shadowsocks/crypto/ctypes_openssl.py	/^    with_statement$/;"	i
division	shadowsocks/crypto/openssl.py	/^    with_statement$/;"	i
division	shadowsocks/crypto/rc4_md5.py	/^    with_statement$/;"	i
division	shadowsocks/crypto/sodium.py	/^    with_statement$/;"	i
division	shadowsocks/crypto/table.py	/^    with_statement$/;"	i
division	shadowsocks/crypto/util.py	/^    with_statement$/;"	i
division	shadowsocks/daemon.py	/^    with_statement$/;"	i
division	shadowsocks/encrypt.py	/^    with_statement$/;"	i
division	shadowsocks/encrypt_test.py	/^    with_statement$/;"	i
division	shadowsocks/eventloop.py	/^    with_statement$/;"	i
division	shadowsocks/local.py	/^    with_statement$/;"	i
division	shadowsocks/lru_cache.py	/^    with_statement$/;"	i
division	shadowsocks/manager.py	/^    with_statement$/;"	i
division	shadowsocks/obfs.py	/^    with_statement$/;"	i
division	shadowsocks/obfsplugin/__init__.py	/^    with_statement$/;"	i
division	shadowsocks/obfsplugin/auth.py	/^    with_statement$/;"	i
division	shadowsocks/obfsplugin/http_simple.py	/^    with_statement$/;"	i
division	shadowsocks/obfsplugin/obfs_tls.py	/^    with_statement$/;"	i
division	shadowsocks/obfsplugin/plain.py	/^    with_statement$/;"	i
division	shadowsocks/obfsplugin/verify.py	/^    with_statement$/;"	i
division	shadowsocks/server.py	/^    with_statement$/;"	i
division	shadowsocks/shell.py	/^    with_statement$/;"	i
division	shadowsocks/tcprelay.py	/^    with_statement$/;"	i
division	shadowsocks/udprelay.py	/^    with_statement$/;"	i
division	tests/test.py	/^    with_statement$/;"	i
division	utils/autoban.py	/^    with_statement$/;"	i
edit	mujson_mgr.py	/^	def edit(self, user):$/;"	m	class:MuMgr
empty	shadowsocks/udprelay.py	/^    def empty(self):$/;"	m	class:RecvQueue
empty	shadowsocks/udprelay.py	/^    def empty(self):$/;"	m	class:SendingQueue
encode_head	shadowsocks/obfsplugin/http_simple.py	/^    def encode_head(self, buf):$/;"	m	class:http_simple
encrypt	shadowsocks/encrypt.py	/^    def encrypt(self, buf):$/;"	m	class:Encryptor
encrypt	shadowsocks/manager.py	/^    from shadowsocks import encrypt$/;"	i
encrypt	shadowsocks/shell.py	/^from shadowsocks import encrypt$/;"	i
encrypt	shadowsocks/tcprelay.py	/^from shadowsocks import encrypt, obfs, eventloop, shell, common$/;"	i
encrypt	shadowsocks/udprelay.py	/^from shadowsocks import encrypt, obfs, eventloop, lru_cache, common, shell$/;"	i
encrypt_all	shadowsocks/encrypt.py	/^def encrypt_all(password, method, op, data):$/;"	f
encrypt_all_iv	shadowsocks/encrypt.py	/^def encrypt_all_iv(key, method, op, data, ref_iv):$/;"	f
encrypt_iv_len	shadowsocks/encrypt.py	/^def encrypt_iv_len(method):$/;"	f
encrypt_key	shadowsocks/encrypt.py	/^def encrypt_key(password, method):$/;"	f
encrypt_new_iv	shadowsocks/encrypt.py	/^def encrypt_new_iv(method):$/;"	f
errno	shadowsocks/daemon.py	/^    import errno$/;"	i
errno	shadowsocks/eventloop.py	/^import errno$/;"	i
errno	shadowsocks/manager.py	/^import errno$/;"	i
errno	shadowsocks/tcprelay.py	/^import errno$/;"	i
errno	shadowsocks/udprelay.py	/^import errno$/;"	i
errno_from_exception	shadowsocks/eventloop.py	/^def errno_from_exception(e):$/;"	f
eventloop	asyncmgr.py	/^from shadowsocks import eventloop$/;"	i
eventloop	db_transfer.py	/^			from shadowsocks import eventloop$/;"	i
eventloop	server_pool.py	/^from shadowsocks import shell, eventloop, tcprelay, udprelay, asyncdns, common$/;"	i
eventloop	shadowsocks/asyncdns.py	/^from shadowsocks import common, lru_cache, eventloop, shell$/;"	i
eventloop	shadowsocks/local.py	/^from shadowsocks import shell, daemon, eventloop, tcprelay, udprelay, asyncdns$/;"	i
eventloop	shadowsocks/manager.py	/^from shadowsocks import common, eventloop, tcprelay, udprelay, asyncdns, shell$/;"	i
eventloop	shadowsocks/server.py	/^    asyncdns, manager$/;"	i
eventloop	shadowsocks/tcprelay.py	/^from shadowsocks import encrypt, obfs, eventloop, shell, common$/;"	i
eventloop	shadowsocks/udprelay.py	/^from shadowsocks import encrypt, obfs, eventloop, lru_cache, common, shell$/;"	i
fcntl	mujson_mgr.py	/^		import fcntl$/;"	i
fcntl	shadowsocks/daemon.py	/^    import fcntl$/;"	i
fdset	tests/test.py	/^    fdset = [p1.stdout, p2.stdout, p1.stderr, p2.stderr]$/;"	v
file_path	shadowsocks/asyncdns.py	/^    file_path = os.path.dirname(os.path.realpath(inspect.getfile(inspect.currentframe())))$/;"	v
file_path	shadowsocks/local.py	/^    file_path = os.path.dirname(os.path.realpath(inspect.getfile(inspect.currentframe())))$/;"	v
file_path	shadowsocks/lru_cache.py	/^    file_path = os.path.dirname(os.path.realpath(inspect.getfile(inspect.currentframe())))$/;"	v
file_path	shadowsocks/server.py	/^    file_path = os.path.dirname(os.path.realpath(inspect.getfile(inspect.currentframe())))$/;"	v
find_config	shadowsocks/shell.py	/^def find_config():$/;"	f
find_library	shadowsocks/crypto/ctypes_libsodium.py	/^    from ctypes.util import find_library$/;"	i
find_library	shadowsocks/crypto/ctypes_openssl.py	/^    from ctypes.util import find_library$/;"	i
find_library	shadowsocks/crypto/util.py	/^def find_library(possible_lib_names, search_symbol, library_name):$/;"	f
find_library_nt	shadowsocks/crypto/util.py	/^def find_library_nt(name):$/;"	f
first	shadowsocks/lru_cache.py	/^    def first(self):$/;"	m	class:LRUCache
freopen	shadowsocks/daemon.py	/^def freopen(f, mode, stream):$/;"	f
fromkeys	shadowsocks/ordereddict.py	/^    def fromkeys(cls, iterable, value=None):$/;"	m	class:OrderedDict
g_config	configloader.py	/^g_config = None$/;"	v
get	shadowsocks/udprelay.py	/^    def get(self):$/;"	m	class:AddressMap
get	tests/coverage_server.py	/^        def get(self, project):$/;"	m	class:MainHandler
getKeys	switchrule.py	/^def getKeys(key_list):$/;"	f
get_begin_id	shadowsocks/udprelay.py	/^    def get_begin_id(self):$/;"	m	class:RecvQueue
get_begin_id	shadowsocks/udprelay.py	/^    def get_begin_id(self):$/;"	m	class:SendingQueue
get_cipher	shadowsocks/encrypt.py	/^    def get_cipher(self, password, method, op, iv):$/;"	m	class:Encryptor
get_config	configloader.py	/^def get_config():$/;"	f
get_config	db_transfer.py	/^from configloader import load_config, get_config$/;"	i
get_config	mujson_mgr.py	/^from configloader import load_config, get_config$/;"	i
get_config	server.py	/^from configloader import load_config, get_config$/;"	i
get_config	server_pool.py	/^from configloader import load_config, get_config$/;"	i
get_config	shadowsocks/shell.py	/^def get_config(is_local):$/;"	f
get_data	shadowsocks/udprelay.py	/^    def get_data(self):$/;"	m	class:RecvQueue
get_data_from_http_header	shadowsocks/obfsplugin/http_simple.py	/^    def get_data_from_http_header(self, buf):$/;"	m	class:http_simple
get_data_list	shadowsocks/udprelay.py	/^    def get_data_list(self, pack_id_base, pack_id_list):$/;"	m	class:SendingQueue
get_end_id	shadowsocks/udprelay.py	/^    def get_end_id(self):$/;"	m	class:SendingQueue
get_head_size	shadowsocks/obfsplugin/plain.py	/^    def get_head_size(self, buf, def_value):$/;"	m	class:plain
get_instance	server_pool.py	/^	def get_instance():$/;"	m	class:ServerPool
get_local_address	shadowsocks/udprelay.py	/^    def get_local_address(self):$/;"	m	class:TCPRelayHandler
get_method_info	shadowsocks/encrypt.py	/^    def get_method_info(self, method):$/;"	m	class:Encryptor
get_method_info	shadowsocks/obfs.py	/^    def get_method_info(self, method):$/;"	m	class:obfs
get_missing_id	shadowsocks/udprelay.py	/^    def get_missing_id(self, begin_id):$/;"	m	class:RecvQueue
get_obfs	shadowsocks/obfs.py	/^    def get_obfs(self, method):$/;"	m	class:obfs
get_server_transfer	server_pool.py	/^	def get_server_transfer(self, port):$/;"	m	class:ServerPool
get_servers_transfer	server_pool.py	/^	def get_servers_transfer(self):$/;"	m	class:ServerPool
get_sock_error	shadowsocks/eventloop.py	/^def get_sock_error(sock):$/;"	f
get_table	shadowsocks/crypto/table.py	/^def get_table(key):$/;"	f
getipaddr	mujson_mgr.py	/^	def getipaddr(self, ifname = 'eth0'):$/;"	m	class:MuMgr
getopt	mujson_mgr.py	/^import getopt$/;"	i
getopt	shadowsocks/shell.py	/^import getopt$/;"	i
glob	shadowsocks/crypto/util.py	/^        import glob$/;"	i
grp	shadowsocks/daemon.py	/^    import grp$/;"	i
handle_client	shadowsocks/udprelay.py	/^    def handle_client(self, addr, cmd, request_id, data):$/;"	m	class:TCPRelayHandler
handle_event	asyncmgr.py	/^    def handle_event(self, sock, fd, event):$/;"	m	class:ServerMgr
handle_event	shadowsocks/asyncdns.py	/^    def handle_event(self, sock, fd, event):$/;"	m	class:DNSResolver
handle_event	shadowsocks/manager.py	/^    def handle_event(self, sock, fd, event):$/;"	m	class:Manager
handle_event	shadowsocks/tcprelay.py	/^    def handle_event(self, sock, event):$/;"	m	class:TCPRelayHandler
handle_event	shadowsocks/tcprelay.py	/^    def handle_event(self, sock, fd, event):$/;"	m	class:TCPRelay
handle_event	shadowsocks/udprelay.py	/^    def handle_event(self, sock, event):$/;"	m	class:TCPRelayHandler
handle_event	shadowsocks/udprelay.py	/^    def handle_event(self, sock, fd, event):$/;"	m	class:UDPRelay
handle_exit	shadowsocks/daemon.py	/^    def handle_exit(signum, _):$/;"	f	function:daemon_start
handle_periodic	shadowsocks/asyncdns.py	/^    def handle_periodic(self):$/;"	m	class:DNSResolver
handle_periodic	shadowsocks/manager.py	/^    def handle_periodic(self):$/;"	m	class:Manager
handle_periodic	shadowsocks/tcprelay.py	/^    def handle_periodic(self):$/;"	m	class:TCPRelay
handle_periodic	shadowsocks/udprelay.py	/^    def handle_periodic(self):$/;"	m	class:UDPRelay
handle_stream_sync_status	shadowsocks/udprelay.py	/^    def handle_stream_sync_status(self, addr, cmd, request_id, pack_id, max_send_id, data):$/;"	m	class:TCPRelayHandler
handler	shadowsocks/local.py	/^        def handler(signum, _):$/;"	f	function:main
handler	shadowsocks/server.py	/^                def handler(signum, _):$/;"	f	function:main.run_server.int_handler
has_data	shadowsocks/udprelay.py	/^    def has_data(self):$/;"	m	class:RecvQueue
hashlib	shadowsocks/crypto/rc4_md5.py	/^import hashlib$/;"	i
hashlib	shadowsocks/crypto/table.py	/^import hashlib$/;"	i
hashlib	shadowsocks/encrypt.py	/^import hashlib$/;"	i
hashlib	shadowsocks/obfs.py	/^import hashlib$/;"	i
hashlib	shadowsocks/obfsplugin/auth.py	/^import hashlib$/;"	i
hashlib	shadowsocks/obfsplugin/http_simple.py	/^import hashlib$/;"	i
hashlib	shadowsocks/obfsplugin/obfs_tls.py	/^import hashlib$/;"	i
hashlib	shadowsocks/obfsplugin/plain.py	/^import hashlib$/;"	i
hashlib	shadowsocks/obfsplugin/verify.py	/^import hashlib$/;"	i
help	utils/autoban.py	/^                        help='with how many failure times it should be '$/;"	v
hmac	shadowsocks/obfsplugin/auth.py	/^import hmac$/;"	i
hmac	shadowsocks/obfsplugin/obfs_tls.py	/^import hmac$/;"	i
hmac	shadowsocks/obfsplugin/verify.py	/^import hmac$/;"	i
http_post	shadowsocks/obfsplugin/http_simple.py	/^class http_post(http_simple):$/;"	c
http_simple	shadowsocks/obfs.py	/^from shadowsocks.obfsplugin import plain, http_simple, obfs_tls, verify, auth$/;"	i
http_simple	shadowsocks/obfsplugin/http_simple.py	/^class http_simple(plain.plain):$/;"	c
importlib	importloader.py	/^		import importlib$/;"	i
importloader	configloader.py	/^import importloader$/;"	i
importloader	db_transfer.py	/^import importloader$/;"	i
inet_ntop	shadowsocks/common.py	/^def inet_ntop(family, ipstr):$/;"	f
inet_pton	shadowsocks/common.py	/^def inet_pton(family, addr):$/;"	f
init_data	shadowsocks/obfs.py	/^    def init_data(self):$/;"	m	class:obfs
init_data	shadowsocks/obfsplugin/auth.py	/^    def init_data(self):$/;"	m	class:auth_sha1
init_data	shadowsocks/obfsplugin/auth.py	/^    def init_data(self):$/;"	m	class:auth_sha1_v2
init_data	shadowsocks/obfsplugin/auth.py	/^    def init_data(self):$/;"	m	class:auth_sha1_v3
init_data	shadowsocks/obfsplugin/auth.py	/^    def init_data(self):$/;"	m	class:verify_base
init_data	shadowsocks/obfsplugin/obfs_tls.py	/^    def init_data(self):$/;"	m	class:tls_ticket_auth
init_data	shadowsocks/obfsplugin/plain.py	/^    def init_data(self):$/;"	m	class:plain
init_data	shadowsocks/obfsplugin/verify.py	/^    def init_data(self):$/;"	m	class:verify_base
init_table	shadowsocks/crypto/table.py	/^def init_table(key):$/;"	f
insert	shadowsocks/obfsplugin/auth.py	/^    def insert(self, client_id, connection_id):$/;"	m	class:obfs_auth_data
insert	shadowsocks/obfsplugin/auth.py	/^    def insert(self, client_id, connection_id):$/;"	m	class:obfs_auth_v2_data
insert	shadowsocks/obfsplugin/auth.py	/^    def insert(self, connection_id):$/;"	m	class:client_queue
insert	shadowsocks/udprelay.py	/^    def insert(self, pack_id, data):$/;"	m	class:RecvQueue
inspect	server.py	/^	import inspect$/;"	i
inspect	shadowsocks/asyncdns.py	/^    import inspect$/;"	i
inspect	shadowsocks/local.py	/^    import inspect$/;"	i
inspect	shadowsocks/lru_cache.py	/^    import os, sys, inspect$/;"	i
inspect	shadowsocks/server.py	/^    import inspect$/;"	i
install_requires	setup.py	/^    install_requires=[],$/;"	v
instance	server_pool.py	/^	instance = None$/;"	v	class:ServerPool
int32	shadowsocks/common.py	/^def int32(x):$/;"	f
int_handler	shadowsocks/local.py	/^        def int_handler(signum, _):$/;"	f	function:main
int_handler	shadowsocks/server.py	/^        def int_handler(signum, _):$/;"	f	function:main.run_server
ioloop	tests/coverage_server.py	/^    import tornado.ioloop$/;"	i
ip	utils/autoban.py	/^            ip = line.split()[-1].split(':')[0]$/;"	v
ips	utils/autoban.py	/^    ips = {}$/;"	v
isTurnOn	switchrule.py	/^def isTurnOn(row):$/;"	f
is_active	shadowsocks/obfsplugin/auth.py	/^    def is_active(self):$/;"	m	class:client_queue
is_ip	shadowsocks/common.py	/^def is_ip(address):$/;"	f
is_timeout	shadowsocks/udprelay.py	/^    def is_timeout(self):$/;"	m	class:UDPLocalAddress
is_valid_hostname	shadowsocks/asyncdns.py	/^def is_valid_hostname(hostname):$/;"	f
items	shadowsocks/ordereddict.py	/^    def items(self):$/;"	m	class:OrderedDict
iteritems	shadowsocks/ordereddict.py	/^    def iteritems(self):$/;"	m	class:OrderedDict
iterkeys	shadowsocks/ordereddict.py	/^    def iterkeys(self):$/;"	m	class:OrderedDict
itervalues	shadowsocks/ordereddict.py	/^    def itervalues(self):$/;"	m	class:OrderedDict
iv_len	shadowsocks/encrypt.py	/^    def iv_len(self):$/;"	m	class:Encryptor
json	db_transfer.py	/^		import json$/;"	i
json	mujson_mgr.py	/^import json$/;"	i
json	shadowsocks/manager.py	/^import json$/;"	i
json	shadowsocks/shell.py	/^import json$/;"	i
keys	shadowsocks/ordereddict.py	/^    def keys(self):$/;"	m	class:OrderedDict
keys	shadowsocks/udprelay.py	/^    def keys(self):$/;"	m	class:AddressMap
libcrypto	shadowsocks/crypto/ctypes_openssl.py	/^libcrypto = None$/;"	v
libcrypto	shadowsocks/crypto/openssl.py	/^libcrypto = None$/;"	v
libsodium	shadowsocks/crypto/ctypes_libsodium.py	/^libsodium = None$/;"	v
libsodium	shadowsocks/crypto/sodium.py	/^libsodium = None$/;"	v
license	setup.py	/^    license='http:\/\/www.apache.org\/licenses\/LICENSE-2.0',$/;"	v
line	tests/test.py	/^                line = str(line, 'utf8')$/;"	v
line	tests/test.py	/^            line = fd.readline()$/;"	v
list_user	mujson_mgr.py	/^	def list_user(self, user):$/;"	m	class:MuMgr
load	db_transfer.py	/^	def load(self):$/;"	m	class:Dbv3Transfer
load	importloader.py	/^def load(name):$/;"	f
load	mujson_mgr.py	/^	def load(self, path):$/;"	m	class:MuJsonLoader
load_cfg	db_transfer.py	/^	def load_cfg(self):$/;"	m	class:DbTransfer
load_cfg	db_transfer.py	/^	def load_cfg(self):$/;"	m	class:TransferBase
load_cipher	shadowsocks/crypto/ctypes_openssl.py	/^def load_cipher(cipher_name):$/;"	f
load_cipher	shadowsocks/crypto/openssl.py	/^def load_cipher(cipher_name):$/;"	f
load_config	configloader.py	/^def load_config():$/;"	f
load_config	db_transfer.py	/^from configloader import load_config, get_config$/;"	i
load_config	mujson_mgr.py	/^from configloader import load_config, get_config$/;"	i
load_config	server.py	/^from configloader import load_config, get_config$/;"	i
load_config	server_pool.py	/^from configloader import load_config, get_config$/;"	i
load_libsodium	shadowsocks/crypto/ctypes_libsodium.py	/^def load_libsodium():$/;"	f
load_libsodium	shadowsocks/crypto/sodium.py	/^def load_libsodium():$/;"	f
load_openssl	shadowsocks/crypto/ctypes_openssl.py	/^def load_openssl():$/;"	f
load_openssl	shadowsocks/crypto/openssl.py	/^def load_openssl():$/;"	f
loaded	shadowsocks/crypto/ctypes_libsodium.py	/^loaded = False$/;"	v
loaded	shadowsocks/crypto/ctypes_openssl.py	/^loaded = False$/;"	v
loaded	shadowsocks/crypto/openssl.py	/^loaded = False$/;"	v
loaded	shadowsocks/crypto/sodium.py	/^loaded = False$/;"	v
loads	importloader.py	/^def loads(namelist):$/;"	f
local_ready	tests/test.py	/^                local_ready = True$/;"	v
local_ready	tests/test.py	/^    local_ready = False$/;"	v
logging	asyncmgr.py	/^import logging$/;"	i
logging	db_transfer.py	/^import logging$/;"	i
logging	server_pool.py	/^import logging$/;"	i
logging	shadowsocks/asyncdns.py	/^import logging$/;"	i
logging	shadowsocks/common.py	/^import logging$/;"	i
logging	shadowsocks/crypto/ctypes_libsodium.py	/^import logging$/;"	i
logging	shadowsocks/crypto/ctypes_openssl.py	/^import logging$/;"	i
logging	shadowsocks/crypto/util.py	/^import logging$/;"	i
logging	shadowsocks/daemon.py	/^import logging$/;"	i
logging	shadowsocks/encrypt.py	/^import logging$/;"	i
logging	shadowsocks/eventloop.py	/^import logging$/;"	i
logging	shadowsocks/local.py	/^import logging$/;"	i
logging	shadowsocks/lru_cache.py	/^import logging$/;"	i
logging	shadowsocks/manager.py	/^import logging$/;"	i
logging	shadowsocks/obfs.py	/^import logging$/;"	i
logging	shadowsocks/obfsplugin/auth.py	/^import logging$/;"	i
logging	shadowsocks/obfsplugin/http_simple.py	/^import logging$/;"	i
logging	shadowsocks/obfsplugin/obfs_tls.py	/^import logging$/;"	i
logging	shadowsocks/obfsplugin/plain.py	/^import logging$/;"	i
logging	shadowsocks/obfsplugin/verify.py	/^import logging$/;"	i
logging	shadowsocks/server.py	/^import logging$/;"	i
logging	shadowsocks/shell.py	/^import logging$/;"	i
logging	shadowsocks/tcprelay.py	/^import logging$/;"	i
logging	shadowsocks/udprelay.py	/^import logging$/;"	i
long_description	setup.py	/^    long_description = f.read()$/;"	v
long_description	setup.py	/^    long_description=long_description,$/;"	v
lru_cache	asyncmgr.py	/^from shadowsocks import lru_cache$/;"	i
lru_cache	db_transfer.py	/^from shadowsocks import common, shell, lru_cache$/;"	i
lru_cache	shadowsocks/asyncdns.py	/^from shadowsocks import common, lru_cache, eventloop, shell$/;"	i
lru_cache	shadowsocks/obfsplugin/auth.py	/^from shadowsocks import common, lru_cache$/;"	i
lru_cache	shadowsocks/obfsplugin/obfs_tls.py	/^from shadowsocks import lru_cache$/;"	i
lru_cache	shadowsocks/udprelay.py	/^from shadowsocks import encrypt, obfs, eventloop, lru_cache, common, shell$/;"	i
main	mujson_mgr.py	/^def main():$/;"	f
main	server.py	/^def main():$/;"	f
main	shadowsocks/encrypt_test.py	/^def main():$/;"	f
main	shadowsocks/local.py	/^def main():$/;"	f
main	shadowsocks/server.py	/^def main():$/;"	f
make_callback	shadowsocks/asyncdns.py	/^    def make_callback():$/;"	f	function:test
maketrans	shadowsocks/crypto/table.py	/^    maketrans = bytes.maketrans$/;"	v
maketrans	shadowsocks/crypto/table.py	/^    maketrans = string.maketrans$/;"	v
manager	shadowsocks/server.py	/^    asyncdns, manager$/;"	i
match_begin	shadowsocks/obfsplugin/auth.py	/^def match_begin(str1, str2):$/;"	f
match_begin	shadowsocks/obfsplugin/http_simple.py	/^def match_begin(str1, str2):$/;"	f
match_begin	shadowsocks/obfsplugin/obfs_tls.py	/^def match_begin(str1, str2):$/;"	f
match_begin	shadowsocks/obfsplugin/verify.py	/^def match_begin(str1, str2):$/;"	f
method_supported	shadowsocks/encrypt.py	/^method_supported = {}$/;"	v
method_supported	shadowsocks/obfs.py	/^method_supported = {}$/;"	v
modify	shadowsocks/eventloop.py	/^    def modify(self, f, mode):$/;"	m	class:EventLoop
modify	shadowsocks/eventloop.py	/^    def modify(self, fd, mode):$/;"	m	class:KqueueLoop
modify	shadowsocks/eventloop.py	/^    def modify(self, fd, mode):$/;"	m	class:SelectLoop
name	setup.py	/^    name="shadowsocks",$/;"	v
name	tests/nose_plugin.py	/^    name = "ExtensionPlugin"$/;"	v	class:ExtensionPlugin
new_server	db_transfer.py	/^	def new_server(self, port, passwd, cfg):$/;"	m	class:TransferBase
new_server	server_pool.py	/^	def new_server(self, port, user_config):$/;"	m	class:ServerPool
nose	tests/nose_plugin.py	/^import nose$/;"	i
not_match_return	shadowsocks/obfsplugin/auth.py	/^    def not_match_return(self, buf):$/;"	m	class:verify_base
not_match_return	shadowsocks/obfsplugin/http_simple.py	/^    def not_match_return(self, buf):$/;"	m	class:http_post
not_match_return	shadowsocks/obfsplugin/http_simple.py	/^    def not_match_return(self, buf):$/;"	m	class:http_simple
not_match_return	shadowsocks/obfsplugin/verify.py	/^    def not_match_return(self, buf):$/;"	m	class:verify_sha1
obfs	shadowsocks/obfs.py	/^class obfs(object):$/;"	c
obfs	shadowsocks/tcprelay.py	/^from shadowsocks import encrypt, obfs, eventloop, shell, common$/;"	i
obfs	shadowsocks/udprelay.py	/^from shadowsocks import encrypt, obfs, eventloop, lru_cache, common, shell$/;"	i
obfs_auth_data	shadowsocks/obfsplugin/auth.py	/^class obfs_auth_data(object):$/;"	c
obfs_auth_data	shadowsocks/obfsplugin/obfs_tls.py	/^class obfs_auth_data(object):$/;"	c
obfs_auth_v2_data	shadowsocks/obfsplugin/auth.py	/^class obfs_auth_v2_data(object):$/;"	c
obfs_map	shadowsocks/obfsplugin/auth.py	/^obfs_map = {$/;"	v
obfs_map	shadowsocks/obfsplugin/http_simple.py	/^obfs_map = {$/;"	v
obfs_map	shadowsocks/obfsplugin/obfs_tls.py	/^obfs_map = {$/;"	v
obfs_map	shadowsocks/obfsplugin/plain.py	/^obfs_map = {$/;"	v
obfs_map	shadowsocks/obfsplugin/verify.py	/^obfs_map = {$/;"	v
obfs_tls	shadowsocks/obfs.py	/^from shadowsocks.obfsplugin import plain, http_simple, obfs_tls, verify, auth$/;"	i
obfs_verify_data	shadowsocks/obfsplugin/auth.py	/^class obfs_verify_data(object):$/;"	c
obfs_verify_data	shadowsocks/obfsplugin/verify.py	/^class obfs_verify_data(object):$/;"	c
openssl	shadowsocks/crypto/rc4_md5.py	/^from shadowsocks.crypto import openssl$/;"	i
openssl	shadowsocks/encrypt.py	/^from shadowsocks.crypto import rc4_md5, openssl, sodium, table$/;"	i
openssl	shadowsocks/encrypt_test.py	/^from shadowsocks.crypto import openssl$/;"	i
options	tests/nose_plugin.py	/^    def options(self, parser, env):$/;"	m	class:ExtensionPlugin
ord	shadowsocks/common.py	/^ord = compat_ord$/;"	v
ord	shadowsocks/crypto/table.py	/^    from shadowsocks.common import ord$/;"	i
ord	shadowsocks/obfsplugin/auth.py	/^from shadowsocks.common import to_bytes, to_str, ord, chr$/;"	i
ord	shadowsocks/obfsplugin/http_simple.py	/^from shadowsocks.common import to_bytes, to_str, ord, chr$/;"	i
ord	shadowsocks/obfsplugin/obfs_tls.py	/^from shadowsocks.common import to_bytes, to_str, ord$/;"	i
ord	shadowsocks/obfsplugin/plain.py	/^from shadowsocks.common import ord$/;"	i
ord	shadowsocks/obfsplugin/verify.py	/^from shadowsocks.common import to_bytes, to_str, ord, chr$/;"	i
os	asyncmgr.py	/^import os$/;"	i
os	db_transfer.py	/^		import os$/;"	i
os	server.py	/^import os$/;"	i
os	server_pool.py	/^import os$/;"	i
os	shadowsocks/asyncdns.py	/^import os$/;"	i
os	shadowsocks/crypto/util.py	/^import os$/;"	i
os	shadowsocks/daemon.py	/^import os$/;"	i
os	shadowsocks/encrypt.py	/^import os$/;"	i
os	shadowsocks/encrypt_test.py	/^import os$/;"	i
os	shadowsocks/eventloop.py	/^import os$/;"	i
os	shadowsocks/local.py	/^import os$/;"	i
os	shadowsocks/lru_cache.py	/^    import os, sys, inspect$/;"	i
os	shadowsocks/obfs.py	/^import os$/;"	i
os	shadowsocks/obfsplugin/auth.py	/^import os$/;"	i
os	shadowsocks/obfsplugin/http_simple.py	/^import os$/;"	i
os	shadowsocks/obfsplugin/obfs_tls.py	/^import os$/;"	i
os	shadowsocks/obfsplugin/plain.py	/^import os$/;"	i
os	shadowsocks/obfsplugin/verify.py	/^import os$/;"	i
os	shadowsocks/server.py	/^import os$/;"	i
os	shadowsocks/shell.py	/^import os$/;"	i
os	tests/test.py	/^import os$/;"	i
os	utils/autoban.py	/^import os$/;"	i
p1	tests/test.py	/^p1 = Popen(server_args, stdin=PIPE, stdout=PIPE, stderr=PIPE, close_fds=True)$/;"	v
p2	tests/test.py	/^p2 = Popen(client_args, stdin=PIPE, stdout=PIPE, stderr=PIPE, close_fds=True)$/;"	v
p3	tests/test.py	/^            p3 = Popen(['curl', config.url, '-v', '-L',$/;"	v
p3	tests/test.py	/^p3 = None$/;"	v
p3_fin	tests/test.py	/^p3_fin = False$/;"	v
p4	tests/test.py	/^            p4 = Popen(['socksify', 'dig', '@%s' % config.dns,$/;"	v
p4	tests/test.py	/^p4 = None$/;"	v
p4_fin	tests/test.py	/^p4_fin = False$/;"	v
pack_addr	shadowsocks/common.py	/^def pack_addr(address):$/;"	f
pack_addr	shadowsocks/udprelay.py	/^from shadowsocks.common import pre_parse_header, parse_header, pack_addr$/;"	i
pack_auth_data	shadowsocks/obfsplugin/auth.py	/^    def pack_auth_data(self, buf):$/;"	m	class:auth_sha1
pack_auth_data	shadowsocks/obfsplugin/auth.py	/^    def pack_auth_data(self, buf):$/;"	m	class:auth_sha1_v2
pack_auth_data	shadowsocks/obfsplugin/auth.py	/^    def pack_auth_data(self, buf):$/;"	m	class:auth_sha1_v3
pack_auth_data	shadowsocks/obfsplugin/obfs_tls.py	/^    def pack_auth_data(self, client_id):$/;"	m	class:tls_ticket_auth
pack_auth_data	shadowsocks/obfsplugin/verify.py	/^    def pack_auth_data(self, buf):$/;"	m	class:verify_sha1
pack_data	shadowsocks/obfsplugin/auth.py	/^    def pack_data(self, buf):$/;"	m	class:auth_sha1
pack_data	shadowsocks/obfsplugin/auth.py	/^    def pack_data(self, buf):$/;"	m	class:auth_sha1_v2
pack_data	shadowsocks/obfsplugin/auth.py	/^    def pack_data(self, buf):$/;"	m	class:auth_sha1_v3
pack_data	shadowsocks/obfsplugin/verify.py	/^    def pack_data(self, buf):$/;"	m	class:verify_deflate
pack_data	shadowsocks/obfsplugin/verify.py	/^    def pack_data(self, buf):$/;"	m	class:verify_sha1
pack_data	shadowsocks/obfsplugin/verify.py	/^    def pack_data(self, buf):$/;"	m	class:verify_simple
package_data	setup.py	/^    package_data={$/;"	v
packages	setup.py	/^    packages=['shadowsocks', 'shadowsocks.crypto', 'shadowsocks.obfsplugin'],$/;"	v
parse_header	shadowsocks/asyncdns.py	/^def parse_header(data):$/;"	f
parse_header	shadowsocks/common.py	/^def parse_header(data):$/;"	f
parse_header	shadowsocks/tcprelay.py	/^from shadowsocks.common import pre_parse_header, parse_header$/;"	i
parse_header	shadowsocks/udprelay.py	/^from shadowsocks.common import pre_parse_header, parse_header, pack_addr$/;"	i
parse_ip	shadowsocks/asyncdns.py	/^def parse_ip(addrtype, data, length, offset):$/;"	f
parse_json_in_str	shadowsocks/shell.py	/^def parse_json_in_str(data):$/;"	f
parse_name	shadowsocks/asyncdns.py	/^def parse_name(data, offset):$/;"	f
parse_record	shadowsocks/asyncdns.py	/^def parse_record(data, offset, question=False):$/;"	f
parse_response	shadowsocks/asyncdns.py	/^def parse_response(data):$/;"	f
parser	tests/test.py	/^parser = argparse.ArgumentParser(description='test Shadowsocks')$/;"	v
parser	utils/autoban.py	/^    parser = argparse.ArgumentParser(description='See README')$/;"	v
patch_socket	shadowsocks/common.py	/^def patch_socket():$/;"	f
pkg_resources	shadowsocks/shell.py	/^        import pkg_resources$/;"	i
plain	shadowsocks/obfs.py	/^from shadowsocks.obfsplugin import plain, http_simple, obfs_tls, verify, auth$/;"	i
plain	shadowsocks/obfsplugin/auth.py	/^from shadowsocks.obfsplugin import plain$/;"	i
plain	shadowsocks/obfsplugin/http_simple.py	/^from shadowsocks.obfsplugin import plain$/;"	i
plain	shadowsocks/obfsplugin/obfs_tls.py	/^from shadowsocks.obfsplugin import plain$/;"	i
plain	shadowsocks/obfsplugin/plain.py	/^class plain(object):$/;"	c
plain	shadowsocks/obfsplugin/verify.py	/^from shadowsocks.obfsplugin import plain$/;"	i
platform	shadowsocks/tcprelay.py	/^import platform$/;"	i
poll	shadowsocks/eventloop.py	/^    def poll(self, timeout):$/;"	m	class:KqueueLoop
poll	shadowsocks/eventloop.py	/^    def poll(self, timeout):$/;"	m	class:SelectLoop
poll	shadowsocks/eventloop.py	/^    def poll(self, timeout=None):$/;"	m	class:EventLoop
pop	shadowsocks/ordereddict.py	/^    def pop(self, key, default=__marker):$/;"	m	class:OrderedDict
popitem	shadowsocks/ordereddict.py	/^    def popitem(self, last=True):$/;"	m	class:OrderedDict
pre_parse_header	shadowsocks/common.py	/^def pre_parse_header(data):$/;"	f
pre_parse_header	shadowsocks/tcprelay.py	/^from shadowsocks.common import pre_parse_header, parse_header$/;"	i
pre_parse_header	shadowsocks/udprelay.py	/^from shadowsocks.common import pre_parse_header, parse_header, pack_addr$/;"	i
print_exception	shadowsocks/shell.py	/^def print_exception(e):$/;"	f
print_function	shadowsocks/__init__.py	/^    with_statement$/;"	i
print_function	shadowsocks/asyncdns.py	/^    with_statement$/;"	i
print_function	shadowsocks/common.py	/^    with_statement$/;"	i
print_function	shadowsocks/crypto/__init__.py	/^    with_statement$/;"	i
print_function	shadowsocks/crypto/ctypes_libsodium.py	/^    with_statement$/;"	i
print_function	shadowsocks/crypto/ctypes_openssl.py	/^    with_statement$/;"	i
print_function	shadowsocks/crypto/openssl.py	/^    with_statement$/;"	i
print_function	shadowsocks/crypto/rc4_md5.py	/^    with_statement$/;"	i
print_function	shadowsocks/crypto/sodium.py	/^    with_statement$/;"	i
print_function	shadowsocks/crypto/table.py	/^    with_statement$/;"	i
print_function	shadowsocks/crypto/util.py	/^    with_statement$/;"	i
print_function	shadowsocks/daemon.py	/^    with_statement$/;"	i
print_function	shadowsocks/encrypt.py	/^    with_statement$/;"	i
print_function	shadowsocks/encrypt_test.py	/^    with_statement$/;"	i
print_function	shadowsocks/eventloop.py	/^    with_statement$/;"	i
print_function	shadowsocks/local.py	/^    with_statement$/;"	i
print_function	shadowsocks/lru_cache.py	/^    with_statement$/;"	i
print_function	shadowsocks/manager.py	/^    with_statement$/;"	i
print_function	shadowsocks/obfs.py	/^    with_statement$/;"	i
print_function	shadowsocks/obfsplugin/__init__.py	/^    with_statement$/;"	i
print_function	shadowsocks/obfsplugin/auth.py	/^    with_statement$/;"	i
print_function	shadowsocks/obfsplugin/http_simple.py	/^    with_statement$/;"	i
print_function	shadowsocks/obfsplugin/obfs_tls.py	/^    with_statement$/;"	i
print_function	shadowsocks/obfsplugin/plain.py	/^    with_statement$/;"	i
print_function	shadowsocks/obfsplugin/verify.py	/^    with_statement$/;"	i
print_function	shadowsocks/server.py	/^    with_statement$/;"	i
print_function	shadowsocks/shell.py	/^    with_statement$/;"	i
print_function	shadowsocks/tcprelay.py	/^    with_statement$/;"	i
print_function	shadowsocks/udprelay.py	/^    with_statement$/;"	i
print_function	tests/test.py	/^    with_statement$/;"	i
print_function	utils/autoban.py	/^    with_statement$/;"	i
print_help	shadowsocks/shell.py	/^def print_help(is_local):$/;"	f
print_local_help	shadowsocks/shell.py	/^def print_local_help():$/;"	f
print_server_help	mujson_mgr.py	/^def print_server_help():$/;"	f
print_server_help	shadowsocks/shell.py	/^def print_server_help():$/;"	f
print_shadowsocks	shadowsocks/shell.py	/^def print_shadowsocks():$/;"	f
pull_db_all_user	db_transfer.py	/^	def pull_db_all_user(self):$/;"	m	class:DbTransfer
pull_db_all_user	db_transfer.py	/^	def pull_db_all_user(self):$/;"	m	class:MuJsonTransfer
pull_db_users	db_transfer.py	/^	def pull_db_users(self, conn):$/;"	m	class:DbTransfer
pull_db_users	db_transfer.py	/^	def pull_db_users(self, conn):$/;"	m	class:Dbv3Transfer
push_db_all_user	db_transfer.py	/^	def push_db_all_user(self):$/;"	m	class:TransferBase
pwd	shadowsocks/daemon.py	/^    import pwd$/;"	i
python	tests/test.py	/^    python = ['coverage', 'run', '-p']$/;"	v
python	tests/test.py	/^python = ['python']$/;"	v
r	tests/test.py	/^            r = p3.wait()$/;"	v
r	tests/test.py	/^            r = p4.wait()$/;"	v
rand_bytes	shadowsocks/crypto/openssl.py	/^def rand_bytes(length):$/;"	f
rand_pass	mujson_mgr.py	/^	def rand_pass(self):$/;"	m	class:MuMgr
random	mujson_mgr.py	/^import random$/;"	i
random	shadowsocks/crypto/util.py	/^    import random$/;"	i
random	shadowsocks/obfsplugin/auth.py	/^import random$/;"	i
random	shadowsocks/obfsplugin/http_simple.py	/^import random$/;"	i
random	shadowsocks/obfsplugin/obfs_tls.py	/^import random$/;"	i
random	shadowsocks/obfsplugin/verify.py	/^import random$/;"	i
random	shadowsocks/tcprelay.py	/^import random$/;"	i
random	shadowsocks/udprelay.py	/^import random$/;"	i
random_head	shadowsocks/obfsplugin/http_simple.py	/^class random_head(plain.plain):$/;"	c
random_string	shadowsocks/encrypt.py	/^def random_string(length):$/;"	f
rc4_md5	shadowsocks/encrypt.py	/^from shadowsocks.crypto import rc4_md5, openssl, sodium, table$/;"	i
rc4_md5	shadowsocks/encrypt_test.py	/^from shadowsocks.crypto import rc4_md5$/;"	i
re	asyncmgr.py	/^import re$/;"	i
re	shadowsocks/asyncdns.py	/^import re$/;"	i
re	shadowsocks/common.py	/^        import re$/;"	i
re_enable	shadowsocks/obfsplugin/auth.py	/^    def re_enable(self, connection_id):$/;"	m	class:client_queue
register	shadowsocks/eventloop.py	/^    def register(self, fd, mode):$/;"	m	class:KqueueLoop
register	shadowsocks/eventloop.py	/^    def register(self, fd, mode):$/;"	m	class:SelectLoop
remote_address	shadowsocks/tcprelay.py	/^    def remote_address(self):$/;"	m	class:TCPRelayHandler
remote_address	shadowsocks/udprelay.py	/^    def remote_address(self):$/;"	m	class:TCPRelayHandler
remove	shadowsocks/eventloop.py	/^    def remove(self, f):$/;"	m	class:EventLoop
remove_callback	shadowsocks/asyncdns.py	/^    def remove_callback(self, callback):$/;"	m	class:DNSResolver
remove_handler	shadowsocks/tcprelay.py	/^    def remove_handler(self, handler):$/;"	m	class:TCPRelay
remove_handler	shadowsocks/udprelay.py	/^    def remove_handler(self, handler):$/;"	m	class:UDPRelay
remove_periodic	shadowsocks/eventloop.py	/^    def remove_periodic(self, callback):$/;"	m	class:EventLoop
remove_port	shadowsocks/manager.py	/^    def remove_port(self, config):$/;"	m	class:Manager
resolve	shadowsocks/asyncdns.py	/^    def resolve(self, hostname, callback):$/;"	m	class:DNSResolver
resource	db_transfer.py	/^		import resource$/;"	i
result1	tests/test_udp_src.py	/^    result1 = sock_in1.recvfrom(8)$/;"	v
result2	tests/test_udp_src.py	/^    result2 = sock_in2.recvfrom(8)$/;"	v
result3	tests/test_udp_src.py	/^    result3 = sock_in1.recvfrom(8)$/;"	v
rnd_data	shadowsocks/obfsplugin/auth.py	/^    def rnd_data(self, buf_size):$/;"	m	class:auth_sha1_v2
rnd_data	shadowsocks/obfsplugin/auth.py	/^    def rnd_data(self, buf_size):$/;"	m	class:auth_sha1_v3
run	server.py	/^	def run(self):$/;"	m	class:MainThread
run	server_pool.py	/^	def run(self):$/;"	m	class:MainThread
run	shadowsocks/encrypt_test.py	/^def run(func):$/;"	f
run	shadowsocks/eventloop.py	/^    def run(self):$/;"	m	class:EventLoop
run	shadowsocks/manager.py	/^    def run(self):$/;"	m	class:Manager
run	shadowsocks/manager.py	/^def run(config):$/;"	f
run_cipher	shadowsocks/crypto/util.py	/^def run_cipher(cipher, decipher):$/;"	f
run_method	shadowsocks/crypto/ctypes_openssl.py	/^def run_method(method):$/;"	f
run_method	shadowsocks/crypto/openssl.py	/^def run_method(method):$/;"	f
run_n	shadowsocks/encrypt_test.py	/^def run_n(func, name):$/;"	f
run_server	shadowsocks/manager.py	/^    def run_server():$/;"	f	function:test
run_server	shadowsocks/server.py	/^    def run_server():$/;"	f	function:main
run_test	tests/jenkins.sh	/^function run_test {$/;"	f
run_test	tests/test_daemon.sh	/^function run_test {$/;"	f
save	mujson_mgr.py	/^	def save(self, path):$/;"	m	class:MuJsonLoader
select	shadowsocks/eventloop.py	/^import select$/;"	i
select	tests/test.py	/^import select$/;"	i
send_data	shadowsocks/manager.py	/^        def send_data(data_dict):$/;"	f	function:Manager.handle_periodic
server_args	tests/test.py	/^server_args = python + ['shadowsocks\/server.py', '-v']$/;"	v
server_decode	shadowsocks/obfs.py	/^    def server_decode(self, buf):$/;"	m	class:obfs
server_decode	shadowsocks/obfsplugin/auth.py	/^    def server_decode(self, buf):$/;"	m	class:verify_base
server_decode	shadowsocks/obfsplugin/http_simple.py	/^    def server_decode(self, buf):$/;"	m	class:http_simple
server_decode	shadowsocks/obfsplugin/http_simple.py	/^    def server_decode(self, buf):$/;"	m	class:random_head
server_decode	shadowsocks/obfsplugin/obfs_tls.py	/^    def server_decode(self, buf):$/;"	m	class:tls_ticket_auth
server_decode	shadowsocks/obfsplugin/plain.py	/^    def server_decode(self, buf):$/;"	m	class:plain
server_decode	shadowsocks/obfsplugin/verify.py	/^    def server_decode(self, buf):$/;"	m	class:verify_base
server_encode	shadowsocks/obfs.py	/^    def server_encode(self, buf):$/;"	m	class:obfs
server_encode	shadowsocks/obfsplugin/auth.py	/^    def server_encode(self, buf):$/;"	m	class:verify_base
server_encode	shadowsocks/obfsplugin/http_simple.py	/^    def server_encode(self, buf):$/;"	m	class:http_simple
server_encode	shadowsocks/obfsplugin/http_simple.py	/^    def server_encode(self, buf):$/;"	m	class:random_head
server_encode	shadowsocks/obfsplugin/obfs_tls.py	/^    def server_encode(self, buf):$/;"	m	class:tls_ticket_auth
server_encode	shadowsocks/obfsplugin/plain.py	/^    def server_encode(self, buf):$/;"	m	class:plain
server_encode	shadowsocks/obfsplugin/verify.py	/^    def server_encode(self, buf):$/;"	m	class:verify_base
server_info	shadowsocks/obfs.py	/^class server_info(object):$/;"	c
server_is_run	server_pool.py	/^	def server_is_run(self, port):$/;"	m	class:ServerPool
server_pool	asyncmgr.py	/^import server_pool$/;"	i
server_pool	server.py	/^import server_pool$/;"	i
server_post_decrypt	shadowsocks/obfs.py	/^    def server_post_decrypt(self, buf):$/;"	m	class:obfs
server_post_decrypt	shadowsocks/obfsplugin/auth.py	/^    def server_post_decrypt(self, buf):$/;"	m	class:auth_sha1
server_post_decrypt	shadowsocks/obfsplugin/auth.py	/^    def server_post_decrypt(self, buf):$/;"	m	class:auth_sha1_v2
server_post_decrypt	shadowsocks/obfsplugin/auth.py	/^    def server_post_decrypt(self, buf):$/;"	m	class:auth_sha1_v3
server_post_decrypt	shadowsocks/obfsplugin/plain.py	/^    def server_post_decrypt(self, buf):$/;"	m	class:plain
server_post_decrypt	shadowsocks/obfsplugin/verify.py	/^    def server_post_decrypt(self, buf):$/;"	m	class:verify_deflate
server_post_decrypt	shadowsocks/obfsplugin/verify.py	/^    def server_post_decrypt(self, buf):$/;"	m	class:verify_sha1
server_post_decrypt	shadowsocks/obfsplugin/verify.py	/^    def server_post_decrypt(self, buf):$/;"	m	class:verify_simple
server_pre_encrypt	shadowsocks/obfs.py	/^    def server_pre_encrypt(self, buf):$/;"	m	class:obfs
server_pre_encrypt	shadowsocks/obfsplugin/auth.py	/^    def server_pre_encrypt(self, buf):$/;"	m	class:auth_sha1
server_pre_encrypt	shadowsocks/obfsplugin/auth.py	/^    def server_pre_encrypt(self, buf):$/;"	m	class:auth_sha1_v2
server_pre_encrypt	shadowsocks/obfsplugin/auth.py	/^    def server_pre_encrypt(self, buf):$/;"	m	class:auth_sha1_v3
server_pre_encrypt	shadowsocks/obfsplugin/plain.py	/^    def server_pre_encrypt(self, buf):$/;"	m	class:plain
server_pre_encrypt	shadowsocks/obfsplugin/verify.py	/^    def server_pre_encrypt(self, buf):$/;"	m	class:verify_deflate
server_pre_encrypt	shadowsocks/obfsplugin/verify.py	/^    def server_pre_encrypt(self, buf):$/;"	m	class:verify_sha1
server_pre_encrypt	shadowsocks/obfsplugin/verify.py	/^    def server_pre_encrypt(self, buf):$/;"	m	class:verify_simple
server_ready	tests/test.py	/^                server_ready = True$/;"	v
server_ready	tests/test.py	/^    server_ready = False$/;"	v
server_run_status	server_pool.py	/^	def server_run_status(self, port):$/;"	m	class:ServerPool
server_udp_post_decrypt	shadowsocks/obfs.py	/^    def server_udp_post_decrypt(self, buf):$/;"	m	class:obfs
server_udp_post_decrypt	shadowsocks/obfsplugin/plain.py	/^    def server_udp_post_decrypt(self, buf):$/;"	m	class:plain
server_udp_post_decrypt	shadowsocks/obfsplugin/verify.py	/^    def server_udp_post_decrypt(self, buf):$/;"	m	class:verify_sha1
server_udp_pre_encrypt	shadowsocks/obfs.py	/^    def server_udp_pre_encrypt(self, buf):$/;"	m	class:obfs
server_udp_pre_encrypt	shadowsocks/obfsplugin/plain.py	/^    def server_udp_pre_encrypt(self, buf):$/;"	m	class:plain
set_end	shadowsocks/udprelay.py	/^    def set_end(self, end_id):$/;"	m	class:RecvQueue
set_finish	shadowsocks/udprelay.py	/^    def set_finish(self, begin_id, done_list):$/;"	m	class:SendingQueue
set_max_client	shadowsocks/obfsplugin/auth.py	/^    def set_max_client(self, max_client):$/;"	m	class:obfs_auth_data
set_max_client	shadowsocks/obfsplugin/auth.py	/^    def set_max_client(self, max_client):$/;"	m	class:obfs_auth_v2_data
set_server_info	shadowsocks/obfs.py	/^    def set_server_info(self, server_info):$/;"	m	class:obfs
set_server_info	shadowsocks/obfsplugin/auth.py	/^    def set_server_info(self, server_info):$/;"	m	class:auth_sha1
set_server_info	shadowsocks/obfsplugin/auth.py	/^    def set_server_info(self, server_info):$/;"	m	class:auth_sha1_v2
set_server_info	shadowsocks/obfsplugin/auth.py	/^    def set_server_info(self, server_info):$/;"	m	class:auth_sha1_v3
set_server_info	shadowsocks/obfsplugin/auth.py	/^    def set_server_info(self, server_info):$/;"	m	class:verify_base
set_server_info	shadowsocks/obfsplugin/plain.py	/^    def set_server_info(self, server_info):$/;"	m	class:plain
set_server_info	shadowsocks/obfsplugin/verify.py	/^    def set_server_info(self, server_info):$/;"	m	class:verify_base
set_user	shadowsocks/daemon.py	/^def set_user(username):$/;"	f
setdefault	shadowsocks/ordereddict.py	/^    def setdefault(self, key, default=None):$/;"	m	class:OrderedDict
setup	setup.py	/^from setuptools import setup$/;"	i
shadowsocks	shadowsocks/obfsplugin/auth.py	/^import shadowsocks$/;"	i
shadowsocks	shadowsocks/obfsplugin/verify.py	/^import shadowsocks$/;"	i
shell	db_transfer.py	/^from shadowsocks import common, shell, lru_cache$/;"	i
shell	mujson_mgr.py	/^from shadowsocks import shell, common$/;"	i
shell	server.py	/^from shadowsocks import shell$/;"	i
shell	server_pool.py	/^from shadowsocks import shell, eventloop, tcprelay, udprelay, asyncdns, common$/;"	i
shell	shadowsocks/asyncdns.py	/^from shadowsocks import common, lru_cache, eventloop, shell$/;"	i
shell	shadowsocks/daemon.py	/^from shadowsocks import common, shell$/;"	i
shell	shadowsocks/eventloop.py	/^from shadowsocks import shell$/;"	i
shell	shadowsocks/local.py	/^from shadowsocks import shell, daemon, eventloop, tcprelay, udprelay, asyncdns$/;"	i
shell	shadowsocks/manager.py	/^from shadowsocks import common, eventloop, tcprelay, udprelay, asyncdns, shell$/;"	i
shell	shadowsocks/server.py	/^    asyncdns, manager$/;"	i
shell	shadowsocks/tcprelay.py	/^from shadowsocks import encrypt, obfs, eventloop, shell, common$/;"	i
shell	shadowsocks/udprelay.py	/^from shadowsocks import encrypt, obfs, eventloop, lru_cache, common, shell$/;"	i
signal	shadowsocks/daemon.py	/^import signal$/;"	i
signal	shadowsocks/local.py	/^import signal$/;"	i
signal	shadowsocks/server.py	/^import signal$/;"	i
signal	tests/test.py	/^import signal$/;"	i
size	shadowsocks/udprelay.py	/^    def size(self):$/;"	m	class:SendingQueue
sni	shadowsocks/obfsplugin/obfs_tls.py	/^    def sni(self, url):$/;"	m	class:tls_ticket_auth
sock_in1	tests/test_udp_src.py	/^    sock_in1 = socket.socket(socket.AF_INET, socket.SOCK_DGRAM,$/;"	v
sock_in1	tests/test_udp_src.py	/^    sock_in1 = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM,$/;"	v
sock_in2	tests/test_udp_src.py	/^    sock_in2 = socket.socket(socket.AF_INET, socket.SOCK_DGRAM,$/;"	v
sock_in2	tests/test_udp_src.py	/^    sock_in2 = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM,$/;"	v
sock_out	tests/test_udp_src.py	/^    sock_out = socks.socksocket(socket.AF_INET, socket.SOCK_DGRAM,$/;"	v
socket	asyncmgr.py	/^import socket$/;"	i
socket	db_transfer.py	/^		import socket$/;"	i
socket	mujson_mgr.py	/^		import socket$/;"	i
socket	shadowsocks/asyncdns.py	/^import socket$/;"	i
socket	shadowsocks/common.py	/^import socket$/;"	i
socket	shadowsocks/eventloop.py	/^import socket$/;"	i
socket	shadowsocks/manager.py	/^import socket$/;"	i
socket	shadowsocks/tcprelay.py	/^import socket$/;"	i
socket	shadowsocks/udprelay.py	/^import socket$/;"	i
socket	tests/test_udp_src.py	/^import socket$/;"	i
socks	tests/test_udp_src.py	/^import socks$/;"	i
sodium	shadowsocks/encrypt.py	/^from shadowsocks.crypto import rc4_md5, openssl, sodium, table$/;"	i
sodium	shadowsocks/encrypt_test.py	/^from shadowsocks.crypto import sodium$/;"	i
ssrlink	mujson_mgr.py	/^	def ssrlink(self, user, encode):$/;"	m	class:MuMgr
stage	shadowsocks/tcprelay.py	/^    def stage(self):$/;"	m	class:TCPRelayHandler
stage	tests/test.py	/^                    stage = 3$/;"	v
stage	tests/test.py	/^                    stage = 5$/;"	v
stage	tests/test.py	/^                stage = 2$/;"	v
stage	tests/test.py	/^                stage = 4$/;"	v
stage	tests/test.py	/^stage = 1$/;"	v
stat	shadowsocks/daemon.py	/^    import stat$/;"	i
stat_add	shadowsocks/tcprelay.py	/^    def stat_add(self, local_addr, val):$/;"	m	class:TCPRelay
stat_callback	shadowsocks/manager.py	/^    def stat_callback(self, port, data_len):$/;"	m	class:Manager
stop	server.py	/^	def stop(self):$/;"	m	class:MainThread
stop	server_pool.py	/^	def stop(self):$/;"	m	class:ServerPool
stop	shadowsocks/eventloop.py	/^    def stop(self):$/;"	m	class:EventLoop
string	shadowsocks/crypto/table.py	/^import string$/;"	i
string	shadowsocks/obfsplugin/obfs_tls.py	/^import string$/;"	i
struct	asyncmgr.py	/^import struct$/;"	i
struct	mujson_mgr.py	/^		import struct$/;"	i
struct	shadowsocks/asyncdns.py	/^import struct$/;"	i
struct	shadowsocks/common.py	/^import struct$/;"	i
struct	shadowsocks/crypto/table.py	/^import struct$/;"	i
struct	shadowsocks/manager.py	/^    import struct$/;"	i
struct	shadowsocks/obfsplugin/auth.py	/^import struct$/;"	i
struct	shadowsocks/obfsplugin/http_simple.py	/^import struct$/;"	i
struct	shadowsocks/obfsplugin/obfs_tls.py	/^import struct$/;"	i
struct	shadowsocks/obfsplugin/verify.py	/^import struct$/;"	i
struct	shadowsocks/tcprelay.py	/^import struct$/;"	i
struct	shadowsocks/udprelay.py	/^import struct$/;"	i
sweep	shadowsocks/lru_cache.py	/^    def sweep(self):$/;"	m	class:LRUCache
sweep_timeout	shadowsocks/udprelay.py	/^    def sweep_timeout(self):$/;"	m	class:TCPRelayHandler
switchrule	db_transfer.py	/^switchrule = None$/;"	v
sys	db_transfer.py	/^import sys$/;"	i
sys	mujson_mgr.py	/^import sys$/;"	i
sys	server.py	/^import sys$/;"	i
sys	server_pool.py	/^import sys$/;"	i
sys	shadowsocks/asyncdns.py	/^    import sys$/;"	i
sys	shadowsocks/daemon.py	/^import sys$/;"	i
sys	shadowsocks/encrypt.py	/^import sys$/;"	i
sys	shadowsocks/encrypt_test.py	/^import sys$/;"	i
sys	shadowsocks/local.py	/^import sys$/;"	i
sys	shadowsocks/lru_cache.py	/^    import os, sys, inspect$/;"	i
sys	shadowsocks/obfs.py	/^import sys$/;"	i
sys	shadowsocks/obfsplugin/auth.py	/^import sys$/;"	i
sys	shadowsocks/obfsplugin/http_simple.py	/^import sys$/;"	i
sys	shadowsocks/obfsplugin/obfs_tls.py	/^import sys$/;"	i
sys	shadowsocks/obfsplugin/plain.py	/^import sys$/;"	i
sys	shadowsocks/obfsplugin/verify.py	/^import sys$/;"	i
sys	shadowsocks/server.py	/^import sys$/;"	i
sys	shadowsocks/shell.py	/^import sys$/;"	i
sys	tests/test.py	/^import sys$/;"	i
sys	utils/autoban.py	/^import sys$/;"	i
table	shadowsocks/encrypt.py	/^from shadowsocks.crypto import rc4_md5, openssl, sodium, table$/;"	i
table	shadowsocks/encrypt_test.py	/^from shadowsocks.crypto import table$/;"	i
tcprelay	server_pool.py	/^from shadowsocks import shell, eventloop, tcprelay, udprelay, asyncdns, common$/;"	i
tcprelay	shadowsocks/local.py	/^from shadowsocks import shell, daemon, eventloop, tcprelay, udprelay, asyncdns$/;"	i
tcprelay	shadowsocks/manager.py	/^from shadowsocks import common, eventloop, tcprelay, udprelay, asyncdns, shell$/;"	i
tcprelay	shadowsocks/server.py	/^    asyncdns, manager$/;"	i
test	asyncmgr.py	/^def test():$/;"	f
test	shadowsocks/asyncdns.py	/^def test():$/;"	f
test	shadowsocks/crypto/rc4_md5.py	/^def test():$/;"	f
test	shadowsocks/lru_cache.py	/^def test():$/;"	f
test	shadowsocks/manager.py	/^def test():$/;"	f
test_aes_128_cfb	shadowsocks/crypto/ctypes_openssl.py	/^def test_aes_128_cfb():$/;"	f
test_aes_128_cfb	shadowsocks/crypto/openssl.py	/^def test_aes_128_cfb():$/;"	f
test_aes_128_cfb8	shadowsocks/crypto/ctypes_openssl.py	/^def test_aes_128_cfb8():$/;"	f
test_aes_128_cfb8	shadowsocks/crypto/openssl.py	/^def test_aes_128_cfb8():$/;"	f
test_aes_256_cfb	shadowsocks/crypto/ctypes_openssl.py	/^def test_aes_256_cfb():$/;"	f
test_aes_256_cfb	shadowsocks/crypto/openssl.py	/^def test_aes_256_cfb():$/;"	f
test_aes_256_ctr	shadowsocks/crypto/ctypes_openssl.py	/^def test_aes_256_ctr():$/;"	f
test_aes_256_ctr	shadowsocks/crypto/openssl.py	/^def test_aes_256_ctr():$/;"	f
test_aes_256_ofb	shadowsocks/crypto/ctypes_openssl.py	/^def test_aes_256_ofb():$/;"	f
test_aes_256_ofb	shadowsocks/crypto/openssl.py	/^def test_aes_256_ofb():$/;"	f
test_bf_cfb	shadowsocks/crypto/ctypes_openssl.py	/^def test_bf_cfb():$/;"	f
test_bf_cfb	shadowsocks/crypto/openssl.py	/^def test_bf_cfb():$/;"	f
test_chacha20	shadowsocks/crypto/ctypes_libsodium.py	/^def test_chacha20():$/;"	f
test_chacha20	shadowsocks/crypto/sodium.py	/^def test_chacha20():$/;"	f
test_chacha20_ietf	shadowsocks/crypto/sodium.py	/^def test_chacha20_ietf():$/;"	f
test_encrypt_all	shadowsocks/encrypt.py	/^def test_encrypt_all():$/;"	f
test_encryption	shadowsocks/crypto/table.py	/^def test_encryption():$/;"	f
test_encryptor	shadowsocks/encrypt.py	/^def test_encryptor():$/;"	f
test_find_library	shadowsocks/crypto/util.py	/^def test_find_library():$/;"	f
test_inet_conv	shadowsocks/common.py	/^def test_inet_conv():$/;"	f
test_ip_network	shadowsocks/common.py	/^def test_ip_network():$/;"	f
test_pack_header	shadowsocks/common.py	/^def test_pack_header():$/;"	f
test_parse_header	shadowsocks/common.py	/^def test_parse_header():$/;"	f
test_rc4	shadowsocks/crypto/ctypes_openssl.py	/^def test_rc4():$/;"	f
test_rc4	shadowsocks/crypto/openssl.py	/^def test_rc4():$/;"	f
test_salsa20	shadowsocks/crypto/ctypes_libsodium.py	/^def test_salsa20():$/;"	f
test_salsa20	shadowsocks/crypto/sodium.py	/^def test_salsa20():$/;"	f
test_table_result	shadowsocks/crypto/table.py	/^def test_table_result():$/;"	f
thread_db	db_transfer.py	/^	def thread_db(obj):$/;"	m	class:TransferBase
thread_db_stop	db_transfer.py	/^	def thread_db_stop():$/;"	m	class:TransferBase
threading	db_transfer.py	/^		import threading$/;"	i
threading	server.py	/^import threading$/;"	i
threading	server_pool.py	/^import threading$/;"	i
threading	shadowsocks/manager.py	/^    import threading$/;"	i
time	asyncmgr.py	/^import time$/;"	i
time	db_transfer.py	/^		import time$/;"	i
time	db_transfer.py	/^import time$/;"	i
time	server.py	/^import time$/;"	i
time	server_pool.py	/^import time$/;"	i
time	shadowsocks/crypto/util.py	/^    import time$/;"	i
time	shadowsocks/daemon.py	/^import time$/;"	i
time	shadowsocks/eventloop.py	/^import time$/;"	i
time	shadowsocks/lru_cache.py	/^import time$/;"	i
time	shadowsocks/manager.py	/^    import time$/;"	i
time	shadowsocks/obfsplugin/auth.py	/^import time$/;"	i
time	shadowsocks/obfsplugin/obfs_tls.py	/^import time$/;"	i
time	shadowsocks/obfsplugin/verify.py	/^import time$/;"	i
time	shadowsocks/tcprelay.py	/^import time$/;"	i
time	shadowsocks/udprelay.py	/^import time$/;"	i
time	tests/test.py	/^import time$/;"	i
tls_ticket_auth	shadowsocks/obfsplugin/obfs_tls.py	/^class tls_ticket_auth(plain.plain):$/;"	c
to_bytes	shadowsocks/common.py	/^def to_bytes(s):$/;"	f
to_bytes	shadowsocks/obfsplugin/auth.py	/^from shadowsocks.common import to_bytes, to_str, ord, chr$/;"	i
to_bytes	shadowsocks/obfsplugin/http_simple.py	/^from shadowsocks.common import to_bytes, to_str, ord, chr$/;"	i
to_bytes	shadowsocks/obfsplugin/obfs_tls.py	/^from shadowsocks.common import to_bytes, to_str, ord$/;"	i
to_bytes	shadowsocks/obfsplugin/verify.py	/^from shadowsocks.common import to_bytes, to_str, ord, chr$/;"	i
to_bytes	shadowsocks/shell.py	/^from shadowsocks.common import to_bytes, to_str, IPNetwork, PortRange$/;"	i
to_str	shadowsocks/common.py	/^def to_str(s):$/;"	f
to_str	shadowsocks/obfsplugin/auth.py	/^from shadowsocks.common import to_bytes, to_str, ord, chr$/;"	i
to_str	shadowsocks/obfsplugin/http_simple.py	/^from shadowsocks.common import to_bytes, to_str, ord, chr$/;"	i
to_str	shadowsocks/obfsplugin/obfs_tls.py	/^from shadowsocks.common import to_bytes, to_str, ord$/;"	i
to_str	shadowsocks/obfsplugin/verify.py	/^from shadowsocks.common import to_bytes, to_str, ord, chr$/;"	i
to_str	shadowsocks/shell.py	/^from shadowsocks.common import to_bytes, to_str, IPNetwork, PortRange$/;"	i
tornado	tests/coverage_server.py	/^    import tornado.ioloop$/;"	i
tornado	tests/coverage_server.py	/^    import tornado.web$/;"	i
traceback	db_transfer.py	/^import traceback$/;"	i
traceback	mujson_mgr.py	/^import traceback$/;"	i
traceback	server.py	/^			import traceback$/;"	i
traceback	server_pool.py	/^			import traceback$/;"	i
traceback	shadowsocks/eventloop.py	/^                    import traceback$/;"	i
traceback	shadowsocks/manager.py	/^import traceback$/;"	i
traceback	shadowsocks/shell.py	/^        import traceback$/;"	i
traceback	shadowsocks/tcprelay.py	/^import traceback$/;"	i
traceback	shadowsocks/udprelay.py	/^import traceback$/;"	i
traffic_format	db_transfer.py	/^	def traffic_format(self, traffic):$/;"	m	class:Dbv3Transfer
translate	shadowsocks/crypto/table.py	/^    translate = bytes.translate$/;"	v
translate	shadowsocks/crypto/table.py	/^    translate = string.translate$/;"	v
try_cipher	shadowsocks/encrypt.py	/^def try_cipher(key, method=None):$/;"	f
udprelay	server_pool.py	/^from shadowsocks import shell, eventloop, tcprelay, udprelay, asyncdns, common$/;"	i
udprelay	shadowsocks/local.py	/^from shadowsocks import shell, daemon, eventloop, tcprelay, udprelay, asyncdns$/;"	i
udprelay	shadowsocks/manager.py	/^from shadowsocks import common, eventloop, tcprelay, udprelay, asyncdns, shell$/;"	i
udprelay	shadowsocks/server.py	/^    asyncdns, manager$/;"	i
unregister	shadowsocks/eventloop.py	/^    def unregister(self, fd):$/;"	m	class:KqueueLoop
unregister	shadowsocks/eventloop.py	/^    def unregister(self, fd):$/;"	m	class:SelectLoop
update	shadowsocks/crypto/ctypes_libsodium.py	/^    def update(self, data):$/;"	m	class:Salsa20Crypto
update	shadowsocks/crypto/ctypes_openssl.py	/^    def update(self, data):$/;"	m	class:CtypesCrypto
update	shadowsocks/crypto/openssl.py	/^    def update(self, data):$/;"	m	class:OpenSSLCrypto
update	shadowsocks/crypto/sodium.py	/^    def update(self, data):$/;"	m	class:SodiumCrypto
update	shadowsocks/crypto/table.py	/^    def update(self, data):$/;"	m	class:NoneCipher
update	shadowsocks/crypto/table.py	/^    def update(self, data):$/;"	m	class:TableCipher
update	shadowsocks/obfsplugin/auth.py	/^    def update(self):$/;"	m	class:client_queue
update	shadowsocks/obfsplugin/auth.py	/^    def update(self, client_id, connection_id):$/;"	m	class:obfs_auth_data
update	shadowsocks/obfsplugin/auth.py	/^    def update(self, client_id, connection_id):$/;"	m	class:obfs_auth_v2_data
update	shadowsocks/ordereddict.py	/^    update = collections.MutableMapping.update$/;"	v	class:OrderedDict
update_activity	shadowsocks/tcprelay.py	/^    def update_activity(self, handler, data_len):$/;"	m	class:TCPRelay
update_activity	shadowsocks/udprelay.py	/^    def update_activity(self, handler):$/;"	m	class:UDPRelay
update_all_user	db_transfer.py	/^	def update_all_user(self, dt_transfer):$/;"	m	class:DbTransfer
update_all_user	db_transfer.py	/^	def update_all_user(self, dt_transfer):$/;"	m	class:Dbv3Transfer
update_all_user	db_transfer.py	/^	def update_all_user(self, dt_transfer):$/;"	m	class:MuJsonTransfer
update_stat	shadowsocks/tcprelay.py	/^    def update_stat(self, port, stat_dict, val):$/;"	m	class:TCPRelay
uptime	db_transfer.py	/^	def uptime(self):$/;"	m	class:Dbv3Transfer
urandom	shadowsocks/crypto/util.py	/^    from os import urandom$/;"	i
urandom	shadowsocks/encrypt.py	/^    from os import urandom$/;"	i
url	setup.py	/^    url='https:\/\/github.com\/shadowsocks\/shadowsocks',$/;"	v
urllib	tests/coverage_server.py	/^    import urllib$/;"	i
userinfo	mujson_mgr.py	/^	def userinfo(self, user):$/;"	m	class:MuMgr
util	shadowsocks/crypto/ctypes_libsodium.py	/^    from shadowsocks.crypto import util$/;"	i
util	shadowsocks/crypto/ctypes_openssl.py	/^    from shadowsocks.crypto import util$/;"	i
util	shadowsocks/crypto/openssl.py	/^from shadowsocks.crypto import util$/;"	i
util	shadowsocks/crypto/rc4_md5.py	/^    from shadowsocks.crypto import util$/;"	i
util	shadowsocks/crypto/sodium.py	/^from shadowsocks.crypto import util$/;"	i
util	shadowsocks/crypto/table.py	/^    from shadowsocks.crypto import util$/;"	i
util	shadowsocks/crypto/util.py	/^    import ctypes.util$/;"	i
values	shadowsocks/ordereddict.py	/^    def values(self):$/;"	m	class:OrderedDict
verbose	shadowsocks/shell.py	/^verbose = 0$/;"	v
verify	shadowsocks/obfs.py	/^from shadowsocks.obfsplugin import plain, http_simple, obfs_tls, verify, auth$/;"	i
verify_base	shadowsocks/obfsplugin/auth.py	/^class verify_base(plain.plain):$/;"	c
verify_base	shadowsocks/obfsplugin/verify.py	/^class verify_base(plain.plain):$/;"	c
verify_deflate	shadowsocks/obfsplugin/verify.py	/^class verify_deflate(verify_base):$/;"	c
verify_sha1	shadowsocks/obfsplugin/verify.py	/^class verify_sha1(verify_base):$/;"	c
verify_simple	shadowsocks/obfsplugin/verify.py	/^class verify_simple(verify_base):$/;"	c
version	setup.py	/^    version="2.6.12",$/;"	v
viewitems	shadowsocks/ordereddict.py	/^    def viewitems(self):$/;"	m	class:OrderedDict
viewkeys	shadowsocks/ordereddict.py	/^    def viewkeys(self):$/;"	m	class:OrderedDict
viewvalues	shadowsocks/ordereddict.py	/^    def viewvalues(self):$/;"	m	class:OrderedDict
wantDirectory	tests/nose_plugin.py	/^    def wantDirectory(self, directory):$/;"	m	class:ExtensionPlugin
wantFile	tests/nose_plugin.py	/^    def wantFile(self, file):$/;"	m	class:ExtensionPlugin
wantModule	tests/nose_plugin.py	/^    def wantModule(self, file):$/;"	m	class:ExtensionPlugin
web	tests/coverage_server.py	/^    import tornado.web$/;"	i
with_statement	shadowsocks/__init__.py	/^    with_statement$/;"	i
with_statement	shadowsocks/asyncdns.py	/^    with_statement$/;"	i
with_statement	shadowsocks/common.py	/^    with_statement$/;"	i
with_statement	shadowsocks/crypto/__init__.py	/^    with_statement$/;"	i
with_statement	shadowsocks/crypto/ctypes_libsodium.py	/^    with_statement$/;"	i
with_statement	shadowsocks/crypto/ctypes_openssl.py	/^    with_statement$/;"	i
with_statement	shadowsocks/crypto/openssl.py	/^    with_statement$/;"	i
with_statement	shadowsocks/crypto/rc4_md5.py	/^    with_statement$/;"	i
with_statement	shadowsocks/crypto/sodium.py	/^    with_statement$/;"	i
with_statement	shadowsocks/crypto/table.py	/^    with_statement$/;"	i
with_statement	shadowsocks/crypto/util.py	/^    with_statement$/;"	i
with_statement	shadowsocks/daemon.py	/^    with_statement$/;"	i
with_statement	shadowsocks/encrypt.py	/^    with_statement$/;"	i
with_statement	shadowsocks/encrypt_test.py	/^    with_statement$/;"	i
with_statement	shadowsocks/eventloop.py	/^    with_statement$/;"	i
with_statement	shadowsocks/local.py	/^    with_statement$/;"	i
with_statement	shadowsocks/lru_cache.py	/^    with_statement$/;"	i
with_statement	shadowsocks/manager.py	/^    with_statement$/;"	i
with_statement	shadowsocks/obfs.py	/^    with_statement$/;"	i
with_statement	shadowsocks/obfsplugin/__init__.py	/^    with_statement$/;"	i
with_statement	shadowsocks/obfsplugin/auth.py	/^    with_statement$/;"	i
with_statement	shadowsocks/obfsplugin/http_simple.py	/^    with_statement$/;"	i
with_statement	shadowsocks/obfsplugin/obfs_tls.py	/^    with_statement$/;"	i
with_statement	shadowsocks/obfsplugin/plain.py	/^    with_statement$/;"	i
with_statement	shadowsocks/obfsplugin/verify.py	/^    with_statement$/;"	i
with_statement	shadowsocks/server.py	/^    with_statement$/;"	i
with_statement	shadowsocks/shell.py	/^    with_statement$/;"	i
with_statement	shadowsocks/tcprelay.py	/^    with_statement$/;"	i
with_statement	shadowsocks/udprelay.py	/^    with_statement$/;"	i
with_statement	tests/test.py	/^    with_statement$/;"	i
with_statement	utils/autoban.py	/^    with_statement$/;"	i
write_pid_file	shadowsocks/daemon.py	/^def write_pid_file(pid_file, pid):$/;"	f
write_to_server_socket	shadowsocks/udprelay.py	/^    def write_to_server_socket(self, data, addr):$/;"	m	class:UDPRelay
zlib	shadowsocks/obfsplugin/auth.py	/^import zlib$/;"	i
zlib	shadowsocks/obfsplugin/verify.py	/^import zlib$/;"	i
