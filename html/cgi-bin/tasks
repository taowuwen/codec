#!/usr/bin/env bash


#Date: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT

cgi_root=$(dirname `realpath $0`)
PARAMETERS=

source $cgi_root/db/db.inc

#key 
get_params()
{
	[ -z "$PARAMETERS" ] && {
		do_get_params  || return 1
	}

	echo $PARAMETERS |
	awk -v key="$1" -F\& '{
		for ( i = 1; i <= NF; i++) {
			split($i, ary, "=")
			if (ary[1] == key) {
				printf("%s ", ary[2])
			}
		}
	}' |
	$cgi_root/http_url_decode.py
}

do_get_params()
{
	local request
	[ "${REQUEST_METHOD}" == "POST" ] && {
		request=`$cgi_root/http_read_post_text.py` || return 1
	} || {
		request=${QUERY_STRING}
	}

	export PARAMETERS="$request"

	echo $PARAMETERS
}

new_ticket()
{
	dd if=/dev/random of=/dev/stdout bs=16 count=2 2>/dev/null| md5sum | awk '{print $1}'
}

# 10 mins
next_expires() {
	timeout=$(expr `date +%s` + 600)
	eval "date --date='@$timeout' -R | sed 's/+.*$/GMT/g'"
}

do_test() 
{
	ticket=`new_ticket`
	to=`next_expires`
	echo -en "Set-Cookie: ticket=$ticket; Expires=$to\r\n"
	echo -en "Content-Type: text/html\r\n\r\n"

	echo "$ticket"
	echo $to
	echo $0, $*
	env
}

logfile=/tmp/web.log

log_trace()
{
	echo "`date`----- $*" >>$logfile
}

print_404_not_found()
{
        echo -en "Status: 404 Not Found\r\n"
        echo -en "Content-Type: text/html\r\n\r\n"
        echo -en "<html> <body> <h1 align="center"> Opps!!! 404: Not Found </h1> </body> </html>"
}

do_redirect_login ()
{
	echo -en "Status: 302 Moved Temporarily\r\n"
	echo -en "Location: http://${SERVER_ADDR}:${SERVER_PORT}/tasks/login.html\r\n"
	echo -en "Content-Type: text/html\r\n\r\n"
}

load_user_info()
{
	local fl

	fl=/tmp/$1

	[ -f $fl ] || return 1

	# get user id and connect to db to get lastest userinfo
	# connect to db
	# get expired info
}

cookie_expired()
{
	return 1
}

do_load_user_main_page()
{
	return 1
}

do_main()
{
	local cookie ticket
        echo -en "Status: 404 Not Found\r\n"

	cookie=${HTTP_COOKIE}
	[ -n "$cookie" ] && eval "$cookie" 

	log_trace "got request cookie is $cookie"

	[ -z $cookie ] && {
		do_redirect_login
		return 0
	}

	load_user_info $ticket || {
		do_redirect_login
		return 0
	}

	cookie_expired && { 
		do_redirect_login
		return 0 
	}

	do_load_user_main_page
}

do_login()
{
        echo -en "Status: 404 Not Found\r\n"
        echo -en "Content-Type: text/html\r\n\r\n"
        echo -en "<html> <body> <h1 align="center"> Opps!!! 404: Not Found </h1> </body> </html>"
	env

	get_params username
	get_params password

	log_trace `get_params username`
	log_trace `get_params password`
}

do_register()
{
        echo -en "Status: 404 Not Found\r\n"
        echo -en "Content-Type: text/html\r\n\r\n"
        echo -en "<html> <body> <h1 align="center"> Opps!!! 404: Not Found </h1> </body> </html>"
	env
	get_params username
	get_params password
	get_params email
}

do_reset()
{
	echo -en "Content-Type: text/html\r\n\r\n"
	cat << EOF
<html> 
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
</head>
<body> <h1 align="center"> Success !!!</h1> 
`reset_db`
</body> </html>
EOF
}

main() {
	CMD=`basename $0`

	echo -ne "\n`date`--------- $cmd ----${REMOTE_ADDR}:${REMOTE_PORT} start ($$)\n" >>$logfile
	case $CMD in
	task_main)
		do_main
		;;

	login)
		do_login
		;;

	register)
		do_register
		;;

	install|init|reset|restore)
		do_reset
		;;
	*)
		print_404_not_found
		;;
	esac

	echo -ne "\n`date`--------- $cmd ----${REMOTE_ADDR}:${REMOTE_PORT} end ($$)\n" >>$logfile

	return $?
}

main
exit $?
