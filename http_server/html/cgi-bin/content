#!/usr/bin/env bash

export PATH=$PATH:"/usr/bin/ems_c/bin"

flg_stat_online=$((1 << 31))
flg_stat_upgraded=$((1 << 17))
flg_stat_download=$((1 << 18))

ROM_VERSION=""


#cfg key
get_value()
{
	grep $2 $1 | head -1 | awk -F= '{print $2}'
}

print_header()
{
	echo -ne "Content-Type: text/html\r\n\r\n"

	echo "
<!DOCTYPE html>
<html lang="zh-cn">

<meta charset="utf-8">
<head>
	<style type="text/css">
		div#container{width:1024px}
		div#header {background-color:#aabbcc;}
		div#menu {background-color:#aabbcc;width:50%;float:left;}
		div#content {background-color:#aabbcc;width:100%;float:left;}
		div#footer {background-color:#99bbbb;clear:both;text-align:center;}
		h1 {margin-bottom:0; color:#001155}
		h2 {margin-bottom:0;font-size:18px;}
		ul {margin:0;}
		li {list-style:none;}
	</style>
</head>

<body bgcolor=#aabbcc>
<div>

<div id="header">
	<h1> 设备状态信息 </h1>
</div>
"
}

print_tailer()
{
	echo "
</div>
	<script type="text/javascript" src="/refresh.js"></script>
</body>
</html>
"
}

# flg
print_device_status()
{
	local flg=$1

	[ 0 -eq $(( $flg & $flg_stat_online )) ]    || {
		echo -en "<font color="green">Online </font> "
	}

	[ 0 -eq  $(( $flg & $flg_stat_download )) ] || {
		echo -en "<font color="#ff00aa"> downloaded </font> "
	}

	[ 0 -eq $(( $flg & $flg_stat_upgraded )) ] || {
		echo -en "<font color="green"> upgraded </font> "
	}

	[ 0 -eq $flg ] && {
		echo -en "<font color="grey"> offline </font> "
	}
}

# rom_ver
print_rom()
{
	[ "$1" == "$ROM_VERSION" ] || {
		echo -en "<font color=#ff0000> $1 </font>"
		return 0
	}

	echo -en "<font color=#00aa00> $1 </font>"
}

# date
print_date()
{
	date --date=@"$1" +"%Y-%m-%d %H:%M:%S"
}


# rom_ver flag
print_update_status()
{
	[ "$1" == "$ROM_VERSION" ] || {
		echo -en "<font color=#ff0000>未升级</font>"

		[ 0 -eq  $(($2 & $flg_stat_download)) ] || {
			echo -en "<font color="#0000ff">|已下载</font> "
		}
		return 0
	}

	echo -en "<font color="#00aa00">已升级</font>"
}

arylen()
{
	l=0
	while true
	do
		[ -z "$1" ] && break
		l=$(( $l + 1))
		shift
	done

	echo $l
}

sn_unexcepted()
{
	online=0

	for key in $keys
	do
		json_select $key

		json_get_var flag flag 0

		[ 0 -eq $(( $flag & $flg_stat_online )) ] || {
			online=`expr $online + 1`
		}

		json_select ".."
	done

	[ $online -gt 1 ] && return 0

	return 1
}

# sn sn_flag
print_device_history()
{
	local sn sn_flag len error
	sn=$1
	sn_flag=$2


	json_get_keys keys

	len=`arylen $keys`
	error=0

	[ $len -gt 1 ] && {
		sn_unexcepted && error=1
	}

	for key in $keys
	do
		json_select $key

		json_get_vars ip ty ver status create access flag
		echo "<tr>"

		if [ $key -gt 1 ]; then
			echo "<td> </td>"
			echo "<td> </td>"
#			echo "<td> <font color="#aaaaaa">$sn</font></td>"
#			echo "<td> `print_device_status $sn_flag` </td>"
		else
			if [ 0 -eq $(( $flag & $flg_stat_online )) ]; then
				echo "<td> <font color="grey">$sn</font></td>"
				echo "<td> `print_device_status $sn_flag` </td>"
			else
				if [ $error -eq 1 ]; then
					echo "<td> <font color=#ff0000>$sn </font></td>"
					echo "<td> <font color=#ff0000>异常</font></td>"
				else
					echo "<td> <font color=#0000ff>$sn</font></td>"
					echo "<td> `print_device_status $sn_flag` </td>"
				fi
			fi
		fi

		echo "<td> $key[`print_update_status $ver $flag`] </td>"
		echo "<td> $ip </td>"
		echo "<td> $ty </td>"
		echo "<td> `print_rom $ver` </td>"
		echo "<td> $status </td>"
		echo "<td> `print_date $create` </td>"
		echo "<td> `print_date $access` </td>"
		if [ $error -eq 1 ]; then
			echo "<td> <font color=#ff0000>异常</font></td>"
		else
			echo "<td> `print_device_status $flag`</td>"
		fi
		echo "</tr>"

		json_select ".."
	done
}

print_all_devices()
{
	json_set_namespace RESPONSE

	json_select device &>/dev/null

	json_get_keys keys

	for key in $keys
	do
		json_select $key

		json_get_vars  sn flag upgs

		[ -n "$upgs" -a -n "$sn" -a -n "$flag" ] && {
			json_select upgs
			print_device_history $sn $flag
			json_select ".."
		}

		json_select ".."
	done
}

print_content()
{
	. /usr/bin/ems_c/bin/jshn.sh

	echo "<div id="content">"

	ctx=`ems_statistic method=get` || {
		echo  "<p> 无法获得统计信息 </p>"
		echo "</div>"
		return 1
	}

	json_set_namespace RESPONSE

	json_load "$ctx" 2>/dev/null

	echo "<table align="left">"
	echo "<tr>"	
	echo "<th width=10% align="left">设备SN</th> "
	echo "<th width=10% align="left">设备状态 </th> "
	echo "<th width=10% align="left">编号 </th> "
	echo "<th width=10% align="left">IP地址 </th> "
	echo "<th width=10% align="left">设备类型 </th> "
	echo "<th width=10% align="left">ROM版本 </th> "
	echo "<th width=10% align="left">当前进度 </th> "
	echo "<th width=10% align="left">上线时间 </th> "
	echo "<th width=10% align="left">更新时间 </th> "
	echo "<th width=10% align="left">状态 </th> "
	echo "</tr>"

	print_all_devices

	echo "</table>"

	echo "</div>"
}

main()
{
	print_header

	ROM_VERSION=`get_value "${DOCUMENT_ROOT}/conf/rom.conf" rom.version`

	print_content

	print_tailer
}

main
