!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
) print	libubox/examples/uloop-example.lua	/^uloop.timer(function() print("2000 ms timer run"); end, 2000)$/;"	f
) print	libubox/examples/uloop-example.lua	/^uloop.timer(function() print("3000 ms timer run"); end, 3000):cancel()$/;"	f
ADVANCE_CHAR	json/json_tokener.c	176;"	d	file:
ARRAY_LIST_DEFAULT_SIZE	json/arraylist.h	19;"	d
ARRAY_SIZE	libubox/examples/blobmsg-example.c	82;"	d	file:
ARRAY_SIZE	libubox/uloop.c	46;"	d	file:
ARRAY_SIZE	ubus/ubus_common.h	23;"	d
AVL_FIND_EQUAL	libubox/avl.h	/^  AVL_FIND_EQUAL,$/;"	e	enum:avl_find_mode
AVL_FIND_GREATEREQUAL	libubox/avl.h	/^  AVL_FIND_GREATEREQUAL$/;"	e	enum:avl_find_mode
AVL_FIND_LESSEQUAL	libubox/avl.h	/^  AVL_FIND_LESSEQUAL,$/;"	e	enum:avl_find_mode
BLOBMSG_ALIGN	libubox/blobmsg.h	21;"	d
BLOBMSG_PADDING	libubox/blobmsg.h	22;"	d
BLOBMSG_TYPE_ARRAY	libubox/blobmsg.h	/^	BLOBMSG_TYPE_ARRAY,$/;"	e	enum:blobmsg_type
BLOBMSG_TYPE_BOOL	libubox/blobmsg.h	/^	BLOBMSG_TYPE_BOOL = BLOBMSG_TYPE_INT8,$/;"	e	enum:blobmsg_type
BLOBMSG_TYPE_INT16	libubox/blobmsg.h	/^	BLOBMSG_TYPE_INT16,$/;"	e	enum:blobmsg_type
BLOBMSG_TYPE_INT32	libubox/blobmsg.h	/^	BLOBMSG_TYPE_INT32,$/;"	e	enum:blobmsg_type
BLOBMSG_TYPE_INT64	libubox/blobmsg.h	/^	BLOBMSG_TYPE_INT64,$/;"	e	enum:blobmsg_type
BLOBMSG_TYPE_INT8	libubox/blobmsg.h	/^	BLOBMSG_TYPE_INT8,$/;"	e	enum:blobmsg_type
BLOBMSG_TYPE_LAST	libubox/blobmsg.h	/^	BLOBMSG_TYPE_LAST = __BLOBMSG_TYPE_LAST - 1,$/;"	e	enum:blobmsg_type
BLOBMSG_TYPE_STRING	libubox/blobmsg.h	/^	BLOBMSG_TYPE_STRING,$/;"	e	enum:blobmsg_type
BLOBMSG_TYPE_TABLE	libubox/blobmsg.h	/^	BLOBMSG_TYPE_TABLE,$/;"	e	enum:blobmsg_type
BLOBMSG_TYPE_UNSPEC	libubox/blobmsg.h	/^	BLOBMSG_TYPE_UNSPEC,$/;"	e	enum:blobmsg_type
BLOB_ATTR_ALIGN	libubox/blob.h	98;"	d
BLOB_ATTR_BINARY	libubox/blob.h	/^	BLOB_ATTR_BINARY,$/;"	e	enum:__anon17
BLOB_ATTR_ID_MASK	libubox/blob.h	95;"	d
BLOB_ATTR_ID_SHIFT	libubox/blob.h	96;"	d
BLOB_ATTR_INT16	libubox/blob.h	/^	BLOB_ATTR_INT16,$/;"	e	enum:__anon17
BLOB_ATTR_INT32	libubox/blob.h	/^	BLOB_ATTR_INT32,$/;"	e	enum:__anon17
BLOB_ATTR_INT64	libubox/blob.h	/^	BLOB_ATTR_INT64,$/;"	e	enum:__anon17
BLOB_ATTR_INT8	libubox/blob.h	/^	BLOB_ATTR_INT8,$/;"	e	enum:__anon17
BLOB_ATTR_LAST	libubox/blob.h	/^	BLOB_ATTR_LAST$/;"	e	enum:__anon17
BLOB_ATTR_LEN_MASK	libubox/blob.h	97;"	d
BLOB_ATTR_NESTED	libubox/blob.h	/^	BLOB_ATTR_NESTED,$/;"	e	enum:__anon17
BLOB_ATTR_STRING	libubox/blob.h	/^	BLOB_ATTR_STRING,$/;"	e	enum:__anon17
BLOB_ATTR_UNSPEC	libubox/blob.h	/^	BLOB_ATTR_UNSPEC,$/;"	e	enum:__anon17
CC	Makefile	/^CC = ${ROOT}\/bin\/mipsel-openwrt-linux-gcc$/;"	m
CC	Makefile	/^CC = gcc$/;"	m
CC	libubox/Makefile	/^CC=gcc$/;"	m
CC	ubus/Makefile	/^CC=gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS  = -Wall $(INC)  $/;"	m
CFLAGS	libubox/Makefile	/^CFLAGS=-Wall -O2 -g -DDEBUG $(INC)  -DHAVE_CGI -DHAVE_TLS -std=gnu99$/;"	m
CFLAGS	ubus/Makefile	/^CFLAGS=-Wall -O2 -g -DDEBUG $(INC)  -DHAVE_LUA -DHAVE_CGI -DHAVE_TLS$/;"	m
CLOCK_MONOTONIC	uhttpd-ubus.c	83;"	d	file:
D	uhttpd.h	77;"	d
D	uhttpd.h	81;"	d
DEFAULT_SET	libubox/ustream.c	113;"	d	file:
DEFAULT_SET	libubox/ustream.c	130;"	d	file:
DIR	Makefile	/^DIR=$(shell pwd)$/;"	m
DIR	libubox/Makefile	/^DIR=$(shell pwd)\/$/;"	m
DIR	ubus/Makefile	/^DIR=$(shell pwd)\/$/;"	m
DT_UHTTPD_EVENT_HEADER___	dt_uhttpd_evt.h	4;"	d
DT_UHTTPD_SELECT_EXTEND_HEADER	dt_uhttpd_select.h	3;"	d
DT_UTILS_HEADER___	dt_uhttpd_utils.h	3;"	d
DV	uhttpd.h	76;"	d
DV	uhttpd.h	80;"	d
EPOLLRDHUP	libubox/uloop.c	188;"	d	file:
ERR	dt_uhttpd_utils.h	8;"	d
EVMSG_DATA	ubus/ubusd_event.c	/^	EVMSG_DATA,$/;"	e	enum:__anon14	file:
EVMSG_ID	ubus/ubusd_event.c	/^	EVMSG_ID,$/;"	e	enum:__anon14	file:
EVMSG_LAST	ubus/ubusd_event.c	/^	EVMSG_LAST,$/;"	e	enum:__anon14	file:
EVREG_LAST	ubus/ubusd_event.c	/^	EVREG_LAST,$/;"	e	enum:__anon13	file:
EVREG_OBJECT	ubus/ubusd_event.c	/^	EVREG_OBJECT,$/;"	e	enum:__anon13	file:
EVREG_PATTERN	ubus/ubusd_event.c	/^	EVREG_PATTERN,$/;"	e	enum:__anon13	file:
EXPORT	libubox/avl.h	51;"	d
FALSE	json/json_object.h	21;"	d
FALSE	json/json_object.h	22;"	d
FOO_LIST	libubox/examples/blobmsg-example.c	/^	FOO_LIST,$/;"	e	enum:__anon18	file:
FOO_MESSAGE	libubox/examples/blobmsg-example.c	/^	FOO_MESSAGE,$/;"	e	enum:__anon18	file:
FOO_TESTDATA	libubox/examples/blobmsg-example.c	/^	FOO_TESTDATA$/;"	e	enum:__anon18	file:
HAVE_DLFCN_H	json/config.h	5;"	d
HAVE_FCNTL_H	json/config.h	11;"	d
HAVE_INTTYPES_H	json/config.h	14;"	d
HAVE_LIMITS_H	json/config.h	17;"	d
HAVE_MALLOC	json/config.h	21;"	d
HAVE_MEMORY_H	json/config.h	24;"	d
HAVE_OPEN	json/config.h	27;"	d
HAVE_REALLOC	json/config.h	31;"	d
HAVE_STDARG_H	json/config.h	34;"	d
HAVE_STDINT_H	json/config.h	37;"	d
HAVE_STDLIB_H	json/config.h	40;"	d
HAVE_STRERROR	json/config.h	43;"	d
HAVE_STRINGS_H	json/config.h	46;"	d
HAVE_STRING_H	json/config.h	49;"	d
HAVE_STRNCASECMP	json/config.h	52;"	d
HAVE_STRNDUP	json/config.h	55;"	d
HAVE_SYSLOG_H	json/config.h	58;"	d
HAVE_SYS_PARAM_H	json/config.h	61;"	d
HAVE_SYS_STAT_H	json/config.h	64;"	d
HAVE_SYS_TYPES_H	json/config.h	67;"	d
HAVE_UNISTD_H	json/config.h	70;"	d
HAVE_VASPRINTF	json/config.h	73;"	d
HAVE_VPRINTF	json/config.h	76;"	d
HAVE_VSNPRINTF	json/config.h	79;"	d
HAVE_VSYSLOG	json/config.h	82;"	d
HELLO_ID	ubus/example/ubus-example.c	/^	HELLO_ID,$/;"	e	enum:__anon9	file:
HELLO_MSG	ubus/example/ubus-example.c	/^	HELLO_MSG,$/;"	e	enum:__anon9	file:
INC	Makefile	/^INC=-I$(INC_DIR) -I.\/libubox -I.\/ -I.\/ubus -I.\/json$/;"	m
INC	libubox/Makefile	/^INC=-I$(INC_DIR) -I.\/libubox -I.\/$/;"	m
INC	ubus/Makefile	/^INC=-I$(INC_DIR) -I..\/libubox -I.\/ -I..\/$/;"	m
INC_DIR	Makefile	/^INC_DIR=$(DIR)$/;"	m
INC_DIR	libubox/Makefile	/^INC_DIR=$(DIR)$/;"	m
INC_DIR	ubus/Makefile	/^INC_DIR=$(DIR)$/;"	m
INIT_LIST_HEAD	libubox/list.h	/^INIT_LIST_HEAD(struct list_head *list)$/;"	f
JSON_DIR	Makefile	/^JSON_DIR=$(DIR)\/json$/;"	m
JSON_FILE_BUF_SIZE	json/json_util.h	21;"	d
JSON_OBJECT_DEF_HASH_ENTRIES	json/json_object.h	19;"	d
JSON_TOKENER_MAX_DEPTH	json/json_tokener.h	72;"	d
LDFLAGS	Makefile	/^LDFLAGS=-lrt -lm -ldl -lcrypt$/;"	m
LDFLAGS	libubox/Makefile	/^LDFLAGS=-ljson$/;"	m
LDFLAGS	ubus/Makefile	/^LDFLAGS=$/;"	m
LH_EMPTY	json/linkhash.h	27;"	d
LH_FREED	json/linkhash.h	32;"	d
LH_PRIME	json/linkhash.h	22;"	d
LIST_HEAD	libubox/list.h	48;"	d
LIST_HEAD	libubox/list.h	49;"	d
LIST_HEAD_INIT	libubox/list.h	47;"	d
LOG_ERR	uhttpd.h	64;"	d
LOG_INFO	uhttpd.h	66;"	d
LOG_TRACE	uhttpd.h	67;"	d
LOG_VERBOSE	uhttpd.h	68;"	d
LOG_WARN	uhttpd.h	65;"	d
LT_OBJDIR	json/config.h	86;"	d
LUA_DIR	Makefile	/^LUA_DIR=$(DIR)\/libubox$/;"	m
LUA_DIR	libubox/Makefile	/^LUA_DIR=$(DIR)\/lua$/;"	m
LUA_DIR	ubus/Makefile	/^LUA_DIR=$(DIR)\/libubox$/;"	m
MAX_STACK_BUFLEN	libubox/ustream.c	429;"	d	file:
MAX_VARLEN	libubox/jshn/jshn.c	10;"	d	file:
MC_ABORT	json/debug.h	32;"	d
MC_ABORT	json/debug.h	40;"	d
MC_DEBUG	json/debug.h	33;"	d
MC_DEBUG	json/debug.h	41;"	d
MC_ERROR	json/debug.h	34;"	d
MC_ERROR	json/debug.h	42;"	d
MC_GET_DEBUG	json/debug.h	30;"	d
MC_GET_DEBUG	json/debug.h	38;"	d
MC_INFO	json/debug.h	35;"	d
MC_INFO	json/debug.h	43;"	d
MC_SET_DEBUG	json/debug.h	29;"	d
MC_SET_DEBUG	json/debug.h	37;"	d
MC_SET_SYSLOG	json/debug.h	31;"	d
MC_SET_SYSLOG	json/debug.h	39;"	d
METANAME	ubus/lua/ubus.c	21;"	d	file:
MIPS_INC	Makefile	/^MIPS_INC=${ROOT}\/include\/$/;"	m
MIPS_LIB	Makefile	/^MIPS_LIB= ${ROOT}\/lib $/;"	m
MODNAME	ubus/lua/ubus.c	20;"	d	file:
NO	dt_uhttpd_utils.h	5;"	d
OBJS	Makefile	/^OBJS  = $(patsubst $(SRC_DIR)\/%.c, $(OBJ_DIR)\/%.o, $(wildcard $(SRC_DIR)\/*.c))$/;"	m
OBJS	libubox/Makefile	/^OBJS  = $(patsubst $(SRC_DIR)\/%.c, $(OBJ_DIR)\/%.o, $(wildcard $(SRC_DIR)\/*.c))$/;"	m
OBJS	ubus/Makefile	/^OBJS  = $(patsubst $(SRC_DIR)\/%.c, $(OBJ_DIR)\/%.o, $(wildcard $(SRC_DIR)\/*.c))$/;"	m
OBJ_DIR	Makefile	/^OBJ_DIR=\/d\/dt_net_obj$/;"	m
OBJ_DIR	Makefile	/^OBJ_DIR=\/tmp\/uhttpdobj$/;"	m
OBJ_DIR	libubox/Makefile	/^OBJ_DIR=$(DIR)obj$/;"	m
OBJ_DIR	libubox/Makefile	/^OBJ_DIR=\/d\/dt_net_obj$/;"	m
OBJ_DIR	ubus/Makefile	/^OBJ_DIR=$(DIR)obj$/;"	m
OBJ_DIR	ubus/Makefile	/^OBJ_DIR=\/d\/dt_net_obj$/;"	m
OK	dt_uhttpd_utils.h	7;"	d
PACKAGE	json/config.h	89;"	d
PACKAGE_BUGREPORT	json/config.h	92;"	d
PACKAGE_NAME	json/config.h	95;"	d
PACKAGE_STRING	json/config.h	98;"	d
PACKAGE_TARNAME	json/config.h	101;"	d
PACKAGE_VERSION	json/config.h	104;"	d
POP_CHAR	json/json_tokener.c	161;"	d	file:
PRINTBUF_DEBUG	json/printbuf.h	23;"	d
READ_BLOCKED_FULL	libubox/ustream.h	/^	READ_BLOCKED_FULL = (1 << 1),$/;"	e	enum:read_blocked_reason
READ_BLOCKED_USER	libubox/ustream.h	/^	READ_BLOCKED_USER = (1 << 0),$/;"	e	enum:read_blocked_reason
ROOT	Makefile	/^ROOT=\/home\/tww\/xRouter_Generic_Build20131223_V1.1.1.1\/staging_dir\/toolchain-mipsel_r2_gcc-4.6-linaro_uClibc-0.9.33.2$/;"	m
SOL_TCP	uhttpd.h	58;"	d
SRC_DIR	Makefile	/^SRC_DIR=$(DIR)$/;"	m
SRC_DIR	libubox/Makefile	/^SRC_DIR=$(DIR)$/;"	m
SRC_DIR	ubus/Makefile	/^SRC_DIR=$(DIR)$/;"	m
STATIC_IOV	ubus/libubus.c	28;"	d	file:
STDC_HEADERS	json/config.h	107;"	d
TARGET	Makefile	/^TARGET=$(shell uname -o)$/;"	m
TARGET	libubox/Makefile	/^TARGET=$(shell uname -o)$/;"	m
TARGET	ubus/Makefile	/^TARGET=$(shell uname -o)$/;"	m
TRUE	json/json_object.h	24;"	d
TRUE	json/json_object.h	25;"	d
UBUSD_CLIENT_BACKLOG	ubus/ubusd.h	25;"	d
UBUS_ATTR_DATA	ubus/ubusmsg.h	/^	UBUS_ATTR_DATA,$/;"	e	enum:ubus_msg_attr
UBUS_ATTR_MAX	ubus/ubusmsg.h	/^	UBUS_ATTR_MAX,$/;"	e	enum:ubus_msg_attr
UBUS_ATTR_METHOD	ubus/ubusmsg.h	/^	UBUS_ATTR_METHOD,$/;"	e	enum:ubus_msg_attr
UBUS_ATTR_OBJID	ubus/ubusmsg.h	/^	UBUS_ATTR_OBJID,$/;"	e	enum:ubus_msg_attr
UBUS_ATTR_OBJPATH	ubus/ubusmsg.h	/^	UBUS_ATTR_OBJPATH,$/;"	e	enum:ubus_msg_attr
UBUS_ATTR_OBJTYPE	ubus/ubusmsg.h	/^	UBUS_ATTR_OBJTYPE,$/;"	e	enum:ubus_msg_attr
UBUS_ATTR_SIGNATURE	ubus/ubusmsg.h	/^	UBUS_ATTR_SIGNATURE,$/;"	e	enum:ubus_msg_attr
UBUS_ATTR_STATUS	ubus/ubusmsg.h	/^	UBUS_ATTR_STATUS,$/;"	e	enum:ubus_msg_attr
UBUS_ATTR_TARGET	ubus/ubusmsg.h	/^	UBUS_ATTR_TARGET,$/;"	e	enum:ubus_msg_attr
UBUS_ATTR_UNSPEC	ubus/ubusmsg.h	/^	UBUS_ATTR_UNSPEC,$/;"	e	enum:ubus_msg_attr
UBUS_DIR	Makefile	/^UBUS_DIR=$(DIR)\/ubus$/;"	m
UBUS_MAX_MSGLEN	ubus/ubusmsg.h	22;"	d
UBUS_METHOD	ubus/libubus.h	56;"	d
UBUS_MSG_ADD_OBJECT	ubus/ubusmsg.h	/^	UBUS_MSG_ADD_OBJECT,$/;"	e	enum:ubus_msg_type
UBUS_MSG_ADD_WATCH	ubus/ubusmsg.h	/^	UBUS_MSG_ADD_WATCH,$/;"	e	enum:ubus_msg_type
UBUS_MSG_DATA	ubus/ubusmsg.h	/^	UBUS_MSG_DATA,$/;"	e	enum:ubus_msg_type
UBUS_MSG_HELLO	ubus/ubusmsg.h	/^	UBUS_MSG_HELLO,$/;"	e	enum:ubus_msg_type
UBUS_MSG_INVOKE	ubus/ubusmsg.h	/^	UBUS_MSG_INVOKE,$/;"	e	enum:ubus_msg_type
UBUS_MSG_LOOKUP	ubus/ubusmsg.h	/^	UBUS_MSG_LOOKUP,$/;"	e	enum:ubus_msg_type
UBUS_MSG_PING	ubus/ubusmsg.h	/^	UBUS_MSG_PING,$/;"	e	enum:ubus_msg_type
UBUS_MSG_REMOVE_OBJECT	ubus/ubusmsg.h	/^	UBUS_MSG_REMOVE_OBJECT,$/;"	e	enum:ubus_msg_type
UBUS_MSG_REMOVE_WATCH	ubus/ubusmsg.h	/^	UBUS_MSG_REMOVE_WATCH,$/;"	e	enum:ubus_msg_type
UBUS_MSG_STATUS	ubus/ubusmsg.h	/^	UBUS_MSG_STATUS,$/;"	e	enum:ubus_msg_type
UBUS_OBJECT_TYPE	ubus/libubus.h	48;"	d
UBUS_OBJ_HASH_BITS	ubus/ubusd.h	26;"	d
UBUS_SIGNATURE_END	ubus/ubus_common.h	20;"	d
UBUS_SIGNATURE_METHOD	ubus/ubus_common.h	19;"	d
UBUS_STATUS_CONNECTION_FAILED	ubus/ubusmsg.h	/^	UBUS_STATUS_CONNECTION_FAILED,$/;"	e	enum:ubus_msg_status
UBUS_STATUS_INVALID_ARGUMENT	ubus/ubusmsg.h	/^	UBUS_STATUS_INVALID_ARGUMENT,$/;"	e	enum:ubus_msg_status
UBUS_STATUS_INVALID_COMMAND	ubus/ubusmsg.h	/^	UBUS_STATUS_INVALID_COMMAND,$/;"	e	enum:ubus_msg_status
UBUS_STATUS_METHOD_NOT_FOUND	ubus/ubusmsg.h	/^	UBUS_STATUS_METHOD_NOT_FOUND,$/;"	e	enum:ubus_msg_status
UBUS_STATUS_NOT_FOUND	ubus/ubusmsg.h	/^	UBUS_STATUS_NOT_FOUND,$/;"	e	enum:ubus_msg_status
UBUS_STATUS_NOT_SUPPORTED	ubus/ubusmsg.h	/^	UBUS_STATUS_NOT_SUPPORTED,$/;"	e	enum:ubus_msg_status
UBUS_STATUS_NO_DATA	ubus/ubusmsg.h	/^	UBUS_STATUS_NO_DATA,$/;"	e	enum:ubus_msg_status
UBUS_STATUS_OK	ubus/ubusmsg.h	/^	UBUS_STATUS_OK,$/;"	e	enum:ubus_msg_status
UBUS_STATUS_PERMISSION_DENIED	ubus/ubusmsg.h	/^	UBUS_STATUS_PERMISSION_DENIED,$/;"	e	enum:ubus_msg_status
UBUS_STATUS_TIMEOUT	ubus/ubusmsg.h	/^	UBUS_STATUS_TIMEOUT,$/;"	e	enum:ubus_msg_status
UBUS_STATUS_UNKNOWN_ERROR	ubus/ubusmsg.h	/^	UBUS_STATUS_UNKNOWN_ERROR,$/;"	e	enum:ubus_msg_status
UBUS_SYSTEM_OBJECT_EVENT	ubus/ubusmsg.h	24;"	d
UBUS_SYSTEM_OBJECT_MAX	ubus/ubusmsg.h	25;"	d
UBUS_UNIX_SOCKET	ubus/ubus_common.h	17;"	d
UHTTPD	Makefile	/^UHTTPD=uhttpd$/;"	m
UHTTPD	libubox/Makefile	/^UHTTPD=uhttpd$/;"	m
UHTTPD	ubus/Makefile	/^UHTTPD=uhttpd$/;"	m
UH_HTTP_MSG_GET	uhttpd.h	/^	UH_HTTP_MSG_GET,$/;"	e	enum:http_method
UH_HTTP_MSG_HEAD	uhttpd.h	/^	UH_HTTP_MSG_HEAD,$/;"	e	enum:http_method
UH_HTTP_MSG_POST	uhttpd.h	/^	UH_HTTP_MSG_POST,$/;"	e	enum:http_method
UH_HTTP_VER_0_9	uhttpd.h	/^	UH_HTTP_VER_0_9,$/;"	e	enum:http_version
UH_HTTP_VER_1_0	uhttpd.h	/^	UH_HTTP_VER_1_0,$/;"	e	enum:http_version
UH_HTTP_VER_1_1	uhttpd.h	/^	UH_HTTP_VER_1_1,$/;"	e	enum:http_version
UH_LIMIT_CLIENTS	uhttpd.h	87;"	d
UH_LIMIT_HEADERS	uhttpd.h	86;"	d
UH_LIMIT_MSGHEAD	uhttpd.h	85;"	d
UH_LUA_CALLBACK	uhttpd-lua.h	31;"	d
UH_LUA_ERR_PARAM	uhttpd-lua.h	35;"	d
UH_LUA_ERR_TIMEOUT	uhttpd-lua.h	33;"	d
UH_LUA_ERR_TOOBIG	uhttpd-lua.h	34;"	d
UH_UBUS_MAX_POST_SIZE	uhttpd-ubus.h	29;"	d
UH_UBUS_SA_OBJECTS	uhttpd-ubus.c	/^	UH_UBUS_SA_OBJECTS,$/;"	e	enum:__anon7	file:
UH_UBUS_SA_SID	uhttpd-ubus.c	/^	UH_UBUS_SA_SID,$/;"	e	enum:__anon7	file:
UH_UBUS_SG_KEYS	uhttpd-ubus.c	/^	UH_UBUS_SG_KEYS,$/;"	e	enum:__anon6	file:
UH_UBUS_SG_SID	uhttpd-ubus.c	/^	UH_UBUS_SG_SID,$/;"	e	enum:__anon6	file:
UH_UBUS_SI_SID	uhttpd-ubus.c	/^	UH_UBUS_SI_SID,$/;"	e	enum:__anon4	file:
UH_UBUS_SN_TIMEOUT	uhttpd-ubus.c	/^	UH_UBUS_SN_TIMEOUT,$/;"	e	enum:__anon3	file:
UH_UBUS_SS_SID	uhttpd-ubus.c	/^	UH_UBUS_SS_SID,$/;"	e	enum:__anon5	file:
UH_UBUS_SS_VALUES	uhttpd-ubus.c	/^	UH_UBUS_SS_VALUES,$/;"	e	enum:__anon5	file:
ULOOP_BLOCKING	libubox/uloop.h	50;"	d
ULOOP_EDGE_TRIGGER	libubox/uloop.h	49;"	d
ULOOP_MAX_EVENTS	libubox/uloop.c	48;"	d	file:
ULOOP_READ	libubox/uloop.h	47;"	d
ULOOP_WRITE	libubox/uloop.h	48;"	d
USE_EPOLL	libubox/uloop.h	33;"	d
USE_KQUEUE	libubox/uloop.h	30;"	d
USOCK_H_	libubox/usock.h	2;"	d
USOCK_IPV4ONLY	libubox/usock.h	12;"	d
USOCK_IPV6ONLY	libubox/usock.h	11;"	d
USOCK_NOCLOEXEC	libubox/usock.h	8;"	d
USOCK_NONBLOCK	libubox/usock.h	9;"	d
USOCK_NUMERIC	libubox/usock.h	10;"	d
USOCK_SERVER	libubox/usock.h	7;"	d
USOCK_TCP	libubox/usock.h	4;"	d
USOCK_UDP	libubox/usock.h	5;"	d
USOCK_UNIX	libubox/usock.h	13;"	d
VERSION	json/config.h	110;"	d
WATCH_ID	ubus/example/ubus-example.c	/^	WATCH_ID,$/;"	e	enum:__anon10	file:
WATCH_ID	ubus/libubus.c	/^	WATCH_ID,$/;"	e	enum:__anon15	file:
WATCH_NOTIFY	ubus/libubus.c	/^	WATCH_NOTIFY,$/;"	e	enum:__anon15	file:
WIN32_LEAN_AND_MEAN	json/json_util.c	38;"	d	file:
YES	dt_uhttpd_utils.h	6;"	d
_AVL_H	libubox/avl.h	42;"	d
_BLOB_H__	libubox/blob.h	20;"	d
_BSD_SOURCE	uhttpd.h	21;"	d
_DEBUG_H_	json/debug.h	13;"	d
_LINUX_LIST_H_	libubox/list.h	30;"	d
_ULOOP_H__	libubox/uloop.h	21;"	d
_XOPEN_SOURCE	uhttpd.h	22;"	d
__AVL_CMP_H	libubox/avl-cmp.h	17;"	d
__BIG_ENDIAN	libubox/blob.h	57;"	d
__BLOBMSG_H	libubox/blobmsg.h	17;"	d
__BLOBMSG_JSON_H	libubox/blobmsg_json.h	17;"	d
__BLOBMSG_TYPE_LAST	libubox/blobmsg.h	/^	__BLOBMSG_TYPE_LAST,$/;"	e	enum:blobmsg_type
__BYTE_ORDER	libubox/blob.h	54;"	d
__HELLO_MAX	ubus/example/ubus-example.c	/^	__HELLO_MAX$/;"	e	enum:__anon9	file:
__LIBUBOX_VLIST_H	libubox/vlist.h	18;"	d
__LIBUBUS_H	ubus/libubus.h	15;"	d
__LIST_COMPAT_H	libubox/list_compat.h	2;"	d
__LITTLE_ENDIAN	libubox/blob.h	60;"	d
__UBUSD_H	ubus/ubusd.h	15;"	d
__UBUSD_ID_H	ubus/ubusd_id.h	15;"	d
__UBUSD_OBJ_H	ubus/ubusd_obj.h	15;"	d
__UBUSMSG_H	ubus/ubusmsg.h	15;"	d
__UBUS_COMMON_H	ubus/ubus_common.h	15;"	d
__UBUS_MSG_LAST	ubus/ubusmsg.h	/^	__UBUS_MSG_LAST,$/;"	e	enum:ubus_msg_type
__UBUS_STATUS_LAST	ubus/ubusmsg.h	/^	__UBUS_STATUS_LAST$/;"	e	enum:ubus_msg_status
__UH_UBUS_SA_MAX	uhttpd-ubus.c	/^	__UH_UBUS_SA_MAX,$/;"	e	enum:__anon7	file:
__UH_UBUS_SG_MAX	uhttpd-ubus.c	/^	__UH_UBUS_SG_MAX,$/;"	e	enum:__anon6	file:
__UH_UBUS_SI_MAX	uhttpd-ubus.c	/^	__UH_UBUS_SI_MAX,$/;"	e	enum:__anon4	file:
__UH_UBUS_SN_MAX	uhttpd-ubus.c	/^	__UH_UBUS_SN_MAX,$/;"	e	enum:__anon3	file:
__UH_UBUS_SS_MAX	uhttpd-ubus.c	/^	__UH_UBUS_SS_MAX,$/;"	e	enum:__anon5	file:
__USTREAM_H	libubox/ustream.h	20;"	d
__WATCH_MAX	ubus/example/ubus-example.c	/^	__WATCH_MAX$/;"	e	enum:__anon10	file:
__WATCH_MAX	ubus/libubus.c	/^	__WATCH_MAX$/;"	e	enum:__anon15	file:
__avl_find_element	libubox/avl.h	/^__avl_find_element(const struct avl_tree *tree, const void *key, size_t offset, enum avl_find_mode mode) {$/;"	f
__blob_for_each_attr	libubox/blob.h	285;"	d
__init	ubus/ubus_common.h	26;"	d
__packed	libubox/blob.h	/^} __packed;$/;"	v	typeref:struct:blob_attr
__packed	libubox/blob.h	101;"	d
__packed	libubox/blobmsg.h	/^} __packed;$/;"	v	typeref:struct:blobmsg_hdr
__packetdata	ubus/ubusmsg.h	/^} __packetdata;$/;"	v	typeref:struct:ubus_msghdr
__packetdata	ubus/ubusmsg.h	20;"	d
__ubus_strerror	ubus/libubus.c	/^const char *__ubus_strerror[__UBUS_STATUS_LAST] = {$/;"	v
__ubus_watch_request	ubus/libubus.c	/^__ubus_watch_request(struct ubus_context *ctx, struct ubus_object *obj, uint32_t id, const char *method, int type)$/;"	f	file:
__uh_raw_recv	uhttpd-utils.c	/^static int __uh_raw_recv(struct client *cl, char *buf, int len, int sec,$/;"	f	file:
__uh_raw_send	uhttpd-utils.c	/^static int __uh_raw_send(struct client *cl, const char *buf, int len, int sec,$/;"	f	file:
__ustream_fd_poll	libubox/ustream-fd.c	/^static bool __ustream_fd_poll(struct ustream_fd *sf, unsigned int events)$/;"	f	file:
__ustream_set_read_blocked	libubox/ustream.c	/^static void __ustream_set_read_blocked(struct ustream *s, unsigned char val)$/;"	f	file:
_arraylist_h_	json/arraylist.h	13;"	d
_bits_h_	json/bits.h	13;"	d
_debug	json/debug.c	/^static int _debug = 0;$/;"	v	file:
_delete	json/json_object_private.h	/^  json_object_delete_fn *_delete;$/;"	m	struct:json_object
_gdthttp	dt_uhttpd_select.c	/^static struct dt_uhttpd _gdthttp = {$/;"	v	typeref:struct:dt_uhttpd	file:
_json_h_	json/json.h	13;"	d
_json_object_h_	json/json_object.h	13;"	d
_json_object_private_h_	json/json_object_private.h	13;"	d
_json_tokener_h_	json/json_tokener.h	13;"	d
_json_util_h_	json/json_util.h	13;"	d
_linkhash_h_	json/linkhash.h	13;"	d
_list_add	libubox/list.h	/^_list_add(struct list_head *_new, struct list_head *prev,$/;"	f
_list_del	libubox/list.h	/^_list_del(struct list_head *entry)$/;"	f
_list_splice	libubox/list.h	/^_list_splice(const struct list_head *list, struct list_head *prev,$/;"	f
_log_level	uhttpd.c	/^static int _log_level = LOG_TRACE;$/;"	v	file:
_pb	json/json_object_private.h	/^  struct printbuf *_pb;$/;"	m	struct:json_object	typeref:struct:json_object::printbuf
_printbuf_h_	json/printbuf.h	17;"	d
_ref_count	json/json_object_private.h	/^  int _ref_count;$/;"	m	struct:json_object
_syslog	json/debug.c	/^static int _syslog = 0;$/;"	v	file:
_to_json_string	json/json_object_private.h	/^  json_object_to_json_string_fn *_to_json_string;$/;"	m	struct:json_object
_uh_log	uhttpd.c	/^void _uh_log(unsigned int level, $/;"	f
acl_policy	uhttpd-ubus.c	/^static const struct blobmsg_policy acl_policy[__UH_UBUS_SA_MAX] = {$/;"	v	typeref:struct:blobmsg_policy	file:
acls	uhttpd-ubus.h	/^	struct avl_tree acls;$/;"	m	struct:uh_ubus_session	typeref:struct:uh_ubus_session::avl_tree
add_json_array	libubox/jshn/jshn.c	/^static int add_json_array(struct array_list *a)$/;"	f	file:
add_json_element	libubox/jshn/jshn.c	/^static int add_json_element(const char *key, json_object *obj)$/;"	f	file:
add_json_object	libubox/jshn/jshn.c	/^static int add_json_object(json_object *obj)$/;"	f	file:
add_json_string	libubox/jshn/jshn.c	/^static void add_json_string(const char *str)$/;"	f	file:
add_separator	libubox/blobmsg_json.c	/^static void add_separator(struct strbuf *s)$/;"	f	file:
addr	uhttpd.h	/^	struct sockaddr_in6 addr;$/;"	m	struct:listener	typeref:struct:listener::sockaddr_in6
alloc	libubox/ustream.h	/^	int (*alloc)(struct ustream *s, struct ustream_buf_list *l);$/;"	m	struct:ustream_buf_list
allow_dups	libubox/avl.h	/^  bool allow_dups;$/;"	m	struct:avl_tree
array	json/arraylist.h	/^  void **array;$/;"	m	struct:array_list
array_list	json/arraylist.h	/^struct array_list$/;"	s
array_list	json/json_object.h	/^typedef struct array_list array_list;$/;"	t	typeref:struct:array_list
array_list_add	json/arraylist.c	/^array_list_add(struct array_list *arr, void *data)$/;"	f
array_list_expand_internal	json/arraylist.c	/^static int array_list_expand_internal(struct array_list *arr, int max)$/;"	f	file:
array_list_free	json/arraylist.c	/^array_list_free(struct array_list *arr)$/;"	f
array_list_free_fn	json/arraylist.h	/^typedef void (array_list_free_fn) (void *data);$/;"	t
array_list_get_idx	json/arraylist.c	/^array_list_get_idx(struct array_list *arr, int i)$/;"	f
array_list_length	json/arraylist.c	/^array_list_length(struct array_list *arr)$/;"	f
array_list_new	json/arraylist.c	/^array_list_new(array_list_free_fn *free_fn)$/;"	f
array_list_put_idx	json/arraylist.c	/^array_list_put_idx(struct array_list *arr, int idx, void *data)$/;"	f
array_size	uhttpd-utils.h	43;"	d
attr	uhttpd-ubus.h	/^	struct blob_attr attr[];$/;"	m	struct:uh_ubus_session_data	typeref:struct:uh_ubus_session_data::blob_attr
attr_to_offset	libubox/blob.c	/^attr_to_offset(struct blob_buf *buf, struct blob_attr *attr)$/;"	f	file:
attr_to_offset	libubox/blobmsg.c	/^attr_to_offset(struct blob_buf *buf, struct blob_attr *attr)$/;"	f	file:
attrbuf	ubus/libubus.c	/^static struct blob_attr *attrbuf[UBUS_ATTR_MAX];$/;"	v	typeref:struct:blob_attr	file:
attrbuf	ubus/ubusd_proto.c	/^static struct blob_attr *attrbuf[UBUS_ATTR_MAX];$/;"	v	typeref:struct:blob_attr	file:
auth_realm	uhttpd.h	/^struct auth_realm {$/;"	s
avl	libubox/vlist.h	/^	struct avl_node avl;$/;"	m	struct:vlist_node	typeref:struct:vlist_node::avl_node
avl	libubox/vlist.h	/^	struct avl_tree avl;$/;"	m	struct:vlist_tree	typeref:struct:vlist_tree::avl_tree
avl	ubus/libubus.h	/^	struct avl_node avl;$/;"	m	struct:ubus_object	typeref:struct:ubus_object::avl_node
avl	ubus/ubusd_event.c	/^	struct avl_node avl;$/;"	m	struct:event_source	typeref:struct:event_source::avl_node	file:
avl	ubus/ubusd_id.h	/^	struct avl_node avl;$/;"	m	struct:ubus_id	typeref:struct:ubus_id::avl_node
avl	uhttpd-ubus.h	/^	struct avl_node avl;$/;"	m	struct:uh_ubus_session	typeref:struct:uh_ubus_session::avl_node
avl	uhttpd-ubus.h	/^	struct avl_node avl;$/;"	m	struct:uh_ubus_session_acl	typeref:struct:uh_ubus_session_acl::avl_node
avl	uhttpd-ubus.h	/^	struct avl_node avl;$/;"	m	struct:uh_ubus_session_data	typeref:struct:uh_ubus_session_data::avl_node
avl_delete	libubox/avl.c	/^avl_delete(struct avl_tree *tree, struct avl_node *node)$/;"	f
avl_delete_worker	libubox/avl.c	/^avl_delete_worker(struct avl_tree *tree, struct avl_node *node)$/;"	f	file:
avl_find	libubox/avl.c	/^avl_find(const struct avl_tree *tree, const void *key)$/;"	f
avl_find_element	libubox/avl.h	229;"	d
avl_find_ge_element	libubox/avl.h	255;"	d
avl_find_greaterequal	libubox/avl.c	/^avl_find_greaterequal(const struct avl_tree *tree, const void *key) {$/;"	f
avl_find_le_element	libubox/avl.h	242;"	d
avl_find_lessequal	libubox/avl.c	/^avl_find_lessequal(const struct avl_tree *tree, const void *key) {$/;"	f
avl_find_mode	libubox/avl.h	/^enum avl_find_mode {$/;"	g
avl_find_rec	libubox/avl.c	/^avl_find_rec(struct avl_node *node, const void *key, avl_tree_comp comp, void *cmp_ptr, int *cmp_result)$/;"	f	file:
avl_first_element	libubox/avl.h	269;"	d
avl_for_each_element	libubox/avl.h	355;"	d
avl_for_each_element_reverse	libubox/avl.h	371;"	d
avl_for_each_element_reverse_safe	libubox/avl.h	511;"	d
avl_for_each_element_safe	libubox/avl.h	492;"	d
avl_for_element_range	libubox/avl.h	322;"	d
avl_for_element_range_reverse	libubox/avl.h	339;"	d
avl_for_element_range_reverse_safe	libubox/avl.h	473;"	d
avl_for_element_range_safe	libubox/avl.h	455;"	d
avl_for_element_to_last	libubox/avl.h	389;"	d
avl_for_element_to_last_reverse	libubox/avl.h	406;"	d
avl_for_first_to_element	libubox/avl.h	422;"	d
avl_for_first_to_element_reverse	libubox/avl.h	439;"	d
avl_init	libubox/avl.c	/^avl_init(struct avl_tree *tree, avl_tree_comp comp, bool allow_dups, void *ptr)$/;"	f
avl_insert	libubox/avl.c	/^avl_insert(struct avl_tree *tree, struct avl_node *new)$/;"	f
avl_insert_after	libubox/avl.c	/^avl_insert_after(struct avl_tree *tree, struct avl_node *pos_node, struct avl_node *node)$/;"	f	file:
avl_insert_before	libubox/avl.c	/^avl_insert_before(struct avl_tree *tree, struct avl_node *pos_node, struct avl_node *node)$/;"	f	file:
avl_is_empty	libubox/avl.h	/^avl_is_empty(struct avl_tree *tree) {$/;"	f
avl_is_first	libubox/avl.h	/^avl_is_first(struct avl_tree *tree, struct avl_node *node) {$/;"	f
avl_is_last	libubox/avl.h	/^avl_is_last(struct avl_tree *tree, struct avl_node *node) {$/;"	f
avl_last_element	libubox/avl.h	281;"	d
avl_local_min	libubox/avl.c	/^avl_local_min(struct avl_node *node)$/;"	f	file:
avl_max	libubox/avl.c	/^static inline int avl_max(int x, int y) {$/;"	f	file:
avl_min	libubox/avl.c	/^static inline int avl_min(int x, int y) {$/;"	f	file:
avl_next_element	libubox/avl.h	294;"	d
avl_node	libubox/avl.h	/^struct avl_node {$/;"	s
avl_post_delete	libubox/avl.c	/^avl_post_delete(struct avl_tree *tree, struct avl_node *node)$/;"	f	file:
avl_prev_element	libubox/avl.h	307;"	d
avl_remove	libubox/avl.c	/^avl_remove(struct avl_tree *tree, struct avl_node *node)$/;"	f	file:
avl_remove_all_elements	libubox/avl.h	534;"	d
avl_rotate_left	libubox/avl.c	/^avl_rotate_left(struct avl_tree *tree, struct avl_node *node)$/;"	f	file:
avl_rotate_right	libubox/avl.c	/^avl_rotate_right(struct avl_tree *tree, struct avl_node *node)$/;"	f	file:
avl_strcmp	libubox/avl-cmp.c	/^avl_strcmp(const void *k1, const void *k2, void *ptr)$/;"	f
avl_tree	libubox/avl.h	/^struct avl_tree {$/;"	s
avl_tree_comp	libubox/avl.h	/^typedef int (*avl_tree_comp) (const void *k1, const void *k2, void *ptr);$/;"	t
b	ubus/example/cli.c	/^static struct blob_buf b;$/;"	v	typeref:struct:blob_buf	file:
b	ubus/example/ubus-example.c	/^struct blob_buf b;$/;"	v	typeref:struct:blob_buf
b	ubus/libubus.c	/^static struct blob_buf b;$/;"	v	typeref:struct:blob_buf	file:
b	ubus/ubusd_proto.c	/^struct blob_buf b;$/;"	v	typeref:struct:blob_buf
balance	libubox/avl.h	/^  signed char balance;$/;"	m	struct:avl_node
be16_to_cpu	libubox/blob.h	69;"	d
be16_to_cpu	libubox/blob.h	79;"	d
be32_to_cpu	libubox/blob.h	68;"	d
be32_to_cpu	libubox/blob.h	78;"	d
be64_to_cpu	libubox/blob.h	67;"	d
be64_to_cpu	libubox/blob.h	77;"	d
blob_add	libubox/blob.c	/^blob_add(struct blob_buf *buf, struct blob_attr *pos, int id, int payload)$/;"	f	file:
blob_attr	libubox/blob.h	/^struct blob_attr {$/;"	s
blob_attr_equal	libubox/blob.c	/^blob_attr_equal(const struct blob_attr *a1, const struct blob_attr *a2)$/;"	f
blob_attr_info	libubox/blob.h	/^struct blob_attr_info {$/;"	s
blob_buf	libubox/blob.h	/^struct blob_buf {$/;"	s
blob_buf_free	libubox/blob.c	/^blob_buf_free(struct blob_buf *buf)$/;"	f
blob_buf_init	libubox/blob.c	/^blob_buf_init(struct blob_buf *buf, int id)$/;"	f
blob_buffer_grow	libubox/blob.c	/^blob_buffer_grow(struct blob_buf *buf, int minlen)$/;"	f	file:
blob_check_type	libubox/blob.c	/^blob_check_type(const void *ptr, int len, int type)$/;"	f
blob_data	libubox/blob.h	/^blob_data(const struct blob_attr *attr)$/;"	f
blob_fill_pad	libubox/blob.c	/^blob_fill_pad(struct blob_attr *attr)$/;"	f
blob_for_each_attr	libubox/blob.h	292;"	d
blob_get_int16	libubox/blob.h	/^blob_get_int16(const struct blob_attr *attr)$/;"	f
blob_get_int32	libubox/blob.h	/^blob_get_int32(const struct blob_attr *attr)$/;"	f
blob_get_int64	libubox/blob.h	/^blob_get_int64(const struct blob_attr *attr)$/;"	f
blob_get_int8	libubox/blob.h	/^blob_get_int8(const struct blob_attr *attr)$/;"	f
blob_get_string	libubox/blob.h	/^blob_get_string(const struct blob_attr *attr)$/;"	f
blob_get_u16	libubox/blob.h	/^blob_get_u16(const struct blob_attr *attr)$/;"	f
blob_get_u32	libubox/blob.h	/^blob_get_u32(const struct blob_attr *attr)$/;"	f
blob_get_u64	libubox/blob.h	/^blob_get_u64(const struct blob_attr *attr)$/;"	f
blob_get_u8	libubox/blob.h	/^blob_get_u8(const struct blob_attr *attr)$/;"	f
blob_id	libubox/blob.h	/^blob_id(const struct blob_attr *attr)$/;"	f
blob_init	libubox/blob.c	/^blob_init(struct blob_attr *attr, int id, unsigned int len)$/;"	f	file:
blob_len	libubox/blob.h	/^blob_len(const struct blob_attr *attr)$/;"	f
blob_memdup	libubox/blob.c	/^blob_memdup(struct blob_attr *attr)$/;"	f
blob_nest_end	libubox/blob.c	/^blob_nest_end(struct blob_buf *buf, void *cookie)$/;"	f
blob_nest_start	libubox/blob.c	/^blob_nest_start(struct blob_buf *buf, int id)$/;"	f
blob_new	libubox/blob.c	/^blob_new(struct blob_buf *buf, int id, int payload)$/;"	f
blob_next	libubox/blob.h	/^blob_next(const struct blob_attr *attr)$/;"	f
blob_pad_len	libubox/blob.h	/^blob_pad_len(const struct blob_attr *attr)$/;"	f
blob_parse	libubox/blob.c	/^blob_parse(struct blob_attr *attr, struct blob_attr **data, const struct blob_attr_info *info, int max)$/;"	f
blob_put	libubox/blob.c	/^blob_put(struct blob_buf *buf, int id, const void *ptr, int len)$/;"	f
blob_put_int16	libubox/blob.h	281;"	d
blob_put_int32	libubox/blob.h	282;"	d
blob_put_int64	libubox/blob.h	283;"	d
blob_put_int8	libubox/blob.h	280;"	d
blob_put_string	libubox/blob.h	/^blob_put_string(struct blob_buf *buf, int id, const char *str)$/;"	f
blob_put_u16	libubox/blob.h	/^blob_put_u16(struct blob_buf *buf, int id, uint16_t val)$/;"	f
blob_put_u32	libubox/blob.h	/^blob_put_u32(struct blob_buf *buf, int id, uint32_t val)$/;"	f
blob_put_u64	libubox/blob.h	/^blob_put_u64(struct blob_buf *buf, int id, uint64_t val)$/;"	f
blob_put_u8	libubox/blob.h	/^blob_put_u8(struct blob_buf *buf, int id, uint8_t val)$/;"	f
blob_raw_len	libubox/blob.h	/^blob_raw_len(const struct blob_attr *attr)$/;"	f
blob_set_raw_len	libubox/blob.c	/^blob_set_raw_len(struct blob_attr *attr, unsigned int len)$/;"	f
blob_type	libubox/blobmsg.c	/^static const int blob_type[__BLOBMSG_TYPE_LAST] = {$/;"	v	file:
blob_type_minlen	libubox/blob.c	/^static const int blob_type_minlen[BLOB_ATTR_LAST] = {$/;"	v	file:
blobmsg_add_array	libubox/blobmsg_json.c	/^static bool blobmsg_add_array(struct blob_buf *b, struct array_list *a)$/;"	f	file:
blobmsg_add_blob	libubox/blobmsg.h	/^blobmsg_add_blob(struct blob_buf *buf, struct blob_attr *attr)$/;"	f
blobmsg_add_field	libubox/blobmsg.c	/^blobmsg_add_field(struct blob_buf *buf, int type, const char *name,$/;"	f
blobmsg_add_json_element	libubox/blobmsg_json.c	/^bool blobmsg_add_json_element(struct blob_buf *b, const char *name, json_object *obj)$/;"	f
blobmsg_add_json_from_string	libubox/blobmsg_json.c	/^bool blobmsg_add_json_from_string(struct blob_buf *b, const char *str)$/;"	f
blobmsg_add_object	libubox/blobmsg_json.c	/^static bool blobmsg_add_object(struct blob_buf *b, json_object *obj)$/;"	f	file:
blobmsg_add_string	libubox/blobmsg.h	/^blobmsg_add_string(struct blob_buf *buf, const char *name, const char *string)$/;"	f
blobmsg_add_string_buffer	libubox/blobmsg.c	/^blobmsg_add_string_buffer(struct blob_buf *buf)$/;"	f
blobmsg_add_u16	libubox/blobmsg.h	/^blobmsg_add_u16(struct blob_buf *buf, const char *name, uint16_t val)$/;"	f
blobmsg_add_u32	libubox/blobmsg.h	/^blobmsg_add_u32(struct blob_buf *buf, const char *name, uint32_t val)$/;"	f
blobmsg_add_u64	libubox/blobmsg.h	/^blobmsg_add_u64(struct blob_buf *buf, const char *name, uint64_t val)$/;"	f
blobmsg_add_u8	libubox/blobmsg.h	/^blobmsg_add_u8(struct blob_buf *buf, const char *name, uint8_t val)$/;"	f
blobmsg_alloc_string_buffer	libubox/blobmsg.c	/^blobmsg_alloc_string_buffer(struct blob_buf *buf, const char *name, int maxlen)$/;"	f
blobmsg_buf_init	libubox/blobmsg.h	/^static inline int blobmsg_buf_init(struct blob_buf *buf)$/;"	f
blobmsg_check_attr	libubox/blobmsg.c	/^bool blobmsg_check_attr(const struct blob_attr *attr, bool name)$/;"	f
blobmsg_check_attr_list	libubox/blobmsg.c	/^bool blobmsg_check_attr_list(const struct blob_attr *attr, int type)$/;"	f
blobmsg_close_array	libubox/blobmsg.h	/^blobmsg_close_array(struct blob_buf *buf, void *cookie)$/;"	f
blobmsg_close_table	libubox/blobmsg.h	/^blobmsg_close_table(struct blob_buf *buf, void *cookie)$/;"	f
blobmsg_data	libubox/blobmsg.h	/^static inline void *blobmsg_data(const struct blob_attr *attr)$/;"	f
blobmsg_data_len	libubox/blobmsg.h	/^static inline int blobmsg_data_len(const struct blob_attr *attr)$/;"	f
blobmsg_for_each_attr	libubox/blobmsg.h	189;"	d
blobmsg_format_element	libubox/blobmsg_json.c	/^static void blobmsg_format_element(struct strbuf *s, struct blob_attr *attr, bool array, bool head)$/;"	f	file:
blobmsg_format_json	libubox/blobmsg_json.h	/^static inline char *blobmsg_format_json(struct blob_attr *attr, bool list)$/;"	f
blobmsg_format_json_indent	libubox/blobmsg_json.h	/^static inline char *blobmsg_format_json_indent(struct blob_attr *attr, bool list, int indent)$/;"	f
blobmsg_format_json_list	libubox/blobmsg_json.c	/^static void blobmsg_format_json_list(struct strbuf *s, struct blob_attr *attr, int len, bool array)$/;"	f	file:
blobmsg_format_json_with_cb	libubox/blobmsg_json.c	/^char *blobmsg_format_json_with_cb(struct blob_attr *attr, bool list, blobmsg_json_format_t cb, void *priv, int indent)$/;"	f
blobmsg_format_string	libubox/blobmsg_json.c	/^static void blobmsg_format_string(struct strbuf *s, const char *str)$/;"	f	file:
blobmsg_get_bool	libubox/blobmsg.h	/^static inline bool blobmsg_get_bool(struct blob_attr *attr)$/;"	f
blobmsg_get_u16	libubox/blobmsg.h	/^static inline uint16_t blobmsg_get_u16(struct blob_attr *attr)$/;"	f
blobmsg_get_u32	libubox/blobmsg.h	/^static inline uint32_t blobmsg_get_u32(struct blob_attr *attr)$/;"	f
blobmsg_get_u64	libubox/blobmsg.h	/^static inline uint64_t blobmsg_get_u64(struct blob_attr *attr)$/;"	f
blobmsg_get_u8	libubox/blobmsg.h	/^static inline uint8_t blobmsg_get_u8(struct blob_attr *attr)$/;"	f
blobmsg_hdr	libubox/blobmsg.h	/^struct blobmsg_hdr {$/;"	s
blobmsg_hdrlen	libubox/blobmsg.h	/^static inline int blobmsg_hdrlen(int namelen)$/;"	f
blobmsg_json_format_t	libubox/blobmsg_json.h	/^typedef const char *(*blobmsg_json_format_t)(void *priv, struct blob_attr *attr);$/;"	t
blobmsg_name	libubox/blobmsg.h	/^static inline const char *blobmsg_name(const struct blob_attr *attr)$/;"	f
blobmsg_namelen	libubox/blobmsg.c	/^blobmsg_namelen(const struct blobmsg_hdr *hdr)$/;"	f	file:
blobmsg_new	libubox/blobmsg.c	/^blobmsg_new(struct blob_buf *buf, int type, const char *name, int payload_len, void **data)$/;"	f	file:
blobmsg_open_array	libubox/blobmsg.h	/^blobmsg_open_array(struct blob_buf *buf, const char *name)$/;"	f
blobmsg_open_nested	libubox/blobmsg.c	/^blobmsg_open_nested(struct blob_buf *buf, const char *name, bool array)$/;"	f
blobmsg_open_table	libubox/blobmsg.h	/^blobmsg_open_table(struct blob_buf *buf, const char *name)$/;"	f
blobmsg_parse	libubox/blobmsg.c	/^int blobmsg_parse(const struct blobmsg_policy *policy, int policy_len,$/;"	f
blobmsg_policy	libubox/blobmsg.h	/^struct blobmsg_policy {$/;"	s
blobmsg_puts	libubox/blobmsg_json.c	/^static bool blobmsg_puts(struct strbuf *s, const char *c, int len)$/;"	f	file:
blobmsg_type	libubox/blobmsg.h	/^enum blobmsg_type {$/;"	g
blobmsg_type	libubox/blobmsg.h	/^static inline int blobmsg_type(const struct blob_attr *attr)$/;"	f
blocked	ubus/libubus.h	/^	bool blocked;$/;"	m	struct:ubus_request
boolean	json/json_object.h	/^typedef int boolean;$/;"	t
bpos	json/printbuf.h	/^  int bpos;$/;"	m	struct:printbuf
bswap_16	libubox/blob.h	38;"	d
bswap_16	libubox/blob.h	43;"	d
bswap_16	libubox/blob.h	48;"	d
bswap_32	libubox/blob.h	39;"	d
bswap_32	libubox/blob.h	44;"	d
bswap_32	libubox/blob.h	49;"	d
bswap_64	libubox/blob.h	40;"	d
bswap_64	libubox/blob.h	45;"	d
bswap_64	libubox/blob.h	50;"	d
buf	json/printbuf.h	/^  char *buf;$/;"	m	struct:printbuf
buf	libubox/blob.h	/^	void *buf;$/;"	m	struct:blob_buf
buf	libubox/blobmsg_json.c	/^	char *buf;$/;"	m	struct:strbuf	file:
buf	ubus/lua/ubus.c	/^	struct blob_buf buf;$/;"	m	struct:ubus_lua_connection	typeref:struct:ubus_lua_connection::blob_buf	file:
buf	uhttpd-cgi.h	/^		char buf[UH_LIMIT_MSGHEAD];$/;"	m	struct:uh_cgi_state::__anon1
buf	uhttpd-ubus.h	/^	struct blob_buf buf;$/;"	m	struct:uh_ubus_state	typeref:struct:uh_ubus_state::blob_buf
buf	uhttpd.h	/^		char buf[UH_LIMIT_MSGHEAD + 16];$/;"	m	struct:client::__anon2
buffer_len	libubox/ustream.h	/^	int buffer_len;$/;"	m	struct:ustream_buf_list
buffers	libubox/ustream.h	/^	int buffers;$/;"	m	struct:ustream_buf_list
buflen	libubox/blob.h	/^	int buflen;$/;"	m	struct:blob_buf
c_array	json/json_object_private.h	/^    struct array_list *c_array;$/;"	m	union:json_object::data	typeref:struct:json_object::data::array_list
c_boolean	json/json_object_private.h	/^    boolean c_boolean;$/;"	m	union:json_object::data
c_double	json/json_object_private.h	/^    double c_double;$/;"	m	union:json_object::data
c_int	json/json_object_private.h	/^    int c_int;$/;"	m	union:json_object::data
c_object	json/json_object_private.h	/^    struct lh_table *c_object;$/;"	m	union:json_object::data	typeref:struct:json_object::data::lh_table
c_string	json/json_object_private.h	/^    char *c_string;$/;"	m	union:json_object::data
cancelled	ubus/libubus.h	/^	bool cancelled;$/;"	m	struct:ubus_request
canonpath	uhttpd-utils.c	/^static char * canonpath(const char *path, char *path_resolved)$/;"	f	file:
cb	libubox/uloop.h	/^	uloop_fd_handler cb;$/;"	m	struct:uloop_fd
cb	libubox/uloop.h	/^	uloop_process_handler cb;$/;"	m	struct:uloop_process
cb	libubox/uloop.h	/^	uloop_timeout_handler cb;$/;"	m	struct:uloop_timeout
cb	ubus/example/cli.c	/^	int (*cb)(struct ubus_context *ctx, int argc, char **argv);$/;"	m	struct:__anon11	file:
cb	ubus/libubus.c	/^	ubus_lookup_handler_t cb;$/;"	m	struct:ubus_lookup_request	file:
cb	ubus/libubus.h	/^	ubus_event_handler_t cb;$/;"	m	struct:ubus_event_handler
cb	ubus/libubus.h	/^	ubus_watch_handler_t cb;$/;"	m	struct:ubus_watch_object
cb	uhttpd.h	/^	bool (*cb)(struct client *);$/;"	m	struct:client
cert	uhttpd.h	/^	char *cert;$/;"	m	struct:config
cgi_prefix	uhttpd.h	/^	char *cgi_prefix;$/;"	m	struct:config
char_offset	json/json_tokener.h	/^  int depth, is_double, st_pos, char_offset;$/;"	m	struct:json_tokener
cl	dt_uhttpd_select.c	/^	struct  client *cl;$/;"	m	struct:__anon8	typeref:struct:__anon8::client	file:
clearenv	uhttpd-utils.h	/^static inline void clearenv(void)$/;"	f
client	libubox/examples/ustream-example.c	/^struct client {$/;"	s	file:
client	ubus/ubusd_obj.h	/^	struct ubus_client *client;$/;"	m	struct:ubus_object	typeref:struct:ubus_object::ubus_client
client	uhttpd.h	/^struct client {$/;"	s
client_cb	ubus/example/ubusd.c	/^static void client_cb(struct uloop_fd *sock, unsigned int events)$/;"	f	file:
client_close	libubox/examples/ustream-example.c	/^static void client_close(struct ustream *s)$/;"	f	file:
client_light	uhttpd.h	/^struct client_light {$/;"	s
client_main	ubus/example/ubus-example.c	/^static void client_main(void)$/;"	f	file:
client_notify_state	libubox/examples/ustream-example.c	/^static void client_notify_state(struct ustream *s)$/;"	f	file:
client_notify_write	libubox/examples/ustream-example.c	/^static void client_notify_write(struct ustream *s, int bytes)$/;"	f	file:
client_read_cb	libubox/examples/ustream-example.c	/^static void client_read_cb(struct ustream *s, int bytes)$/;"	f	file:
clients	ubus/ubusd_proto.c	/^static struct avl_tree clients;$/;"	v	typeref:struct:avl_tree	file:
clock_gettime	uhttpd-ubus.c	/^static void clock_gettime(int type, struct timespec *tv)$/;"	f	file:
cmp_ptr	libubox/avl.h	/^  void *cmp_ptr;$/;"	m	struct:avl_tree
collisions	json/linkhash.h	/^	int collisions;$/;"	m	struct:lh_table
commands	ubus/example/cli.c	/^} commands[] = {$/;"	v	typeref:struct:__anon11
comp	libubox/avl.h	/^  avl_tree_comp comp;$/;"	m	struct:avl_tree
complete_cb	ubus/libubus.h	/^	ubus_complete_handler_t complete_cb;$/;"	m	struct:ubus_request
conf	uhttpd.h	/^	struct config *conf;$/;"	m	struct:listener	typeref:struct:listener::config
config	uhttpd.h	/^struct config {$/;"	s
connection_lost	ubus/libubus.h	/^	void (*connection_lost)(struct ubus_context *ctx);$/;"	m	struct:ubus_context
container_of	libubox/list.h	38;"	d
content_left	uhttpd.h	/^	off_t content_left;$/;"	m	struct:client
content_length	uhttpd-cgi.h	/^	int content_length;$/;"	m	struct:uh_cgi_state
content_length	uhttpd-lua.h	/^	int content_length;$/;"	m	struct:uh_lua_state
count	json/linkhash.h	/^	int count;$/;"	m	struct:lh_table
count	libubox/avl.h	/^  unsigned int count;$/;"	m	struct:avl_tree
cpu_to_be16	libubox/blob.h	65;"	d
cpu_to_be16	libubox/blob.h	75;"	d
cpu_to_be32	libubox/blob.h	64;"	d
cpu_to_be32	libubox/blob.h	74;"	d
cpu_to_be64	libubox/blob.h	63;"	d
cpu_to_be64	libubox/blob.h	73;"	d
ctr	libubox/examples/ustream-example.c	/^	int ctr;$/;"	m	struct:client	file:
ctx	ubus/example/ubus-example.c	/^static struct ubus_context *ctx;$/;"	v	typeref:struct:ubus_context	file:
ctx	ubus/libubus.h	/^	struct ubus_context *ctx;$/;"	m	struct:ubus_request	typeref:struct:ubus_request::ubus_context
ctx	ubus/lua/ubus.c	/^	struct ubus_context *ctx;$/;"	m	struct:ubus_lua_connection	typeref:struct:ubus_lua_connection::ubus_context	file:
ctx	uhttpd-ubus.h	/^	struct ubus_context *ctx;$/;"	m	struct:uh_ubus_state	typeref:struct:uh_ubus_state::ubus_context
cur_fd	libubox/uloop.c	/^static int cur_fd, cur_nfds;$/;"	v	file:
cur_nfds	libubox/uloop.c	/^static int cur_fd, cur_nfds;$/;"	v	file:
current	json/json_tokener.c	140;"	d	file:
current	json/json_tokener.h	/^  struct json_object *current;$/;"	m	struct:json_tokener_srec	typeref:struct:json_tokener_srec::json_object
custom_format	libubox/blobmsg_json.c	/^	blobmsg_json_format_t custom_format;$/;"	m	struct:strbuf	file:
data	json/json_object_private.h	/^  union data {$/;"	u	struct:json_object
data	libubox/blob.h	/^	char data[];$/;"	m	struct:blob_attr
data	libubox/ustream.h	/^	char *data;$/;"	m	struct:ustream_buf
data	ubus/libubus.c	/^	struct blob_attr data[];$/;"	m	struct:ubus_pending_data	typeref:struct:ubus_pending_data::blob_attr	file:
data	ubus/libubus.h	/^		char data[UBUS_MAX_MSGLEN];$/;"	m	struct:ubus_context::__anon16
data	ubus/ubusd.h	/^		struct blob_attr data;$/;"	m	struct:ubus_client::__anon12	typeref:struct:ubus_client::__anon12::blob_attr
data	ubus/ubusd.h	/^	struct blob_attr *data;$/;"	m	struct:ubus_msg_buf	typeref:struct:ubus_msg_buf::blob_attr
data	ubus/ubusd_obj.h	/^	struct blob_attr data[];$/;"	m	struct:ubus_method	typeref:struct:ubus_method::blob_attr
data	ubus/ubusmsg.h	/^	struct blob_attr data[];$/;"	m	struct:ubus_msghdr	typeref:struct:ubus_msghdr::blob_attr
data	uhttpd-ubus.h	/^	struct avl_tree data;$/;"	m	struct:uh_ubus_session	typeref:struct:uh_ubus_session::avl_tree
data_bytes	libubox/ustream.h	/^	int data_bytes;$/;"	m	struct:ustream_buf_list
data_cb	ubus/libubus.h	/^	ubus_data_handler_t data_cb;$/;"	m	struct:ubus_request
data_sent	uhttpd-lua.h	/^	bool data_sent;$/;"	m	struct:uh_lua_state
data_tail	libubox/ustream.h	/^	struct ustream_buf *data_tail;$/;"	m	struct:ustream_buf_list	typeref:struct:ustream_buf_list::ustream_buf
dbg	uhttpd-tls.c	26;"	d	file:
deletes	json/linkhash.h	/^	int deletes;$/;"	m	struct:lh_table
depth	json/json_tokener.h	/^  int depth, is_double, st_pos, char_offset;$/;"	m	struct:json_tokener
dispatched	uhttpd.h	/^	bool dispatched;$/;"	m	struct:client
do_sigchld	libubox/uloop.c	/^static bool do_sigchld = false;$/;"	v	file:
docroot	uhttpd.h	/^	char docroot[PATH_MAX];$/;"	m	struct:config
dt_build_select_list	dt_uhttpd_select.c	/^static int dt_build_select_list(struct dt_uhttpd *http, fd_set *wr)$/;"	f	file:
dt_client	dt_uhttpd_select.c	/^} dt_client;$/;"	t	typeref:struct:__anon8	file:
dt_destroy_clent	dt_uhttpd_select.c	/^static void dt_destroy_clent(dt_client *client)$/;"	f	file:
dt_evt_cb	dt_uhttpd_evt.c	/^dt_evt_cb(struct uloop_fd *u, unsigned int events)$/;"	f	file:
dt_evt_do_read	dt_uhttpd_evt.c	/^static int dt_evt_do_read(struct client *cl)$/;"	f	file:
dt_fillbuffer	dt_uhttpd_utils.c	/^int dt_fillbuffer(struct client *cl)$/;"	f
dt_fillbuffer_chunk	dt_uhttpd_utils.c	/^static int dt_fillbuffer_chunk(struct client *cl, const char *data, int len)$/;"	f	file:
dt_getfilecontent	dt_uhttpd_utils.c	/^dt_getfilecontent(struct client *cl, char *buf, int len)$/;"	f	file:
dt_handle_send	dt_uhttpd_select.c	/^dt_handle_send(struct dt_uhttpd *http, fd_set *wr)$/;"	f	file:
dt_http_send	dt_uhttpd_utils.c	/^int dt_http_send(struct client *cl, const char *buf, int len)$/;"	f
dt_list	dt_uhttpd_select.c	/^typedef struct list_head dt_list;$/;"	t	typeref:struct:list_head	file:
dt_new_client	dt_uhttpd_select.c	/^static dt_client *dt_new_client(struct client *cl, int fd)$/;"	f	file:
dt_raw_send	dt_uhttpd_utils.c	/^static int dt_raw_send(  struct client *cl, $/;"	f	file:
dt_send_files	dt_uhttpd_select.c	/^static int dt_send_files(struct dt_uhttpd *http)$/;"	f	file:
dt_sendtoclient	dt_uhttpd_select.c	/^static int dt_sendtoclient(dt_client *client)$/;"	f	file:
dt_tcp_send_lowlevel	dt_uhttpd_utils.c	/^dt_tcp_send_lowlevel(struct client *cl, const char *buf, int len)$/;"	f	file:
dt_uhttpd	dt_uhttpd_select.c	/^struct dt_uhttpd{$/;"	s	file:
dt_uhttpd_evt_send	dt_uhttpd_evt.c	/^int dt_uhttpd_evt_send(struct client *cl, int fd)$/;"	f
dt_uhttpd_init	dt_uhttpd_select.c	/^int dt_uhttpd_init()$/;"	f
dt_uhttpd_main	dt_uhttpd_select.c	/^static void *dt_uhttpd_main(void *arg)$/;"	f	file:
dt_uhttpd_send_content	dt_uhttpd_select.c	/^int dt_uhttpd_send_content(struct client *cl, int fd)$/;"	f
dt_uhttpd_uninit	dt_uhttpd_select.c	/^int dt_uhttpd_uninit()$/;"	f
dt_uhttpd_write	dt_uhttpd_utils.c	/^int dt_uhttpd_write(struct client *cl)$/;"	f
dump_attr_data	libubox/examples/blobmsg-example.c	/^static void dump_attr_data(void *data, int len, int type, int indent, int next_indent)$/;"	f	file:
dump_message	libubox/examples/blobmsg-example.c	/^static void dump_message(struct blob_buf *buf)$/;"	f	file:
dump_table	libubox/examples/blobmsg-example.c	/^dump_table(struct blob_attr *head, int len, int indent, bool array)$/;"	f	file:
end	libubox/ustream.h	/^	char *end;$/;"	m	struct:ustream_buf
ensure_out	uhttpd-utils.h	55;"	d
ensure_ret	uhttpd-utils.h	58;"	d
entry	json/json_object_private.h	/^	struct lh_entry *entry;$/;"	m	struct:json_object_iter	typeref:struct:json_object_iter::lh_entry
eof	libubox/uloop.h	/^	bool eof;$/;"	m	struct:uloop_fd
eof	libubox/ustream.h	/^	bool eof, eof_write_done;$/;"	m	struct:ustream
eof_write_done	libubox/ustream.h	/^	bool eof, eof_write_done;$/;"	m	struct:ustream
equal_fn	json/linkhash.h	/^	lh_equal_fn *equal_fn;$/;"	m	struct:lh_table
err	json/json_tokener.h	/^  ptrdiff_t err;$/;"	m	struct:json_tokener
error	libubox/uloop.h	/^	bool error;$/;"	m	struct:uloop_fd
error_handler	uhttpd.h	/^	char *error_handler;$/;"	m	struct:config
error_ptr	json/bits.h	24;"	d
ev_policy	ubus/ubusd_event.c	/^static struct blobmsg_policy ev_policy[] = {$/;"	v	typeref:struct:blobmsg_policy	file:
event_fill_cb	ubus/ubusd_event.c	/^typedef struct ubus_msg_buf *(*event_fill_cb)(void *priv, const char *id);$/;"	t	typeref:struct:event_fill_cb	file:
event_method	ubus/libubus.c	/^static const struct ubus_method event_method = {$/;"	v	typeref:struct:ubus_method	file:
event_obj	ubus/ubusd_event.c	/^static struct ubus_object *event_obj;$/;"	v	typeref:struct:ubus_object	file:
event_seen	ubus/ubusd_obj.h	/^	int event_seen;$/;"	m	struct:ubus_object
event_seq	ubus/ubusd_event.c	/^static int event_seq = 0;$/;"	v	file:
event_source	ubus/ubusd_event.c	/^struct event_source {$/;"	s	file:
events	libubox/uloop.c	/^static struct epoll_event events[ULOOP_MAX_EVENTS];$/;"	v	typeref:struct:epoll_event	file:
events	libubox/uloop.c	/^static struct kevent events[ULOOP_MAX_EVENTS];$/;"	v	typeref:struct:kevent	file:
events	ubus/ubusd_obj.h	/^	struct list_head events;$/;"	m	struct:ubus_object	typeref:struct:ubus_object::list_head
evr_policy	ubus/ubusd_event.c	/^static struct blobmsg_policy evr_policy[] = {$/;"	v	typeref:struct:blobmsg_policy	file:
extn	uhttpd-file.h	/^	const char *extn;$/;"	m	struct:mimetype
extn	uhttpd.h	/^	char extn[32];$/;"	m	struct:interpreter
fd	libubox/uloop.h	/^	int fd;$/;"	m	struct:uloop_fd
fd	libubox/ustream.h	/^	struct uloop_fd fd;$/;"	m	struct:ustream_fd	typeref:struct:ustream_fd::uloop_fd
fd	uhttpd.h	/^	struct uloop_fd fd;$/;"	m	struct:client	typeref:struct:client::uloop_fd
fd	uhttpd.h	/^	struct uloop_fd fd;$/;"	m	struct:client_light	typeref:struct:client_light::uloop_fd
fd	uhttpd.h	/^	struct uloop_fd fd;$/;"	m	struct:listener	typeref:struct:listener::uloop_fd
fd_cloexec	uhttpd-utils.h	49;"	d
fd_nonblock	uhttpd-utils.h	52;"	d
file	uhttpd.h	/^	char *file;$/;"	m	struct:config
file	uhttpd.h	/^	int file;$/;"	m	struct:client
fill_message	libubox/examples/blobmsg-example.c	/^fill_message(struct blob_buf *buf)$/;"	f	file:
foreach_header	uhttpd-utils.h	46;"	d
format_type	ubus/example/cli.c	/^static const char *format_type(void *priv, struct blob_attr *attr)$/;"	f	file:
free	libubox/ustream.h	/^	void (*free)(struct ustream *s);$/;"	m	struct:ustream
free_fn	json/arraylist.h	/^  array_list_free_fn *free_fn;$/;"	m	struct:array_list
free_fn	json/linkhash.h	/^	lh_entry_free_fn *free_fn;$/;"	m	struct:lh_table
function	uhttpd-ubus.h	/^	char *function;$/;"	m	struct:uh_ubus_session_acl
function	uhttpd-ubus.h	/^	const char *function;$/;"	m	struct:uh_ubus_request_data
get_flags	libubox/uloop.c	/^static uint16_t get_flags(unsigned int flags, unsigned int mask)$/;"	f	file:
get_keys	libubox/jshn/jshn.c	/^static char *get_keys(const char *prefix)$/;"	f	file:
get_next_connection	ubus/example/ubusd.c	/^static bool get_next_connection(int fd)$/;"	f	file:
get_next_msg	ubus/libubus.c	/^static bool get_next_msg(struct ubus_context *ctx)$/;"	f	file:
get_policy	uhttpd-ubus.c	/^static const struct blobmsg_policy get_policy[__UH_UBUS_SG_MAX] = {$/;"	v	typeref:struct:blobmsg_policy	file:
get_var	libubox/jshn/jshn.c	/^static void get_var(const char *prefix, const char **name, char **var, char **type)$/;"	f	file:
grow	libubox/blob.h	/^	bool (*grow)(struct blob_buf *buf, int minlen);$/;"	m	struct:blob_buf
handle_client_disconnect	ubus/example/ubusd.c	/^static void handle_client_disconnect(struct ubus_client *cl)$/;"	f	file:
handler	ubus/libubus.h	/^	ubus_handler_t handler;$/;"	m	struct:ubus_method
handlers	ubus/ubusd_proto.c	/^static const ubus_cmd_cb handlers[__UBUS_MSG_LAST] = {$/;"	v	file:
hash_fn	json/linkhash.h	/^	lh_hash_fn *hash_fn;$/;"	m	struct:lh_table
hdr	ubus/libubus.c	/^	struct ubus_msghdr hdr;$/;"	m	struct:ubus_pending_invoke	typeref:struct:ubus_pending_invoke::ubus_msghdr	file:
hdr	ubus/libubus.h	/^		struct ubus_msghdr hdr;$/;"	m	struct:ubus_context::__anon16	typeref:struct:ubus_context::__anon16::ubus_msghdr
hdr	ubus/ubusd.h	/^		struct ubus_msghdr hdr;$/;"	m	struct:ubus_client::__anon12	typeref:struct:ubus_client::__anon12::ubus_msghdr
hdr	ubus/ubusd.h	/^	struct ubus_msghdr hdr;$/;"	m	struct:ubus_msg_buf	typeref:struct:ubus_msg_buf::ubus_msghdr
hdrbuf	ubus/ubusd.h	/^	} hdrbuf;$/;"	m	struct:ubus_client	typeref:struct:ubus_client::__anon12
head	json/linkhash.h	/^	struct lh_entry *head;$/;"	m	struct:lh_table	typeref:struct:lh_table::lh_entry
head	libubox/blob.h	/^	struct blob_attr *head;$/;"	m	struct:blob_buf	typeref:struct:blob_buf::blob_attr
head	libubox/ustream.h	/^	char head[];$/;"	m	struct:ustream_buf
head	libubox/ustream.h	/^	struct ustream_buf *head;$/;"	m	struct:ustream_buf_list	typeref:struct:ustream_buf_list::ustream_buf
header_sent	uhttpd-cgi.h	/^	bool header_sent;$/;"	m	struct:uh_cgi_state
headers	uhttpd.h	/^	char *headers[UH_LIMIT_HEADERS];$/;"	m	struct:http_request
headers	uhttpd.h	/^	char *headers[UH_LIMIT_HEADERS];$/;"	m	struct:http_response
hello_policy	ubus/example/ubus-example.c	/^static const struct blobmsg_policy hello_policy[] = {$/;"	v	typeref:struct:blobmsg_policy	file:
hex	uhttpd-utils.c	363;"	d	file:
hexdigit	json/bits.h	23;"	d
http_list	dt_uhttpd_select.c	/^static dt_list *http_list(struct dt_uhttpd *http)$/;"	f	file:
http_lock	dt_uhttpd_select.c	/^static void http_lock(struct dt_uhttpd *http)$/;"	f	file:
http_method	uhttpd.h	/^enum http_method {$/;"	g
http_methods	uhttpd.c	/^const char * http_methods[] = { "GET", "POST", "HEAD", };$/;"	v
http_request	uhttpd.h	/^struct http_request {$/;"	s
http_response	uhttpd.h	/^struct http_response {$/;"	s
http_run	dt_uhttpd_select.c	/^static int http_run(struct dt_uhttpd *http)$/;"	f	file:
http_setrun	dt_uhttpd_select.c	/^static int http_setrun(struct dt_uhttpd *http, int run)$/;"	f	file:
http_unlock	dt_uhttpd_select.c	/^static void http_unlock(struct dt_uhttpd *http)$/;"	f	file:
http_version	uhttpd.h	/^enum http_version {$/;"	g
http_versions	uhttpd.c	/^const char * http_versions[] = { "HTTP\/0.9", "HTTP\/1.0", "HTTP\/1.1", };$/;"	v
httpbuf	uhttpd-cgi.h	/^	} httpbuf;$/;"	m	struct:uh_cgi_state	typeref:struct:uh_cgi_state::__anon1
httpbuf	uhttpd.h	/^	} httpbuf;$/;"	m	struct:client	typeref:struct:client::__anon2
id	ubus/libubus.h	/^	uint32_t id;$/;"	m	struct:ubus_object
id	ubus/libubus.h	/^	uint32_t id;$/;"	m	struct:ubus_object_data
id	ubus/libubus.h	/^	uint32_t id;$/;"	m	struct:ubus_object_type
id	ubus/ubusd.h	/^	struct ubus_id id;$/;"	m	struct:ubus_client	typeref:struct:ubus_client::ubus_id
id	ubus/ubusd_id.h	/^	uint32_t id;$/;"	m	struct:ubus_id
id	ubus/ubusd_obj.h	/^	struct ubus_id id;$/;"	m	struct:ubus_object	typeref:struct:ubus_object::ubus_id
id	ubus/ubusd_obj.h	/^	struct ubus_id id;$/;"	m	struct:ubus_object_type	typeref:struct:ubus_object_type::ubus_id
id	uhttpd-ubus.h	/^	char id[33];$/;"	m	struct:uh_ubus_session
id_len	libubox/blob.h	/^	uint32_t id_len;$/;"	m	struct:blob_attr
indent	libubox/blobmsg_json.c	/^	bool indent;$/;"	m	struct:strbuf	file:
indent_level	libubox/blobmsg_json.c	/^	int indent_level;$/;"	m	struct:strbuf	file:
indent_printf	libubox/examples/blobmsg-example.c	8;"	d	file:
indent_str	libubox/examples/blobmsg-example.c	/^static const char *indent_str = "\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t";$/;"	v	file:
index_file	uhttpd.h	/^struct index_file {$/;"	s
info	uhttpd-utils.h	/^	char *info;$/;"	m	struct:path_info
inited	dt_uhttpd_select.c	/^	int        inited;$/;"	m	struct:dt_uhttpd	file:
inserts	json/linkhash.h	/^	int inserts;$/;"	m	struct:lh_table
interpreter	uhttpd.h	/^struct interpreter {$/;"	s
invoke_seq	ubus/ubusd_obj.h	/^	unsigned int invoke_seq;$/;"	m	struct:ubus_object
is_double	json/json_tokener.h	/^  int depth, is_double, st_pos, char_offset;$/;"	m	struct:json_tokener
is_error	json/bits.h	25;"	d
jshn_add_object_var	libubox/jshn/jshn.c	/^static void jshn_add_object_var(json_object *obj, bool array, const char *prefix, const char *name)$/;"	f	file:
jshn_add_objects	libubox/jshn/jshn.c	/^static json_object *jshn_add_objects(json_object *obj, const char *prefix, bool array)$/;"	f	file:
jshn_append	libubox/sh/jshn.sh	/^jshn_append() {$/;"	f
jshn_format	libubox/jshn/jshn.c	/^static int jshn_format(bool no_newline)$/;"	f	file:
jshn_parse	libubox/jshn/jshn.c	/^static int jshn_parse(const char *str)$/;"	f	file:
json_add_array	libubox/sh/jshn.sh	/^json_add_array() {$/;"	f
json_add_boolean	libubox/sh/jshn.sh	/^json_add_boolean() {$/;"	f
json_add_generic	libubox/sh/jshn.sh	/^json_add_generic() {$/;"	f
json_add_int	libubox/sh/jshn.sh	/^json_add_int() {$/;"	f
json_add_object	libubox/sh/jshn.sh	/^json_add_object() {$/;"	f
json_add_string	libubox/sh/jshn.sh	/^json_add_string() {$/;"	f
json_add_table	libubox/sh/jshn.sh	/^json_add_table() {$/;"	f
json_close_array	libubox/sh/jshn.sh	/^json_close_array() {$/;"	f
json_close_object	libubox/sh/jshn.sh	/^json_close_object() {$/;"	f
json_dump	libubox/sh/jshn.sh	/^json_dump() {$/;"	f
json_escape_str	json/json_object.c	/^static int json_escape_str(struct printbuf *pb, char *str)$/;"	f	file:
json_false_str	json/json_tokener.c	/^static const char* json_false_str = "false";$/;"	v	file:
json_get_type	libubox/sh/jshn.sh	/^json_get_type() {$/;"	f
json_get_var	libubox/sh/jshn.sh	/^json_get_var() {$/;"	f
json_get_vars	libubox/sh/jshn.sh	/^json_get_vars() {$/;"	f
json_hex_chars	json/json_object.c	/^const char *json_hex_chars = "0123456789abcdef";$/;"	v
json_init	libubox/sh/jshn.sh	/^json_init() {$/;"	f
json_load	libubox/sh/jshn.sh	/^json_load() {$/;"	f
json_max	json/bits.h	20;"	d
json_min	json/bits.h	16;"	d
json_null_str	json/json_tokener.c	/^static const char* json_null_str = "null";$/;"	v	file:
json_number_chars	json/json_object.c	/^const char *json_number_chars = "0123456789.+-eE";$/;"	v
json_object	json/json_object.h	/^typedef struct json_object json_object;$/;"	t	typeref:struct:json_object
json_object	json/json_object_private.h	/^struct json_object$/;"	s
json_object_array_add	json/json_object.c	/^int json_object_array_add(struct json_object *jso,struct json_object *val)$/;"	f
json_object_array_delete	json/json_object.c	/^static void json_object_array_delete(struct json_object* jso)$/;"	f	file:
json_object_array_entry_free	json/json_object.c	/^static void json_object_array_entry_free(void *data)$/;"	f	file:
json_object_array_get_idx	json/json_object.c	/^struct json_object* json_object_array_get_idx(struct json_object *jso,$/;"	f
json_object_array_length	json/json_object.c	/^int json_object_array_length(struct json_object *jso)$/;"	f
json_object_array_put_idx	json/json_object.c	/^int json_object_array_put_idx(struct json_object *jso, int idx,$/;"	f
json_object_array_to_json_string	json/json_object.c	/^static int json_object_array_to_json_string(struct json_object* jso,$/;"	f	file:
json_object_boolean_to_json_string	json/json_object.c	/^static int json_object_boolean_to_json_string(struct json_object* jso,$/;"	f	file:
json_object_delete_fn	json/json_object_private.h	/^typedef void (json_object_delete_fn)(struct json_object *o);$/;"	t
json_object_double_to_json_string	json/json_object.c	/^static int json_object_double_to_json_string(struct json_object* jso,$/;"	f	file:
json_object_fini	json/json_object.c	/^static void json_object_fini(void) {$/;"	f	file:
json_object_from_file	json/json_util.c	/^struct json_object* json_object_from_file(char *filename)$/;"	f
json_object_generic_delete	json/json_object.c	/^static void json_object_generic_delete(struct json_object* jso)$/;"	f	file:
json_object_get	json/json_object.c	/^extern struct json_object* json_object_get(struct json_object *jso)$/;"	f
json_object_get_array	json/json_object.c	/^struct array_list* json_object_get_array(struct json_object *jso)$/;"	f
json_object_get_boolean	json/json_object.c	/^boolean json_object_get_boolean(struct json_object *jso)$/;"	f
json_object_get_double	json/json_object.c	/^double json_object_get_double(struct json_object *jso)$/;"	f
json_object_get_int	json/json_object.c	/^int json_object_get_int(struct json_object *jso)$/;"	f
json_object_get_object	json/json_object.c	/^struct lh_table* json_object_get_object(struct json_object *jso)$/;"	f
json_object_get_string	json/json_object.c	/^const char* json_object_get_string(struct json_object *jso)$/;"	f
json_object_get_type	json/json_object.c	/^enum json_type json_object_get_type(struct json_object *jso)$/;"	f
json_object_init	json/json_object.c	/^static void json_object_init(void) {$/;"	f	file:
json_object_int_to_json_string	json/json_object.c	/^static int json_object_int_to_json_string(struct json_object* jso,$/;"	f	file:
json_object_is_type	json/json_object.c	/^int json_object_is_type(struct json_object *jso, enum json_type type)$/;"	f
json_object_iter	json/json_object.h	/^typedef struct json_object_iter json_object_iter;$/;"	t	typeref:struct:json_object_iter
json_object_iter	json/json_object_private.h	/^struct json_object_iter$/;"	s
json_object_lh_entry_free	json/json_object.c	/^static void json_object_lh_entry_free(struct lh_entry *ent)$/;"	f	file:
json_object_new	json/json_object.c	/^static struct json_object* json_object_new(enum json_type o_type)$/;"	f	file:
json_object_new_array	json/json_object.c	/^struct json_object* json_object_new_array(void)$/;"	f
json_object_new_boolean	json/json_object.c	/^struct json_object* json_object_new_boolean(boolean b)$/;"	f
json_object_new_double	json/json_object.c	/^struct json_object* json_object_new_double(double d)$/;"	f
json_object_new_int	json/json_object.c	/^struct json_object* json_object_new_int(int i)$/;"	f
json_object_new_object	json/json_object.c	/^struct json_object* json_object_new_object(void)$/;"	f
json_object_new_string	json/json_object.c	/^struct json_object* json_object_new_string(const char *s)$/;"	f
json_object_new_string_len	json/json_object.c	/^struct json_object* json_object_new_string_len(const char *s, int len)$/;"	f
json_object_object_add	json/json_object.c	/^void json_object_object_add(struct json_object* jso, const char *key,$/;"	f
json_object_object_del	json/json_object.c	/^void json_object_object_del(struct json_object* jso, const char *key)$/;"	f
json_object_object_delete	json/json_object.c	/^static void json_object_object_delete(struct json_object* jso)$/;"	f	file:
json_object_object_foreach	json/json_object.h	151;"	d
json_object_object_foreach	json/json_object.h	157;"	d
json_object_object_foreachC	json/json_object.h	167;"	d
json_object_object_get	json/json_object.c	/^struct json_object* json_object_object_get(struct json_object* jso, const char *key)$/;"	f
json_object_object_to_json_string	json/json_object.c	/^static int json_object_object_to_json_string(struct json_object* jso,$/;"	f	file:
json_object_put	json/json_object.c	/^extern void json_object_put(struct json_object *jso)$/;"	f
json_object_string_delete	json/json_object.c	/^static void json_object_string_delete(struct json_object* jso)$/;"	f	file:
json_object_string_to_json_string	json/json_object.c	/^static int json_object_string_to_json_string(struct json_object* jso,$/;"	f	file:
json_object_table	json/json_object.c	/^static struct lh_table *json_object_table;$/;"	v	typeref:struct:lh_table	file:
json_object_to_file	json/json_util.c	/^int json_object_to_file(char *filename, struct json_object *obj)$/;"	f
json_object_to_json_string	json/json_object.c	/^const char* json_object_to_json_string(struct json_object *jso)$/;"	f
json_object_to_json_string_fn	json/json_object_private.h	/^typedef int (json_object_to_json_string_fn)(struct json_object *o,$/;"	t
json_select	libubox/sh/jshn.sh	/^json_select() {$/;"	f
json_tokener	json/json_object.h	/^typedef struct json_tokener json_tokener;$/;"	t	typeref:struct:json_tokener
json_tokener	json/json_tokener.h	/^struct json_tokener$/;"	s
json_tokener_continue	json/json_tokener.h	/^  json_tokener_continue,$/;"	e	enum:json_tokener_error
json_tokener_error	json/json_tokener.h	/^enum json_tokener_error {$/;"	g
json_tokener_error_depth	json/json_tokener.h	/^  json_tokener_error_depth,$/;"	e	enum:json_tokener_error
json_tokener_error_parse_array	json/json_tokener.h	/^  json_tokener_error_parse_array,$/;"	e	enum:json_tokener_error
json_tokener_error_parse_boolean	json/json_tokener.h	/^  json_tokener_error_parse_boolean,$/;"	e	enum:json_tokener_error
json_tokener_error_parse_comment	json/json_tokener.h	/^  json_tokener_error_parse_comment$/;"	e	enum:json_tokener_error
json_tokener_error_parse_eof	json/json_tokener.h	/^  json_tokener_error_parse_eof,$/;"	e	enum:json_tokener_error
json_tokener_error_parse_null	json/json_tokener.h	/^  json_tokener_error_parse_null,$/;"	e	enum:json_tokener_error
json_tokener_error_parse_number	json/json_tokener.h	/^  json_tokener_error_parse_number,$/;"	e	enum:json_tokener_error
json_tokener_error_parse_object_key_name	json/json_tokener.h	/^  json_tokener_error_parse_object_key_name,$/;"	e	enum:json_tokener_error
json_tokener_error_parse_object_key_sep	json/json_tokener.h	/^  json_tokener_error_parse_object_key_sep,$/;"	e	enum:json_tokener_error
json_tokener_error_parse_object_value_sep	json/json_tokener.h	/^  json_tokener_error_parse_object_value_sep,$/;"	e	enum:json_tokener_error
json_tokener_error_parse_string	json/json_tokener.h	/^  json_tokener_error_parse_string,$/;"	e	enum:json_tokener_error
json_tokener_error_parse_unexpected	json/json_tokener.h	/^  json_tokener_error_parse_unexpected,$/;"	e	enum:json_tokener_error
json_tokener_errors	json/json_tokener.c	/^const char* json_tokener_errors[] = {$/;"	v
json_tokener_free	json/json_tokener.c	/^void json_tokener_free(struct json_tokener *tok)$/;"	f
json_tokener_new	json/json_tokener.c	/^struct json_tokener* json_tokener_new(void)$/;"	f
json_tokener_parse	json/json_tokener.c	/^struct json_object* json_tokener_parse(const char *str)$/;"	f
json_tokener_parse_ex	json/json_tokener.c	/^struct json_object* json_tokener_parse_ex(struct json_tokener *tok,$/;"	f
json_tokener_reset	json/json_tokener.c	/^void json_tokener_reset(struct json_tokener *tok)$/;"	f
json_tokener_reset_level	json/json_tokener.c	/^static void json_tokener_reset_level(struct json_tokener *tok, int depth)$/;"	f	file:
json_tokener_srec	json/json_tokener.h	/^struct json_tokener_srec$/;"	s
json_tokener_state	json/json_tokener.h	/^enum json_tokener_state {$/;"	g
json_tokener_state_array	json/json_tokener.h	/^  json_tokener_state_array,$/;"	e	enum:json_tokener_state
json_tokener_state_array_add	json/json_tokener.h	/^  json_tokener_state_array_add,$/;"	e	enum:json_tokener_state
json_tokener_state_array_sep	json/json_tokener.h	/^  json_tokener_state_array_sep,$/;"	e	enum:json_tokener_state
json_tokener_state_boolean	json/json_tokener.h	/^  json_tokener_state_boolean,$/;"	e	enum:json_tokener_state
json_tokener_state_comment	json/json_tokener.h	/^  json_tokener_state_comment,$/;"	e	enum:json_tokener_state
json_tokener_state_comment_end	json/json_tokener.h	/^  json_tokener_state_comment_end,$/;"	e	enum:json_tokener_state
json_tokener_state_comment_eol	json/json_tokener.h	/^  json_tokener_state_comment_eol,$/;"	e	enum:json_tokener_state
json_tokener_state_comment_start	json/json_tokener.h	/^  json_tokener_state_comment_start,$/;"	e	enum:json_tokener_state
json_tokener_state_eatws	json/json_tokener.h	/^  json_tokener_state_eatws,$/;"	e	enum:json_tokener_state
json_tokener_state_escape_unicode	json/json_tokener.h	/^  json_tokener_state_escape_unicode,$/;"	e	enum:json_tokener_state
json_tokener_state_finish	json/json_tokener.h	/^  json_tokener_state_finish,$/;"	e	enum:json_tokener_state
json_tokener_state_null	json/json_tokener.h	/^  json_tokener_state_null,$/;"	e	enum:json_tokener_state
json_tokener_state_number	json/json_tokener.h	/^  json_tokener_state_number,$/;"	e	enum:json_tokener_state
json_tokener_state_object_field	json/json_tokener.h	/^  json_tokener_state_object_field,$/;"	e	enum:json_tokener_state
json_tokener_state_object_field_end	json/json_tokener.h	/^  json_tokener_state_object_field_end,$/;"	e	enum:json_tokener_state
json_tokener_state_object_field_start	json/json_tokener.h	/^  json_tokener_state_object_field_start,$/;"	e	enum:json_tokener_state
json_tokener_state_object_sep	json/json_tokener.h	/^  json_tokener_state_object_sep$/;"	e	enum:json_tokener_state
json_tokener_state_object_value	json/json_tokener.h	/^  json_tokener_state_object_value,$/;"	e	enum:json_tokener_state
json_tokener_state_object_value_add	json/json_tokener.h	/^  json_tokener_state_object_value_add,$/;"	e	enum:json_tokener_state
json_tokener_state_start	json/json_tokener.h	/^  json_tokener_state_start,$/;"	e	enum:json_tokener_state
json_tokener_state_string	json/json_tokener.h	/^  json_tokener_state_string,$/;"	e	enum:json_tokener_state
json_tokener_state_string_escape	json/json_tokener.h	/^  json_tokener_state_string_escape,$/;"	e	enum:json_tokener_state
json_tokener_success	json/json_tokener.h	/^  json_tokener_success,$/;"	e	enum:json_tokener_error
json_true_str	json/json_tokener.c	/^static const char* json_true_str = "true";$/;"	v	file:
json_type	json/json_object.h	/^typedef enum json_type {$/;"	g
json_type	json/json_object.h	/^} json_type;$/;"	t	typeref:enum:json_type
json_type_array	json/json_object.h	/^  json_type_array,$/;"	e	enum:json_type
json_type_boolean	json/json_object.h	/^  json_type_boolean,$/;"	e	enum:json_type
json_type_double	json/json_object.h	/^  json_type_double,$/;"	e	enum:json_type
json_type_int	json/json_object.h	/^  json_type_int,$/;"	e	enum:json_type
json_type_name	json/json_object.c	/^static const char* json_type_name[] = {$/;"	v	file:
json_type_null	json/json_object.h	/^  json_type_null,$/;"	e	enum:json_type
json_type_object	json/json_object.h	/^  json_type_object,$/;"	e	enum:json_type
json_type_string	json/json_object.h	/^  json_type_string$/;"	e	enum:json_type
k	json/linkhash.h	/^	void *k;$/;"	m	struct:lh_entry
keep_old	libubox/vlist.h	/^	bool keep_old;$/;"	m	struct:vlist_tree
key	json/json_object_private.h	/^	char *key;$/;"	m	struct:json_object_iter
key	libubox/avl.h	/^  const void *key;$/;"	m	struct:avl_node
key	uhttpd.h	/^	char *key;$/;"	m	struct:config
kqflags	libubox/uloop.h	/^	uint8_t kqflags;$/;"	m	struct:uloop_fd
leader	libubox/avl.h	/^  bool leader;$/;"	m	struct:avl_node
left	libubox/avl.h	/^  struct avl_node *left;$/;"	m	struct:avl_node	typeref:struct:avl_node::avl_node
len	libubox/blobmsg_json.c	/^	int len;$/;"	m	struct:strbuf	file:
len	ubus/ubusd.h	/^	int len;$/;"	m	struct:ubus_msg_buf
len	uhttpd-cgi.h	/^		int len;$/;"	m	struct:uh_cgi_state::__anon1
len	uhttpd.h	/^		int len;$/;"	m	struct:client::__anon2
length	json/arraylist.h	/^  int length;$/;"	m	struct:array_list
lh_abort	json/linkhash.c	/^void lh_abort(const char *msg, ...)$/;"	f
lh_char_equal	json/linkhash.c	/^int lh_char_equal(const void *k1, const void *k2)$/;"	f
lh_char_hash	json/linkhash.c	/^unsigned long lh_char_hash(const void *k)$/;"	f
lh_entry	json/linkhash.h	/^struct lh_entry {$/;"	s
lh_entry_free_fn	json/linkhash.h	/^typedef void (lh_entry_free_fn) (struct lh_entry *e);$/;"	t
lh_equal_fn	json/linkhash.h	/^typedef int (lh_equal_fn) (const void *k1, const void *k2);$/;"	t
lh_foreach	json/linkhash.h	149;"	d
lh_foreach_safe	json/linkhash.h	155;"	d
lh_hash_fn	json/linkhash.h	/^typedef unsigned long (lh_hash_fn) (const void *k);$/;"	t
lh_kchar_table_new	json/linkhash.c	/^struct lh_table* lh_kchar_table_new(int size, const char *name,$/;"	f
lh_kptr_table_new	json/linkhash.c	/^struct lh_table* lh_kptr_table_new(int size, const char *name,$/;"	f
lh_ptr_equal	json/linkhash.c	/^int lh_ptr_equal(const void *k1, const void *k2)$/;"	f
lh_ptr_hash	json/linkhash.c	/^unsigned long lh_ptr_hash(const void *k)$/;"	f
lh_table	json/json_object.h	/^typedef struct lh_table lh_table;$/;"	t	typeref:struct:lh_table
lh_table	json/linkhash.h	/^struct lh_table {$/;"	s
lh_table_delete	json/linkhash.c	/^int lh_table_delete(struct lh_table *t, const void *k)$/;"	f
lh_table_delete_entry	json/linkhash.c	/^int lh_table_delete_entry(struct lh_table *t, struct lh_entry *e)$/;"	f
lh_table_free	json/linkhash.c	/^void lh_table_free(struct lh_table *t)$/;"	f
lh_table_insert	json/linkhash.c	/^int lh_table_insert(struct lh_table *t, void *k, const void *v)$/;"	f
lh_table_lookup	json/linkhash.c	/^const void* lh_table_lookup(struct lh_table *t, const void *k)$/;"	f
lh_table_lookup_entry	json/linkhash.c	/^struct lh_entry* lh_table_lookup_entry(struct lh_table *t, const void *k)$/;"	f
lh_table_new	json/linkhash.c	/^struct lh_table* lh_table_new(int size, const char *name,$/;"	f
lh_table_resize	json/linkhash.c	/^void lh_table_resize(struct lh_table *t, int new_size)$/;"	f
list	libubox/avl.h	/^  struct list_entity list;$/;"	m	struct:avl_node	typeref:struct:avl_node::list_entity
list	libubox/uloop.h	/^	struct list_head list;$/;"	m	struct:uloop_process	typeref:struct:uloop_process::list_head
list	libubox/uloop.h	/^	struct list_head list;$/;"	m	struct:uloop_timeout	typeref:struct:uloop_timeout::list_head
list	ubus/libubus.c	/^	struct list_head list;$/;"	m	struct:ubus_pending_data	typeref:struct:ubus_pending_data::list_head	file:
list	ubus/libubus.c	/^	struct list_head list;$/;"	m	struct:ubus_pending_invoke	typeref:struct:ubus_pending_invoke::list_head	file:
list	ubus/libubus.h	/^	struct list_head list;$/;"	m	struct:ubus_request	typeref:struct:ubus_request::list_head
list	ubus/ubusd.h	/^	struct list_head list;$/;"	m	struct:ubus_path	typeref:struct:ubus_path::list_head
list	ubus/ubusd_event.c	/^	struct list_head list;$/;"	m	struct:event_source	typeref:struct:event_source::list_head	file:
list	ubus/ubusd_obj.h	/^	struct list_head list;$/;"	m	struct:ubus_method	typeref:struct:ubus_method::list_head
list	ubus/ubusd_obj.h	/^	struct list_head list;$/;"	m	struct:ubus_object	typeref:struct:ubus_object::list_head
list_add	libubox/list.h	/^list_add(struct list_head *_new, struct list_head *head)$/;"	f
list_add_after	libubox/list_compat.h	8;"	d
list_add_before	libubox/list_compat.h	9;"	d
list_add_head	libubox/list_compat.h	7;"	d
list_add_tail	libubox/list.h	/^list_add_tail(struct list_head *_new, struct list_head *head)$/;"	f
list_del	libubox/list.h	/^list_del(struct list_head *entry)$/;"	f
list_del_init	libubox/list.h	/^list_del_init(struct list_head *entry)$/;"	f
list_empty	libubox/list.h	/^list_empty(const struct list_head *head)$/;"	f
list_entity	libubox/list_compat.h	4;"	d
list_entry	libubox/list.h	109;"	d
list_first_entry	libubox/list.h	110;"	d
list_for_each	libubox/list.h	113;"	d
list_for_each_entry	libubox/list.h	119;"	d
list_for_each_entry_reverse	libubox/list.h	128;"	d
list_for_each_entry_safe	libubox/list.h	123;"	d
list_for_each_prev	libubox/list.h	132;"	d
list_for_each_prev_safe	libubox/list.h	133;"	d
list_for_each_safe	libubox/list.h	116;"	d
list_head	libubox/avl.h	/^  struct list_entity list_head;$/;"	m	struct:avl_tree	typeref:struct:avl_tree::list_entity
list_head	libubox/list.h	/^struct list_head {$/;"	s
list_init_head	libubox/list_compat.h	6;"	d
list_is_empty	libubox/list_compat.h	11;"	d
list_is_first	libubox/avl.c	52;"	d	file:
list_is_first	libubox/list.h	/^list_is_first(const struct list_head *list,$/;"	f
list_is_last	libubox/avl.c	51;"	d	file:
list_is_last	libubox/list.h	/^list_is_last(const struct list_head *list,$/;"	f
list_last_entry	libubox/list.h	111;"	d
list_merge	libubox/avl.c	50;"	d	file:
list_move	libubox/list.h	/^list_move(struct list_head *list, struct list_head *head)$/;"	f
list_move_tail	libubox/list.h	/^list_move_tail(struct list_head *entry, struct list_head *head)$/;"	f
list_next_element	libubox/list_compat.h	12;"	d
list_remove	libubox/list_compat.h	10;"	d
list_splice	libubox/list.h	/^list_splice(const struct list_head *list, struct list_head *head)$/;"	f
list_splice_init	libubox/list.h	/^list_splice_init(struct list_head *list, struct list_head *head)$/;"	f
list_splice_tail	libubox/list.h	/^list_splice_tail(struct list_head *list, struct list_head *head)$/;"	f
list_splice_tail_init	libubox/list.h	/^list_splice_tail_init(struct list_head *list, struct list_head *head)$/;"	f
listener	uhttpd.h	/^struct listener {$/;"	s
local_id	ubus/libubus.h	/^	uint32_t local_id;$/;"	m	struct:ubus_context
lookups	json/linkhash.h	/^	int lookups;$/;"	m	struct:lh_table
lua_close	uhttpd.h	/^	void (*lua_close) (lua_State *L);$/;"	m	struct:config
lua_handler	uhttpd.h	/^	char *lua_handler;$/;"	m	struct:config
lua_init	uhttpd.h	/^	lua_State * (*lua_init) (const struct config *conf);$/;"	m	struct:config
lua_prefix	uhttpd.h	/^	char *lua_prefix;$/;"	m	struct:config
lua_request	uhttpd.h	/^	bool (*lua_request) (struct client *cl, lua_State *L);$/;"	m	struct:config
lua_state	uhttpd.h	/^	lua_State *lua_state;$/;"	m	struct:config
lua_uloop_process	libubox/lua/uloop.c	/^struct lua_uloop_process {$/;"	s	file:
lua_uloop_timeout	libubox/lua/uloop.c	/^struct lua_uloop_timeout {$/;"	s	file:
luaclose_uloop	libubox/lua/uloop.c	/^int luaclose_uloop(lua_State *L)$/;"	f
luaopen_ubus	ubus/lua/ubus.c	/^luaopen_ubus(lua_State *L)$/;"	f
luaopen_uloop	libubox/lua/uloop.c	/^int luaopen_uloop(lua_State *L)$/;"	f
main	json/example/test1.c	/^int main(int argc, char **argv)$/;"	f
main	json/example/test2.c	/^int main(int argc, char **argv)$/;"	f
main	json/example/test3.c	/^main()$/;"	f
main	libubox/examples/blobmsg-example.c	/^int main(int argc, char **argv)$/;"	f
main	libubox/examples/ustream-example.c	/^int main(int argc, char **argv)$/;"	f
main	libubox/jshn/jshn.c	/^int main(int argc, char **argv)$/;"	f
main	ubus/example/cli.c	/^int main(int argc, char **argv)$/;"	f
main	ubus/example/ubus-example.c	/^int main(int argc, char **argv)$/;"	f
main	ubus/example/ubusd.c	/^int main(int argc, char **argv)$/;"	f
main	uhttpd.c	/^int main (int argc, char **argv)$/;"	f
max	uhttpd-utils.h	41;"	d
max_buffers	libubox/ustream.h	/^	int max_buffers;$/;"	m	struct:ustream_buf_list
max_requests	uhttpd.h	/^	int max_requests;$/;"	m	struct:config
maxlen	libubox/blob.h	/^	unsigned int maxlen;$/;"	m	struct:blob_attr_info
mc_abort	json/debug.c	/^void mc_abort(const char *msg, ...)$/;"	f
mc_debug	json/debug.c	/^void mc_debug(const char *msg, ...)$/;"	f
mc_error	json/debug.c	/^void mc_error(const char *msg, ...)$/;"	f
mc_get_debug	json/debug.c	/^int mc_get_debug(void) { return _debug; }$/;"	f
mc_info	json/debug.c	/^void mc_info(const char *msg, ...)$/;"	f
mc_set_debug	json/debug.c	/^void mc_set_debug(int debug) { _debug = debug; }$/;"	f
mc_set_syslog	json/debug.c	/^extern void mc_set_syslog(int syslog)$/;"	f
method	ubus/ubusd_obj.h	/^	char method[];$/;"	m	struct:ubus_watch
method	uhttpd.h	/^	enum http_method method;$/;"	m	struct:http_request	typeref:enum:http_request::http_method
methods	ubus/libubus.h	/^	const struct ubus_method *methods;$/;"	m	struct:ubus_object	typeref:struct:ubus_object::ubus_method
methods	ubus/libubus.h	/^	const struct ubus_method *methods;$/;"	m	struct:ubus_object_type	typeref:struct:ubus_object_type::ubus_method
methods	ubus/ubusd_obj.h	/^	struct list_head methods;$/;"	m	struct:ubus_object_type	typeref:struct:ubus_object_type::list_head
mime	uhttpd-file.h	/^	const char *mime;$/;"	m	struct:mimetype
mimetype	uhttpd-file.h	/^struct mimetype {$/;"	s
min	uhttpd-utils.h	40;"	d
min_buffers	libubox/ustream.h	/^	int min_buffers;$/;"	m	struct:ustream_buf_list
minlen	libubox/blob.h	/^	unsigned int minlen;$/;"	m	struct:blob_attr_info
msgbuf	ubus/libubus.h	/^	} msgbuf;$/;"	m	struct:ubus_context	typeref:struct:ubus_context::__anon16
mtx	dt_uhttpd_select.c	/^	pthread_mutex_t mtx;$/;"	m	struct:dt_uhttpd	file:
mtx	uhttpd.c	/^static pthread_mutex_t mtx = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
n_clients	uhttpd.h	/^	int n_clients;$/;"	m	struct:listener
n_methods	ubus/libubus.h	/^	int n_methods;$/;"	m	struct:ubus_object
n_methods	ubus/libubus.h	/^	int n_methods;$/;"	m	struct:ubus_object_type
n_policy	ubus/libubus.h	/^	int n_policy;$/;"	m	struct:ubus_method
name	json/linkhash.h	/^	const char *name;$/;"	m	struct:lh_table
name	libubox/blobmsg.h	/^	const char *name;$/;"	m	struct:blobmsg_policy
name	libubox/blobmsg.h	/^	uint8_t name[];$/;"	m	struct:blobmsg_hdr
name	ubus/example/cli.c	/^	const char *name;$/;"	m	struct:__anon11	file:
name	ubus/libubus.h	/^	const char *name;$/;"	m	struct:ubus_method
name	ubus/libubus.h	/^	const char *name;$/;"	m	struct:ubus_object
name	ubus/libubus.h	/^	const char *name;$/;"	m	struct:ubus_object_type
name	ubus/ubusd.h	/^	const char name[];$/;"	m	struct:ubus_path
name	ubus/ubusd_obj.h	/^	const char *name;$/;"	m	struct:ubus_method
name	uhttpd-utils.h	/^	char *name;$/;"	m	struct:path_info
name	uhttpd.h	/^	const char *name;$/;"	m	struct:index_file
namelen	libubox/blobmsg.h	/^	uint16_t namelen;$/;"	m	struct:blobmsg_hdr
network_timeout	uhttpd.h	/^	int network_timeout;$/;"	m	struct:config
new_policy	uhttpd-ubus.c	/^static const struct blobmsg_policy new_policy[__UH_UBUS_SN_MAX] = {$/;"	v	typeref:struct:blobmsg_policy	file:
next	json/linkhash.h	/^	struct lh_entry *next;$/;"	m	struct:lh_entry	typeref:struct:lh_entry::lh_entry
next	libubox/list.h	/^	struct list_head *next;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
next	libubox/ustream.h	/^	struct ustream *next;$/;"	m	struct:ustream	typeref:struct:ustream::ustream
next	libubox/ustream.h	/^	struct ustream_buf *next;$/;"	m	struct:ustream_buf	typeref:struct:ustream_buf::ustream_buf
next	uhttpd.h	/^	struct auth_realm *next;$/;"	m	struct:auth_realm	typeref:struct:auth_realm::auth_realm
next	uhttpd.h	/^	struct client *next;$/;"	m	struct:client	typeref:struct:client::client
next	uhttpd.h	/^	struct index_file *next;$/;"	m	struct:index_file	typeref:struct:index_file::index_file
next	uhttpd.h	/^	struct interpreter *next;$/;"	m	struct:interpreter	typeref:struct:interpreter::interpreter
next	uhttpd.h	/^	struct listener *next;$/;"	m	struct:listener	typeref:struct:listener::listener
next_client	libubox/examples/ustream-example.c	/^struct client *next_client = NULL;$/;"	v	typeref:struct:client
no_delete	libubox/vlist.h	/^	bool no_delete;$/;"	m	struct:vlist_tree
no_dirlists	uhttpd.h	/^	int no_dirlists;$/;"	m	struct:config
no_symlinks	uhttpd.h	/^	int no_symlinks;$/;"	m	struct:config
notify_read	libubox/ustream.h	/^	void (*notify_read)(struct ustream *s, int bytes_new);$/;"	m	struct:ustream
notify_state	libubox/ustream.h	/^	void (*notify_state)(struct ustream *s);$/;"	m	struct:ustream
notify_write	libubox/ustream.h	/^	void (*notify_write)(struct ustream *s, int bytes);$/;"	m	struct:ustream
o	json/json_object_private.h	/^  } o;$/;"	m	struct:json_object	typeref:union:json_object::data
o_type	json/json_object_private.h	/^  enum json_type o_type;$/;"	m	struct:json_object	typeref:enum:json_object::json_type
obj	json/json_tokener.h	/^  struct json_object *obj;$/;"	m	struct:json_tokener_srec	typeref:struct:json_tokener_srec::json_object
obj	ubus/libubus.h	/^	struct ubus_object obj;$/;"	m	struct:ubus_event_handler	typeref:struct:ubus_event_handler::ubus_object
obj	ubus/libubus.h	/^	struct ubus_object obj;$/;"	m	struct:ubus_watch_object	typeref:struct:ubus_watch_object::ubus_object
obj	ubus/ubusd_event.c	/^	struct ubus_object *obj;$/;"	m	struct:event_source	typeref:struct:event_source::ubus_object	file:
obj_event_seq	ubus/ubusd_event.c	/^static int obj_event_seq = 1;$/;"	v	file:
obj_field_name	json/json_tokener.c	141;"	d	file:
obj_field_name	json/json_tokener.h	/^  char *obj_field_name;$/;"	m	struct:json_tokener_srec
obj_types	ubus/ubusd_obj.c	/^struct avl_tree obj_types;$/;"	v	typeref:struct:avl_tree
object	ubus/libubus.h	/^	uint32_t object;$/;"	m	struct:ubus_request_data
object	uhttpd-ubus.h	/^	char object[];$/;"	m	struct:uh_ubus_session_acl
object	uhttpd-ubus.h	/^	const char *object;$/;"	m	struct:uh_ubus_request_data
objects	ubus/libubus.h	/^	struct avl_tree objects;$/;"	m	struct:ubus_context	typeref:struct:ubus_context::avl_tree
objects	ubus/ubusd.h	/^	struct list_head objects;$/;"	m	struct:ubus_client	typeref:struct:ubus_client::list_head
objects	ubus/ubusd_obj.c	/^struct avl_tree objects;$/;"	v	typeref:struct:avl_tree
offset_to_attr	libubox/blob.c	/^offset_to_attr(struct blob_buf *buf, int offset)$/;"	f	file:
open	json/json_util.c	44;"	d	file:
p	libubox/lua/uloop.c	/^	struct uloop_process p;$/;"	m	struct:lua_uloop_process	typeref:struct:lua_uloop_process::uloop_process	file:
p1	libubox/examples/uloop-example.lua	/^function p1(r)$/;"	f
p2	libubox/examples/uloop-example.lua	/^function p2(r)$/;"	f
parent	libubox/avl.h	/^  struct avl_node *parent;$/;"	m	struct:avl_node	typeref:struct:avl_node::avl_node
partial	ubus/ubusd_event.c	/^	bool partial;$/;"	m	struct:event_source	file:
pass	uhttpd.h	/^	char pass[128];$/;"	m	struct:auth_realm
path	ubus/libubus.h	/^	const char *path;$/;"	m	struct:ubus_object
path	ubus/libubus.h	/^	const char *path;$/;"	m	struct:ubus_object_data
path	ubus/ubusd_obj.c	/^struct avl_tree path;$/;"	v	typeref:struct:avl_tree
path	ubus/ubusd_obj.h	/^	struct avl_node path;$/;"	m	struct:ubus_object	typeref:struct:ubus_object::avl_node
path	uhttpd.h	/^	char path[PATH_MAX];$/;"	m	struct:auth_realm
path	uhttpd.h	/^	char path[PATH_MAX];$/;"	m	struct:interpreter
path_info	uhttpd-utils.h	/^struct path_info {$/;"	s
patterns	ubus/ubusd_event.c	/^static struct avl_tree patterns;$/;"	v	typeref:struct:avl_tree	file:
pb	json/json_tokener.h	/^  struct printbuf *pb;$/;"	m	struct:json_tokener	typeref:struct:json_tokener::printbuf
peer	ubus/libubus.h	/^	uint32_t peer;$/;"	m	struct:ubus_request
peer	ubus/libubus.h	/^	uint32_t peer;$/;"	m	struct:ubus_request_data
peer	ubus/ubusmsg.h	/^	uint32_t peer;$/;"	m	struct:ubus_msghdr
peeraddr	uhttpd.h	/^	struct sockaddr_in6 peeraddr;$/;"	m	struct:client	typeref:struct:client::sockaddr_in6
pending	libubox/uloop.h	/^	bool pending;$/;"	m	struct:uloop_process
pending	libubox/uloop.h	/^	bool pending;$/;"	m	struct:uloop_timeout
pending	ubus/libubus.h	/^	struct list_head pending;$/;"	m	struct:ubus_context	typeref:struct:ubus_context::list_head
pending	ubus/libubus.h	/^	struct list_head pending;$/;"	m	struct:ubus_request	typeref:struct:ubus_request::list_head
pending_msg	ubus/ubusd.h	/^	struct ubus_msg_buf *pending_msg;$/;"	m	struct:ubus_client	typeref:struct:ubus_client::ubus_msg_buf
pending_msg_offset	ubus/ubusd.h	/^	int pending_msg_offset;$/;"	m	struct:ubus_client
phys	uhttpd-utils.h	/^	char *phys;$/;"	m	struct:path_info
pid	libubox/uloop.h	/^	pid_t pid;$/;"	m	struct:uloop_process
pol	libubox/examples/blobmsg-example.c	/^static const struct blobmsg_policy pol[] = {$/;"	v	typeref:struct:blobmsg_policy	file:
policy	ubus/libubus.h	/^	const struct blobmsg_policy *policy;$/;"	m	struct:ubus_method	typeref:struct:ubus_method::blobmsg_policy
poll	libubox/ustream.h	/^	bool (*poll)(struct ustream *s);$/;"	m	struct:ustream
poll_fd	libubox/uloop.c	/^static int poll_fd = -1;$/;"	v	file:
port	libubox/examples/ustream-example.c	/^static const char *port = "10000";$/;"	v	file:
pos	libubox/blobmsg_json.c	/^	int pos;$/;"	m	struct:strbuf	file:
post_insert	libubox/avl.c	/^post_insert(struct avl_tree *tree, struct avl_node *node)$/;"	f	file:
prefetch	libubox/list.h	35;"	d
prev	json/linkhash.h	/^	struct lh_entry *prev;$/;"	m	struct:lh_entry	typeref:struct:lh_entry::lh_entry
prev	libubox/list.h	/^	struct list_head *prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
printbuf	json/json_object.h	/^typedef struct printbuf printbuf;$/;"	t	typeref:struct:printbuf
printbuf	json/printbuf.h	/^struct printbuf {$/;"	s
printbuf_free	json/printbuf.c	/^void printbuf_free(struct printbuf *p)$/;"	f
printbuf_memappend	json/printbuf.c	/^int printbuf_memappend(struct printbuf *p, const char *buf, int size)$/;"	f
printbuf_memappend_fast	json/printbuf.h	42;"	d
printbuf_new	json/printbuf.c	/^struct printbuf* printbuf_new(void)$/;"	f
printbuf_reset	json/printbuf.c	/^void printbuf_reset(struct printbuf *p)$/;"	f
priv	libubox/blobmsg_json.c	/^	void *priv;$/;"	m	struct:strbuf	file:
priv	ubus/libubus.h	/^	void *priv;$/;"	m	struct:ubus_request
priv	uhttpd.h	/^	void *priv;$/;"	m	struct:client
proc	uhttpd.h	/^	struct uloop_process proc;$/;"	m	struct:client	typeref:struct:client::uloop_process
processes	libubox/uloop.c	/^static struct list_head processes = LIST_HEAD_INIT(processes);$/;"	v	typeref:struct:list_head	file:
ptr	uhttpd-cgi.h	/^		char *ptr;$/;"	m	struct:uh_cgi_state::__anon1
ptr	uhttpd.h	/^		char *ptr;$/;"	m	struct:client::__anon2
query	uhttpd-utils.h	/^	char *query;$/;"	m	struct:path_info
queue	dt_uhttpd_select.c	/^	dt_list queue;$/;"	m	struct:__anon8	file:
quote_char	json/json_tokener.h	/^  char quote_char;$/;"	m	struct:json_tokener
r	libubox/lua/uloop.c	/^	int r;$/;"	m	struct:lua_uloop_process	file:
r	libubox/lua/uloop.c	/^	int r;$/;"	m	struct:lua_uloop_timeout	file:
r	libubox/ustream.h	/^	struct ustream_buf_list r, w;$/;"	m	struct:ustream	typeref:struct:ustream::ustream_buf_list
random_fd	ubus/ubusd_id.c	/^static int random_fd = -1;$/;"	v	file:
raw_data_cb	ubus/libubus.h	/^	ubus_data_handler_t raw_data_cb;$/;"	m	struct:ubus_request
rd	uhttpd.h	/^		char *rd;$/;"	m	struct:client::__anon2
read_blocked	libubox/ustream.h	/^	enum read_blocked_reason read_blocked;$/;"	m	struct:ustream	typeref:enum:ustream::read_blocked_reason
read_blocked_reason	libubox/ustream.h	/^enum read_blocked_reason {$/;"	g
realm	uhttpd.h	/^	char *realm;$/;"	m	struct:config
realm	uhttpd.h	/^	struct auth_realm *realm;$/;"	m	struct:http_request	typeref:struct:http_request::auth_realm
receive_call_result_data	ubus/example/cli.c	/^static void receive_call_result_data(struct ubus_request *req, int type, struct blob_attr *msg)$/;"	f	file:
receive_event	ubus/example/cli.c	/^static void receive_event(struct ubus_context *ctx, struct ubus_event_handler *ev,$/;"	f	file:
receive_list_result	ubus/example/cli.c	/^static void receive_list_result(struct ubus_context *ctx, struct ubus_object_data *obj, void *priv)$/;"	f	file:
recv_msg	ubus/ubusd_obj.h	/^	int (*recv_msg)(struct ubus_client *client, const char *method, struct blob_attr *msg);$/;"	m	struct:ubus_object
recv_retry	ubus/libubus.c	/^static bool recv_retry(int fd, struct iovec *iov, bool wait)$/;"	f	file:
redirect_status	uhttpd.h	/^	int redirect_status;$/;"	m	struct:http_request
redirected	uhttpd-utils.h	/^	int redirected;$/;"	m	struct:path_info
refcount	ubus/ubusd.h	/^	uint32_t refcount; \/* ~0: uses external data buffer *\/$/;"	m	struct:ubus_msg_buf
refcount	ubus/ubusd_obj.h	/^	int refcount;$/;"	m	struct:ubus_object_type
register_poll	libubox/uloop.c	/^static int register_poll(struct uloop_fd *fd, unsigned int flags)$/;"	f	file:
registered	libubox/uloop.h	/^	bool registered;$/;"	m	struct:uloop_fd
req	ubus/libubus.c	/^	struct ubus_request *req;$/;"	m	struct:ubus_sync_req_cb	typeref:struct:ubus_sync_req_cb::ubus_request	file:
req	ubus/libubus.c	/^	struct ubus_request req;$/;"	m	struct:ubus_lookup_request	typeref:struct:ubus_lookup_request::ubus_request	file:
req_data_cb	ubus/libubus.c	/^static void req_data_cb(struct ubus_request *req, int type, struct blob_attr *data)$/;"	f	file:
request	uhttpd.h	/^	struct http_request request;$/;"	m	struct:client	typeref:struct:client::http_request
request_seq	ubus/libubus.h	/^	uint32_t request_seq;$/;"	m	struct:ubus_context
requests	ubus/libubus.h	/^	struct list_head requests;$/;"	m	struct:ubus_context	typeref:struct:ubus_context::list_head
resizes	json/linkhash.h	/^	int resizes;$/;"	m	struct:lh_table
response	uhttpd.h	/^	struct http_response response;$/;"	m	struct:client	typeref:struct:client::http_response
retmsg	ubus/ubusd_proto.c	/^static struct ubus_msg_buf *retmsg;$/;"	v	typeref:struct:ubus_msg_buf	file:
retmsg_data	ubus/ubusd_proto.c	/^static int *retmsg_data;$/;"	v	file:
rfc1918_filter	uhttpd.h	/^	int rfc1918_filter;$/;"	m	struct:config
right	libubox/avl.h	/^  struct avl_node *right;$/;"	m	struct:avl_node	typeref:struct:avl_node::avl_node
root	libubox/avl.h	/^  struct avl_node *root;$/;"	m	struct:avl_tree	typeref:struct:avl_tree::avl_node
root	uhttpd-utils.h	/^	char *root;$/;"	m	struct:path_info
rpipe	uhttpd.h	/^	struct uloop_fd rpipe;$/;"	m	struct:client	typeref:struct:client::uloop_fd
run	dt_uhttpd_select.c	/^	int 	   run;$/;"	m	struct:dt_uhttpd	file:
run	uhttpd.c	/^static int run = 1;$/;"	v	file:
run_server	libubox/examples/ustream-example.c	/^static int run_server(void)$/;"	f	file:
s	libubox/examples/ustream-example.c	/^	struct ustream_fd s;$/;"	m	struct:client	typeref:struct:client::ustream_fd	file:
sa_port	uhttpd-utils.c	/^int sa_port(void *sa)$/;"	f
sa_rfc1918	uhttpd-utils.c	/^int sa_rfc1918(void *sa)$/;"	f
sa_straddr	uhttpd-utils.c	/^const char * sa_straddr(void *sa)$/;"	f
sa_strport	uhttpd-utils.c	/^const char * sa_strport(void *sa)$/;"	f
saved_state	json/json_tokener.c	139;"	d	file:
saved_state	json/json_tokener.h	/^  enum json_tokener_state state, saved_state;$/;"	m	struct:json_tokener_srec	typeref:enum:json_tokener_srec::
script_timeout	uhttpd.h	/^	int script_timeout;$/;"	m	struct:config
seq	ubus/libubus.h	/^	uint32_t seq;$/;"	m	struct:ubus_request
seq	ubus/libubus.h	/^	uint32_t seq;$/;"	m	struct:ubus_request_data
seq	ubus/ubusmsg.h	/^	uint16_t seq;$/;"	m	struct:ubus_msghdr
servaddr	uhttpd.h	/^	struct sockaddr_in6 servaddr;$/;"	m	struct:client	typeref:struct:client::sockaddr_in6
server	libubox/examples/ustream-example.c	/^static struct uloop_fd server;$/;"	v	typeref:struct:uloop_fd	file:
server	uhttpd.h	/^	struct listener *server;$/;"	m	struct:client	typeref:struct:client::listener
server_cb	libubox/examples/ustream-example.c	/^static void server_cb(struct uloop_fd *fd, unsigned int events)$/;"	f	file:
server_cb	ubus/example/ubusd.c	/^static void server_cb(struct uloop_fd *fd, unsigned int events)$/;"	f	file:
server_fd	ubus/example/ubusd.c	/^static struct uloop_fd server_fd = {$/;"	v	typeref:struct:uloop_fd	file:
server_main	ubus/example/ubus-example.c	/^static void server_main(void)$/;"	f	file:
sessions	uhttpd-ubus.h	/^	struct avl_tree sessions;$/;"	m	struct:uh_ubus_state	typeref:struct:uh_ubus_state::avl_tree
set_policy	uhttpd-ubus.c	/^static const struct blobmsg_policy set_policy[__UH_UBUS_SS_MAX] = {$/;"	v	typeref:struct:blobmsg_policy	file:
set_read_blocked	libubox/ustream.h	/^	void (*set_read_blocked)(struct ustream *s);$/;"	m	struct:ustream
sid	uhttpd-ubus.h	/^	const char *sid;$/;"	m	struct:uh_ubus_request_data
sid_policy	uhttpd-ubus.c	/^static const struct blobmsg_policy sid_policy[__UH_UBUS_SI_MAX] = {$/;"	v	typeref:struct:blobmsg_policy	file:
signature	ubus/libubus.h	/^	struct blob_attr *signature;$/;"	m	struct:ubus_object_data	typeref:struct:ubus_object_data::blob_attr
simple_output	ubus/example/cli.c	/^static bool simple_output = false;$/;"	v	file:
sin	libubox/examples/ustream-example.c	/^	struct sockaddr_in sin;$/;"	m	struct:client	typeref:struct:client::sockaddr_in	file:
size	json/arraylist.h	/^  int size;$/;"	m	struct:array_list
size	json/linkhash.h	/^	int size;$/;"	m	struct:lh_table
size	json/printbuf.h	/^  int size;$/;"	m	struct:printbuf
sock	ubus/libubus.h	/^	struct uloop_fd sock;$/;"	m	struct:ubus_context	typeref:struct:ubus_context::uloop_fd
sock	ubus/ubusd.h	/^	struct uloop_fd sock;$/;"	m	struct:ubus_client	typeref:struct:ubus_client::uloop_fd
sock_queue	dt_uhttpd_select.c	/^	dt_list    sock_queue;$/;"	m	struct:dt_uhttpd	file:
socket	uhttpd.h	/^	int socket;$/;"	m	struct:listener
sprintbuf	json/printbuf.c	/^int sprintbuf(struct printbuf *p, const char *msg, ...)$/;"	f
st_pos	json/json_tokener.h	/^  int depth, is_double, st_pos, char_offset;$/;"	m	struct:json_tokener
stack	json/json_tokener.h	/^  struct json_tokener_srec stack[JSON_TOKENER_MAX_DEPTH];$/;"	m	struct:json_tokener	typeref:struct:json_tokener::json_tokener_srec
stack_depth	ubus/libubus.h	/^	int stack_depth;$/;"	m	struct:ubus_context
stat	uhttpd-utils.h	/^	struct stat stat;$/;"	m	struct:path_info	typeref:struct:path_info::stat
state	json/json_tokener.c	138;"	d	file:
state	json/json_tokener.h	/^  enum json_tokener_state state, saved_state;$/;"	m	struct:json_tokener_srec	typeref:enum:json_tokener_srec::json_tokener_state
state	libubox/lua/uloop.c	/^static lua_State *state;$/;"	v	file:
state_change	libubox/ustream.h	/^	struct uloop_timeout state_change;$/;"	m	struct:ustream	typeref:struct:ustream::uloop_timeout
status_code	ubus/libubus.h	/^	int status_code;$/;"	m	struct:ubus_request
status_msg	ubus/libubus.h	/^	bool status_msg;$/;"	m	struct:ubus_request
statuscode	uhttpd.h	/^	int statuscode;$/;"	m	struct:http_response
statusmsg	uhttpd.h	/^	char *statusmsg;$/;"	m	struct:http_response
str	json/json_tokener.h	/^  char *str;$/;"	m	struct:json_tokener
strbuf	libubox/blobmsg_json.c	/^struct strbuf {$/;"	s	file:
stream	libubox/ustream.h	/^	struct ustream stream;$/;"	m	struct:ustream_fd	typeref:struct:ustream_fd::ustream
strfind	uhttpd-utils.c	/^char *strfind(char *haystack, int hslen, const char *needle, int ndlen)$/;"	f
string_data	libubox/ustream.h	/^	bool string_data;$/;"	m	struct:ustream
strmatch_len	ubus/ubusd_event.c	/^static bool strmatch_len(const char *s1, const char *s2, int *len)$/;"	f	file:
strncasecmp	json/json_tokener.c	34;"	d	file:
strndup	json/json_tokener.c	/^char* strndup(const char* str, size_t n)$/;"	f
t	libubox/examples/uloop-example.lua	/^function t()$/;"	f
t	libubox/lua/uloop.c	/^	struct uloop_timeout t;$/;"	m	struct:lua_uloop_timeout	typeref:struct:lua_uloop_timeout::uloop_timeout	file:
table	json/linkhash.h	/^	struct lh_entry *table;$/;"	m	struct:lh_table	typeref:struct:lh_table::lh_entry
tail	json/linkhash.h	/^	struct lh_entry *tail;$/;"	m	struct:lh_table	typeref:struct:lh_table::lh_entry
tail	libubox/ustream.h	/^	char *tail;$/;"	m	struct:ustream_buf
tail	libubox/ustream.h	/^	struct ustream_buf *tail;$/;"	m	struct:ustream_buf_list	typeref:struct:ustream_buf_list::ustream_buf
tcp_keepalive	uhttpd.h	/^	int tcp_keepalive;$/;"	m	struct:config
test_client_object	ubus/example/ubus-example.c	/^static struct ubus_object test_client_object = {$/;"	v	typeref:struct:ubus_object	file:
test_event	ubus/example/ubus-example.c	/^static struct ubus_watch_object test_event;$/;"	v	typeref:struct:ubus_watch_object	file:
test_handle_event	ubus/example/ubus-example.c	/^static void test_handle_event(struct ubus_context *ctx, struct ubus_watch_object *w,$/;"	f	file:
test_hello	ubus/example/ubus-example.c	/^static int test_hello(struct ubus_context *ctx, struct ubus_object *obj,$/;"	f	file:
test_methods	ubus/example/ubus-example.c	/^static const struct ubus_method test_methods[] = {$/;"	v	typeref:struct:ubus_method	file:
test_object	ubus/example/ubus-example.c	/^static struct ubus_object test_object = {$/;"	v	typeref:struct:ubus_object	file:
test_object_type	ubus/example/ubus-example.c	/^static struct ubus_object_type test_object_type =$/;"	v	typeref:struct:ubus_object_type	file:
test_watch	ubus/example/ubus-example.c	/^static int test_watch(struct ubus_context *ctx, struct ubus_object *obj,$/;"	f	file:
tid	dt_uhttpd_select.c	/^	pthread_t  tid;$/;"	m	struct:dt_uhttpd	file:
time	libubox/uloop.h	/^	struct timeval time;$/;"	m	struct:uloop_timeout	typeref:struct:uloop_timeout::timeval
timeout	ubus/example/cli.c	/^static int timeout = 30;$/;"	v	file:
timeout	ubus/libubus.c	/^	struct uloop_timeout timeout;$/;"	m	struct:ubus_sync_req_cb	typeref:struct:ubus_sync_req_cb::uloop_timeout	file:
timeout	ubus/lua/ubus.c	/^	int timeout;$/;"	m	struct:ubus_lua_connection	file:
timeout	uhttpd-ubus.h	/^	int timeout;$/;"	m	struct:uh_ubus_session
timeout	uhttpd-ubus.h	/^	int timeout;$/;"	m	struct:uh_ubus_state
timeout	uhttpd.h	/^	struct uloop_timeout timeout;$/;"	m	struct:client	typeref:struct:client::uloop_timeout
timeouts	libubox/uloop.c	/^static struct list_head timeouts = LIST_HEAD_INIT(timeouts);$/;"	v	typeref:struct:list_head	file:
timer_m	libubox/lua/uloop.c	/^static const luaL_Reg timer_m[] = {$/;"	v	file:
tls	uhttpd.h	/^	SSL *tls;$/;"	m	struct:client
tls	uhttpd.h	/^	SSL *tls;$/;"	m	struct:client_light
tls	uhttpd.h	/^	SSL_CTX *tls;$/;"	m	struct:config
tls	uhttpd.h	/^	SSL_CTX *tls;$/;"	m	struct:listener
tls_accept	uhttpd.h	/^	int (*tls_accept) (struct client *c);$/;"	m	struct:config
tls_cert	uhttpd.h	/^	int (*tls_cert) (SSL_CTX *c, const char *file);$/;"	m	struct:config
tls_close	uhttpd.h	/^	void (*tls_close) (struct client *c);$/;"	m	struct:config
tls_free	uhttpd.h	/^	void (*tls_free) (struct listener *l);$/;"	m	struct:config
tls_init	uhttpd.h	/^	SSL_CTX * (*tls_init) (void);$/;"	m	struct:config
tls_key	uhttpd.h	/^	int (*tls_key) (SSL_CTX *c, const char *file);$/;"	m	struct:config
tls_recv	uhttpd.h	/^	int (*tls_recv) (struct client *c, char *buf, int len);$/;"	m	struct:config
tls_send	uhttpd.h	/^	int (*tls_send) (struct client *c, const char *buf, int len);$/;"	m	struct:config
touched	uhttpd-ubus.h	/^	struct timespec touched;$/;"	m	struct:uh_ubus_session	typeref:struct:uh_ubus_session::timespec
tv_diff	libubox/uloop.c	/^static int tv_diff(struct timeval *t1, struct timeval *t2)$/;"	f	file:
tx_queue	ubus/ubusd.h	/^	struct ubus_msg_buf *tx_queue[UBUSD_CLIENT_BACKLOG];$/;"	m	struct:ubus_client	typeref:struct:ubus_client::ubus_msg_buf
txq_cur	ubus/ubusd.h	/^	unsigned int txq_cur, txq_tail, txq_ofs;$/;"	m	struct:ubus_client
txq_ofs	ubus/ubusd.h	/^	unsigned int txq_cur, txq_tail, txq_ofs;$/;"	m	struct:ubus_client
txq_tail	ubus/ubusd.h	/^	unsigned int txq_cur, txq_tail, txq_ofs;$/;"	m	struct:ubus_client
type	libubox/blob.h	/^	unsigned int type;$/;"	m	struct:blob_attr_info
type	libubox/blobmsg.h	/^	enum blobmsg_type type;$/;"	m	struct:blobmsg_policy	typeref:enum:blobmsg_policy::blobmsg_type
type	ubus/libubus.c	/^	int type;$/;"	m	struct:ubus_pending_data	file:
type	ubus/libubus.h	/^	struct ubus_object_type *type;$/;"	m	struct:ubus_object	typeref:struct:ubus_object::ubus_object_type
type	ubus/ubusd_obj.h	/^	struct ubus_object_type *type;$/;"	m	struct:ubus_object	typeref:struct:ubus_object::ubus_object_type
type	ubus/ubusmsg.h	/^	uint8_t type;$/;"	m	struct:ubus_msghdr
type_id	ubus/libubus.h	/^	uint32_t type_id;$/;"	m	struct:ubus_object_data
ubus	ubus/lua/ubus.c	/^static const luaL_Reg ubus[] = {$/;"	v	file:
ubus	uhttpd-ubus.h	/^	struct ubus_object ubus;$/;"	m	struct:uh_ubus_state	typeref:struct:uh_ubus_state::ubus_object
ubus_abort_request	ubus/libubus.c	/^void ubus_abort_request(struct ubus_context *ctx, struct ubus_request *req)$/;"	f
ubus_add_object	ubus/libubus.c	/^int ubus_add_object(struct ubus_context *ctx, struct ubus_object *obj)$/;"	f
ubus_add_object_cb	ubus/libubus.c	/^static void ubus_add_object_cb(struct ubus_request *req, int type, struct blob_attr *msg)$/;"	f	file:
ubus_add_uloop	ubus/libubus.h	/^static inline void ubus_add_uloop(struct ubus_context *ctx)$/;"	f
ubus_alloc_id	ubus/ubusd_id.c	/^bool ubus_alloc_id(struct avl_tree *tree, struct ubus_id *id, uint32_t val)$/;"	f
ubus_cli_call	ubus/example/cli.c	/^static int ubus_cli_call(struct ubus_context *ctx, int argc, char **argv)$/;"	f	file:
ubus_cli_list	ubus/example/cli.c	/^static int ubus_cli_list(struct ubus_context *ctx, int argc, char **argv)$/;"	f	file:
ubus_cli_listen	ubus/example/cli.c	/^static int ubus_cli_listen(struct ubus_context *ctx, int argc, char **argv)$/;"	f	file:
ubus_cli_send	ubus/example/cli.c	/^static int ubus_cli_send(struct ubus_context *ctx, int argc, char **argv)$/;"	f	file:
ubus_client	ubus/ubusd.h	/^struct ubus_client {$/;"	s
ubus_close	uhttpd.h	/^	void (*ubus_close) (struct uh_ubus_state *state);$/;"	m	struct:config
ubus_cmd_cb	ubus/ubusd_proto.c	/^typedef int (*ubus_cmd_cb)(struct ubus_client *cl, struct ubus_msg_buf *ub, struct blob_attr **attr);$/;"	t	file:
ubus_cmp_id	ubus/libubus.c	/^static int ubus_cmp_id(const void *k1, const void *k2, void *ptr)$/;"	f	file:
ubus_cmp_id	ubus/ubusd_id.c	/^static int ubus_cmp_id(const void *k1, const void *k2, void *ptr)$/;"	f	file:
ubus_cmp_str	ubus/ubusd_id.c	/^static int ubus_cmp_str(const void *k1, const void *k2, void *ptr)$/;"	f	file:
ubus_complete_handler_t	ubus/libubus.h	/^typedef void (*ubus_complete_handler_t)(struct ubus_request *req, int ret);$/;"	t
ubus_complete_request	ubus/libubus.c	/^int ubus_complete_request(struct ubus_context *ctx, struct ubus_request *req,$/;"	f
ubus_complete_request_async	ubus/libubus.c	/^void ubus_complete_request_async(struct ubus_context *ctx, struct ubus_request *req)$/;"	f
ubus_connect	ubus/libubus.c	/^struct ubus_context *ubus_connect(const char *path)$/;"	f
ubus_context	ubus/libubus.h	/^struct ubus_context {$/;"	s
ubus_create_obj_method	ubus/ubusd_obj.c	/^static bool ubus_create_obj_method(struct ubus_object_type *type, struct blob_attr *attr)$/;"	f	file:
ubus_create_obj_type	ubus/ubusd_obj.c	/^static struct ubus_object_type *ubus_create_obj_type(struct blob_attr *sig)$/;"	f	file:
ubus_data_handler_t	ubus/libubus.h	/^typedef void (*ubus_data_handler_t)(struct ubus_request *req,$/;"	t
ubus_default_connection_lost	ubus/libubus.c	/^static void ubus_default_connection_lost(struct ubus_context *ctx)$/;"	f	file:
ubus_event_cb	ubus/libubus.c	/^static int ubus_event_cb(struct ubus_context *ctx, struct ubus_object *obj,$/;"	f	file:
ubus_event_handler	ubus/libubus.h	/^struct ubus_event_handler {$/;"	s
ubus_event_handler_t	ubus/libubus.h	/^typedef void (*ubus_event_handler_t)(struct ubus_context *ctx, struct ubus_event_handler *ev,$/;"	t
ubus_find_id	ubus/ubusd_id.h	/^static inline struct ubus_id *ubus_find_id(struct avl_tree *tree, uint32_t id)$/;"	f
ubus_find_request	ubus/libubus.c	/^static struct ubus_request *ubus_find_request(struct ubus_context *ctx, uint32_t seq, uint32_t peer)$/;"	f	file:
ubus_free	ubus/libubus.c	/^void ubus_free(struct ubus_context *ctx)$/;"	f
ubus_free_id	ubus/ubusd_id.h	/^static inline void ubus_free_id(struct avl_tree *tree, struct ubus_id *id)$/;"	f
ubus_get_obj_type	ubus/ubusd_obj.c	/^static struct ubus_object_type *ubus_get_obj_type(uint32_t obj_id)$/;"	f	file:
ubus_get_status	ubus/libubus.c	/^static bool ubus_get_status(struct ubus_msghdr *hdr, int *ret)$/;"	f	file:
ubus_handle_data	ubus/libubus.c	/^static void ubus_handle_data(struct uloop_fd *u, unsigned int events)$/;"	f	file:
ubus_handle_event	ubus/libubus.h	/^static inline void ubus_handle_event(struct ubus_context *ctx)$/;"	f
ubus_handler_t	ubus/libubus.h	/^typedef int (*ubus_handler_t)(struct ubus_context *ctx, struct ubus_object *obj,$/;"	t
ubus_id	ubus/ubusd_id.h	/^struct ubus_id {$/;"	s
ubus_init	uhttpd.h	/^	struct uh_ubus_state * (*ubus_init) (const struct config *conf);$/;"	m	struct:config	typeref:struct:config::ubus_init
ubus_init_id_tree	ubus/ubusd_id.c	/^void ubus_init_id_tree(struct avl_tree *tree)$/;"	f
ubus_init_string_tree	ubus/ubusd_id.c	/^void ubus_init_string_tree(struct avl_tree *tree, bool dup)$/;"	f
ubus_invoke	ubus/libubus.c	/^int ubus_invoke(struct ubus_context *ctx, uint32_t obj, const char *method,$/;"	f
ubus_invoke_async	ubus/libubus.c	/^int ubus_invoke_async(struct ubus_context *ctx, uint32_t obj, const char *method,$/;"	f
ubus_lookup	ubus/libubus.c	/^int ubus_lookup(struct ubus_context *ctx, const char *path,$/;"	f
ubus_lookup_cb	ubus/libubus.c	/^static void ubus_lookup_cb(struct ubus_request *ureq, int type, struct blob_attr *msg)$/;"	f	file:
ubus_lookup_handler_t	ubus/libubus.h	/^typedef void (*ubus_lookup_handler_t)(struct ubus_context *ctx,$/;"	t
ubus_lookup_id	ubus/libubus.c	/^int ubus_lookup_id(struct ubus_context *ctx, const char *path, uint32_t *id)$/;"	f
ubus_lookup_id_cb	ubus/libubus.c	/^static void ubus_lookup_id_cb(struct ubus_request *req, int type, struct blob_attr *msg)$/;"	f	file:
ubus_lookup_request	ubus/libubus.c	/^struct ubus_lookup_request {$/;"	s	file:
ubus_lua__gc	ubus/lua/ubus.c	/^ubus_lua__gc(lua_State *L)$/;"	f	file:
ubus_lua_call	ubus/lua/ubus.c	/^ubus_lua_call(lua_State *L)$/;"	f	file:
ubus_lua_call_cb	ubus/lua/ubus.c	/^ubus_lua_call_cb(struct ubus_request *req, int type, struct blob_attr *msg)$/;"	f	file:
ubus_lua_connect	ubus/lua/ubus.c	/^ubus_lua_connect(lua_State *L)$/;"	f	file:
ubus_lua_connection	ubus/lua/ubus.c	/^struct ubus_lua_connection {$/;"	s	file:
ubus_lua_format_blob	ubus/lua/ubus.c	/^ubus_lua_format_blob(lua_State *L, struct blob_buf *b, bool table)$/;"	f	file:
ubus_lua_format_blob_array	ubus/lua/ubus.c	/^ubus_lua_format_blob_array(lua_State *L, struct blob_buf *b, bool table)$/;"	f	file:
ubus_lua_format_blob_is_array	ubus/lua/ubus.c	/^ubus_lua_format_blob_is_array(lua_State *L)$/;"	f	file:
ubus_lua_objects	ubus/lua/ubus.c	/^ubus_lua_objects(lua_State *L)$/;"	f	file:
ubus_lua_objects_cb	ubus/lua/ubus.c	/^ubus_lua_objects_cb(struct ubus_context *c, struct ubus_object_data *o, void *p)$/;"	f	file:
ubus_lua_parse_blob	ubus/lua/ubus.c	/^ubus_lua_parse_blob(lua_State *L, struct blob_attr *attr, bool table)$/;"	f	file:
ubus_lua_parse_blob_array	ubus/lua/ubus.c	/^ubus_lua_parse_blob_array(lua_State *L, struct blob_attr *attr, int len, bool table)$/;"	f	file:
ubus_lua_signatures	ubus/lua/ubus.c	/^ubus_lua_signatures(lua_State *L)$/;"	f	file:
ubus_lua_signatures_cb	ubus/lua/ubus.c	/^ubus_lua_signatures_cb(struct ubus_context *c, struct ubus_object_data *o, void *p)$/;"	f	file:
ubus_method	ubus/libubus.h	/^struct ubus_method {$/;"	s
ubus_method	ubus/ubusd_obj.h	/^struct ubus_method {$/;"	s
ubus_msg_attr	ubus/ubusmsg.h	/^enum ubus_msg_attr {$/;"	g
ubus_msg_buf	ubus/ubusd.h	/^struct ubus_msg_buf {$/;"	s
ubus_msg_dequeue	ubus/example/ubusd.c	/^static void ubus_msg_dequeue(struct ubus_client *cl)$/;"	f	file:
ubus_msg_enqueue	ubus/example/ubusd.c	/^static void ubus_msg_enqueue(struct ubus_client *cl, struct ubus_msg_buf *ub)$/;"	f	file:
ubus_msg_enqueue	ubus/ubusd.c	/^static void ubus_msg_enqueue(struct ubus_client *cl, struct ubus_msg_buf *ub)$/;"	f	file:
ubus_msg_free	ubus/example/ubusd.c	/^void ubus_msg_free(struct ubus_msg_buf *ub)$/;"	f
ubus_msg_free	ubus/ubusd.c	/^void ubus_msg_free(struct ubus_msg_buf *ub)$/;"	f
ubus_msg_from_blob	ubus/ubusd_proto.c	/^static struct ubus_msg_buf *ubus_msg_from_blob(bool shared)$/;"	f	file:
ubus_msg_head	ubus/example/ubusd.c	/^static struct ubus_msg_buf *ubus_msg_head(struct ubus_client *cl)$/;"	f	file:
ubus_msg_init	ubus/ubusd_proto.c	/^static void ubus_msg_init(struct ubus_msg_buf *ub, uint8_t type, uint16_t seq, uint32_t peer)$/;"	f	file:
ubus_msg_new	ubus/example/ubusd.c	/^struct ubus_msg_buf *ubus_msg_new(void *data, int len, bool shared)$/;"	f
ubus_msg_new	ubus/ubusd.c	/^struct ubus_msg_buf *ubus_msg_new(void *data, int len, bool shared)$/;"	f
ubus_msg_ref	ubus/example/ubusd.c	/^static struct ubus_msg_buf *ubus_msg_ref(struct ubus_msg_buf *ub)$/;"	f	file:
ubus_msg_ref	ubus/ubusd.c	/^static struct ubus_msg_buf *ubus_msg_ref(struct ubus_msg_buf *ub)$/;"	f	file:
ubus_msg_send	ubus/example/ubusd.c	/^void ubus_msg_send(struct ubus_client *cl, struct ubus_msg_buf *ub, bool free)$/;"	f
ubus_msg_send	ubus/ubusd.c	/^void ubus_msg_send(struct ubus_client *cl, struct ubus_msg_buf *ub, bool free)$/;"	f
ubus_msg_status	ubus/ubusmsg.h	/^enum ubus_msg_status {$/;"	g
ubus_msg_type	ubus/ubusmsg.h	/^enum ubus_msg_type {$/;"	g
ubus_msg_unshare	ubus/example/ubusd.c	/^static struct ubus_msg_buf *ubus_msg_unshare(struct ubus_msg_buf *ub)$/;"	f	file:
ubus_msg_unshare	ubus/ubusd.c	/^static struct ubus_msg_buf *ubus_msg_unshare(struct ubus_msg_buf *ub)$/;"	f	file:
ubus_msg_writev	ubus/example/ubusd.c	/^static int ubus_msg_writev(int fd, struct ubus_msg_buf *ub, int offset)$/;"	f	file:
ubus_msg_writev	ubus/ubusd.c	/^static int ubus_msg_writev(int fd, struct ubus_msg_buf *ub, int offset)$/;"	f	file:
ubus_msghdr	ubus/ubusmsg.h	/^struct ubus_msghdr {$/;"	s
ubus_object	ubus/libubus.h	/^struct ubus_object {$/;"	s
ubus_object	ubus/ubusd_obj.h	/^struct ubus_object {$/;"	s
ubus_object_data	ubus/libubus.h	/^struct ubus_object_data {$/;"	s
ubus_object_type	ubus/libubus.h	/^struct ubus_object_type {$/;"	s
ubus_object_type	ubus/ubusd_obj.h	/^struct ubus_object_type {$/;"	s
ubus_parse_msg	ubus/libubus.c	/^static struct blob_attr **ubus_parse_msg(struct blob_attr *msg)$/;"	f	file:
ubus_parse_msg	ubus/ubusd_proto.c	/^static struct blob_attr **ubus_parse_msg(struct blob_attr *msg)$/;"	f	file:
ubus_path	ubus/ubusd.h	/^struct ubus_path {$/;"	s
ubus_pending_data	ubus/libubus.c	/^struct ubus_pending_data {$/;"	s	file:
ubus_pending_invoke	ubus/libubus.c	/^struct ubus_pending_invoke {$/;"	s	file:
ubus_policy	ubus/libubus.c	/^static const struct blob_attr_info ubus_policy[UBUS_ATTR_MAX] = {$/;"	v	typeref:struct:blob_attr_info	file:
ubus_policy	ubus/ubusd_proto.c	/^static const struct blob_attr_info ubus_policy[UBUS_ATTR_MAX] = {$/;"	v	typeref:struct:blob_attr_info	file:
ubus_prefix	uhttpd.h	/^	char *ubus_prefix;$/;"	m	struct:config
ubus_process_invoke	ubus/libubus.c	/^static void ubus_process_invoke(struct ubus_context *ctx, struct ubus_msghdr *hdr)$/;"	f	file:
ubus_process_msg	ubus/libubus.c	/^static void ubus_process_msg(struct ubus_context *ctx, struct ubus_msghdr *hdr)$/;"	f	file:
ubus_process_pending_invoke	ubus/libubus.c	/^static void ubus_process_pending_invoke(struct ubus_context *ctx)$/;"	f	file:
ubus_process_req_data	ubus/libubus.c	/^static void ubus_process_req_data(struct ubus_request *req)$/;"	f	file:
ubus_process_req_status	ubus/libubus.c	/^static int ubus_process_req_status(struct ubus_request *req, struct ubus_msghdr *hdr)$/;"	f	file:
ubus_proto_notify_watch	ubus/ubusd_proto.c	/^void ubus_proto_notify_watch(struct ubus_watch *w)$/;"	f
ubus_push_method_data	ubus/libubus.c	/^static void ubus_push_method_data(const struct ubus_method *m)$/;"	f	file:
ubus_push_object_type	ubus/libubus.c	/^static bool ubus_push_object_type(const struct ubus_object_type *type)$/;"	f	file:
ubus_reconnect	ubus/libubus.c	/^int ubus_reconnect(struct ubus_context *ctx, const char *path)$/;"	f
ubus_refresh_state	ubus/libubus.c	/^ubus_refresh_state(struct ubus_context *ctx)$/;"	f	file:
ubus_register_event_handler	ubus/libubus.c	/^int ubus_register_event_handler(struct ubus_context *ctx,$/;"	f
ubus_register_watch_object	ubus/libubus.c	/^int ubus_register_watch_object(struct ubus_context *ctx, struct ubus_watch_object *w_obj)$/;"	f
ubus_remove_object	ubus/libubus.c	/^int ubus_remove_object(struct ubus_context *ctx, struct ubus_object *obj)$/;"	f
ubus_remove_object_cb	ubus/libubus.c	/^static void ubus_remove_object_cb(struct ubus_request *req, int type, struct blob_attr *msg)$/;"	f	file:
ubus_reply_from_blob	ubus/ubusd_proto.c	/^static struct ubus_msg_buf *ubus_reply_from_blob(struct ubus_msg_buf *ub, bool shared)$/;"	f	file:
ubus_req_complete_cb	ubus/libubus.c	/^static void ubus_req_complete_cb(struct ubus_request *req)$/;"	f	file:
ubus_req_data	ubus/libubus.c	/^static void ubus_req_data(struct ubus_request *req, struct ubus_msghdr *hdr)$/;"	f	file:
ubus_request	ubus/libubus.h	/^struct ubus_request {$/;"	s
ubus_request	uhttpd.h	/^	bool (*ubus_request) (struct client *cl, struct uh_ubus_state *state);$/;"	m	struct:config
ubus_request_data	ubus/libubus.h	/^struct ubus_request_data {$/;"	s
ubus_send_event	ubus/libubus.c	/^int ubus_send_event(struct ubus_context *ctx, const char *id,$/;"	f
ubus_send_msg	ubus/libubus.c	/^static int ubus_send_msg(struct ubus_context *ctx, uint32_t seq,$/;"	f	file:
ubus_send_reply	ubus/libubus.c	/^int ubus_send_reply(struct ubus_context *ctx, struct ubus_request_data *req,$/;"	f
ubus_socket	uhttpd.h	/^	char *ubus_socket;$/;"	m	struct:config
ubus_start_request	ubus/libubus.c	/^static int ubus_start_request(struct ubus_context *ctx, struct ubus_request *req,$/;"	f	file:
ubus_state	uhttpd.h	/^	void *ubus_state;$/;"	m	struct:config
ubus_strerror	ubus/libubus.c	/^const char *ubus_strerror(int error)$/;"	f
ubus_sync_req_cb	ubus/libubus.c	/^static void ubus_sync_req_cb(struct ubus_request *req, int ret)$/;"	f	file:
ubus_sync_req_cb	ubus/libubus.c	/^struct ubus_sync_req_cb {$/;"	s	file:
ubus_sync_req_timeout_cb	ubus/libubus.c	/^static void ubus_sync_req_timeout_cb(struct uloop_timeout *timeout)$/;"	f	file:
ubus_unref_object_type	ubus/ubusd_obj.c	/^static void ubus_unref_object_type(struct ubus_object_type *type)$/;"	f	file:
ubus_unregister_event_handler	ubus/libubus.h	/^static inline int ubus_unregister_event_handler(struct ubus_context *ctx,$/;"	f
ubus_validate_hdr	ubus/libubus.c	/^static bool ubus_validate_hdr(struct ubus_msghdr *hdr)$/;"	f	file:
ubus_watch	ubus/ubusd_obj.h	/^struct ubus_watch {$/;"	s
ubus_watch_cb	ubus/libubus.c	/^static int ubus_watch_cb(struct ubus_context *ctx, struct ubus_object *obj,$/;"	f	file:
ubus_watch_free	ubus/ubusd_obj.c	/^void ubus_watch_free(struct ubus_watch *w)$/;"	f
ubus_watch_handler_t	ubus/libubus.h	/^typedef void (*ubus_watch_handler_t)(struct ubus_context *ctx, struct ubus_watch_object *w,$/;"	t
ubus_watch_new	ubus/ubusd_obj.c	/^void ubus_watch_new(struct ubus_object *obj, struct ubus_object *target, const char *method)$/;"	f
ubus_watch_object	ubus/libubus.h	/^struct ubus_watch_object {$/;"	s
ubus_watch_object_add	ubus/libubus.c	/^int ubus_watch_object_add(struct ubus_context *ctx, struct ubus_watch_object *obj, uint32_t id)$/;"	f
ubus_watch_object_remove	ubus/libubus.c	/^int ubus_watch_object_remove(struct ubus_context *ctx, struct ubus_watch_object *obj, uint32_t id)$/;"	f
ubusd_alloc_event_pattern	ubus/ubusd_event.c	/^static int ubusd_alloc_event_pattern(struct ubus_client *cl, struct blob_attr *msg)$/;"	f	file:
ubusd_create_event_from_msg	ubus/ubusd_event.c	/^ubusd_create_event_from_msg(void *priv, const char *id)$/;"	f	file:
ubusd_create_object	ubus/ubusd_obj.c	/^struct ubus_object *ubusd_create_object(struct ubus_client *cl, struct blob_attr **attr)$/;"	f
ubusd_create_object_event_msg	ubus/ubusd_event.c	/^ubusd_create_object_event_msg(void *priv, const char *id)$/;"	f	file:
ubusd_create_object_internal	ubus/ubusd_obj.c	/^struct ubus_object *ubusd_create_object_internal(struct ubus_object_type *type, uint32_t id)$/;"	f
ubusd_delete_event_source	ubus/ubusd_event.c	/^static void ubusd_delete_event_source(struct event_source *evs)$/;"	f	file:
ubusd_event_cleanup_object	ubus/ubusd_event.c	/^void ubusd_event_cleanup_object(struct ubus_object *obj)$/;"	f
ubusd_event_init	ubus/ubusd_event.c	/^void ubusd_event_init(void)$/;"	f
ubusd_event_recv	ubus/ubusd_event.c	/^static int ubusd_event_recv(struct ubus_client *cl, const char *method, struct blob_attr *msg)$/;"	f	file:
ubusd_find_object	ubus/ubusd_obj.h	/^static inline struct ubus_object *ubusd_find_object(uint32_t objid)$/;"	f
ubusd_forward_event	ubus/ubusd_event.c	/^static int ubusd_forward_event(struct ubus_client *cl, struct blob_attr *msg)$/;"	f	file:
ubusd_free_object	ubus/ubusd_obj.c	/^void ubusd_free_object(struct ubus_object *obj)$/;"	f
ubusd_get_client_by_id	ubus/ubusd_proto.c	/^static struct ubus_client *ubusd_get_client_by_id(uint32_t id)$/;"	f	file:
ubusd_handle_add_object	ubus/ubusd_proto.c	/^static int ubusd_handle_add_object(struct ubus_client *cl, struct ubus_msg_buf *ub, struct blob_attr **attr)$/;"	f	file:
ubusd_handle_add_watch	ubus/ubusd_proto.c	/^static int ubusd_handle_add_watch(struct ubus_client *cl, struct ubus_msg_buf *ub, struct blob_attr **attr)$/;"	f	file:
ubusd_handle_invoke	ubus/ubusd_proto.c	/^static int ubusd_handle_invoke(struct ubus_client *cl, struct ubus_msg_buf *ub, struct blob_attr **attr)$/;"	f	file:
ubusd_handle_lookup	ubus/ubusd_proto.c	/^static int ubusd_handle_lookup(struct ubus_client *cl, struct ubus_msg_buf *ub, struct blob_attr **attr)$/;"	f	file:
ubusd_handle_remove_object	ubus/ubusd_proto.c	/^static int ubusd_handle_remove_object(struct ubus_client *cl, struct ubus_msg_buf *ub, struct blob_attr **attr)$/;"	f	file:
ubusd_handle_remove_watch	ubus/ubusd_proto.c	/^static int ubusd_handle_remove_watch(struct ubus_client *cl, struct ubus_msg_buf *ub, struct blob_attr **attr)$/;"	f	file:
ubusd_handle_response	ubus/ubusd_proto.c	/^static int ubusd_handle_response(struct ubus_client *cl, struct ubus_msg_buf *ub, struct blob_attr **attr)$/;"	f	file:
ubusd_obj_init	ubus/ubusd_obj.c	/^static void __init ubusd_obj_init(void)$/;"	f	file:
ubusd_proto_free_client	ubus/ubusd_proto.c	/^void ubusd_proto_free_client(struct ubus_client *cl)$/;"	f
ubusd_proto_init	ubus/ubusd_proto.c	/^static void __init ubusd_proto_init(void)$/;"	f	file:
ubusd_proto_new_client	ubus/ubusd_proto.c	/^struct ubus_client *ubusd_proto_new_client(int fd, uloop_fd_handler cb)$/;"	f
ubusd_proto_receive_message	ubus/ubusd_proto.c	/^void ubusd_proto_receive_message(struct ubus_client *cl, struct ubus_msg_buf *ub)$/;"	f
ubusd_send_event	ubus/ubusd_event.c	/^static int ubusd_send_event(struct ubus_client *cl, const char *id,$/;"	f	file:
ubusd_send_event_msg	ubus/ubusd_event.c	/^static void ubusd_send_event_msg(struct ubus_msg_buf **ub, struct ubus_client *cl,$/;"	f	file:
ubusd_send_hello	ubus/ubusd_proto.c	/^static bool ubusd_send_hello(struct ubus_client *cl)$/;"	f	file:
ubusd_send_obj	ubus/ubusd_proto.c	/^static void ubusd_send_obj(struct ubus_client *cl, struct ubus_msg_buf *ub, struct ubus_object *obj)$/;"	f	file:
ubusd_send_obj_event	ubus/ubusd_event.c	/^void ubusd_send_obj_event(struct ubus_object *obj, bool add)$/;"	f
ubusd_send_pong	ubus/ubusd_proto.c	/^static int ubusd_send_pong(struct ubus_client *cl, struct ubus_msg_buf *ub, struct blob_attr **attr)$/;"	f	file:
ucs_char	json/json_tokener.h	/^  unsigned int ucs_char;$/;"	m	struct:json_tokener
uh_auth_add	uhttpd-utils.c	/^struct auth_realm * uh_auth_add(char *path, char *user, char *pass)$/;"	f
uh_auth_check	uhttpd-utils.c	/^int uh_auth_check(struct client *cl, struct http_request *req,$/;"	f
uh_b64decode	uhttpd-utils.c	/^int uh_b64decode(char *buf, int blen, const unsigned char *src, int slen)$/;"	f
uh_cgi_header_lookup	uhttpd-cgi.c	/^static char * uh_cgi_header_lookup(struct http_response *res,$/;"	f	file:
uh_cgi_header_parse	uhttpd-cgi.c	/^uh_cgi_header_parse(struct http_response *res, char *buf, int len, int *off)$/;"	f	file:
uh_cgi_request	uhttpd-cgi.c	/^bool uh_cgi_request(struct client *cl, struct path_info *pi,$/;"	f
uh_cgi_shutdown	uhttpd-cgi.c	/^static void uh_cgi_shutdown(struct uh_cgi_state *state)$/;"	f	file:
uh_cgi_socket_cb	uhttpd-cgi.c	/^static bool uh_cgi_socket_cb(struct client *cl)$/;"	f	file:
uh_cgi_state	uhttpd-cgi.h	/^struct uh_cgi_state {$/;"	s
uh_child_cb	uhttpd.c	/^static void uh_child_cb(struct uloop_process *p, int rv)$/;"	f	file:
uh_client_add	uhttpd-utils.c	/^struct client * uh_client_add(int sock, struct listener *serv,$/;"	f
uh_client_cb	uhttpd.c	/^static void uh_client_cb(struct client *cl, unsigned int events)$/;"	f	file:
uh_client_destroy	uhttpd-utils.c	/^void uh_client_destroy(struct client *cl)$/;"	f
uh_client_detach	uhttpd-utils.c	/^struct client *uh_client_detach(struct client *cl)$/;"	f
uh_client_error	uhttpd-utils.h	141;"	d
uh_client_lookup	uhttpd-utils.c	/^struct client * uh_client_lookup(int sock)$/;"	f
uh_client_remove	uhttpd-utils.c	/^void uh_client_remove(struct client *cl)$/;"	f
uh_client_shutdown	uhttpd-utils.c	/^void uh_client_shutdown(struct client *cl)$/;"	f
uh_clients	uhttpd-utils.c	/^static struct client *uh_clients = NULL;$/;"	v	typeref:struct:client	file:
uh_config_parse	uhttpd.c	/^static void uh_config_parse(struct config *conf)$/;"	f	file:
uh_dispatch_request	uhttpd.c	/^uh_dispatch_request(struct client *cl, struct http_request *req, int *detached)$/;"	f	file:
uh_file_date2unix	uhttpd-file.c	/^static time_t uh_file_date2unix(const char *date)$/;"	f	file:
uh_file_dirlist	uhttpd-file.c	/^static void uh_file_dirlist(struct client *cl, struct path_info *pi)$/;"	f	file:
uh_file_header_lookup	uhttpd-file.c	/^static char * uh_file_header_lookup(struct client *cl, const char *name)$/;"	f	file:
uh_file_if_match	uhttpd-file.c	/^static int uh_file_if_match(struct client *cl, struct stat *s, int *ok)$/;"	f	file:
uh_file_if_modified_since	uhttpd-file.c	/^static int uh_file_if_modified_since(struct client *cl, struct stat *s, int *ok)$/;"	f	file:
uh_file_if_none_match	uhttpd-file.c	/^static int uh_file_if_none_match(struct client *cl, struct stat *s, int *ok)$/;"	f	file:
uh_file_if_range	uhttpd-file.c	/^static int uh_file_if_range(struct client *cl, struct stat *s, int *ok)$/;"	f	file:
uh_file_if_unmodified_since	uhttpd-file.c	/^static int uh_file_if_unmodified_since(struct client *cl, struct stat *s,$/;"	f	file:
uh_file_mime_lookup	uhttpd-file.c	/^static const char * uh_file_mime_lookup(const char *path)$/;"	f	file:
uh_file_mktag	uhttpd-file.c	/^static const char * uh_file_mktag(struct stat *s)$/;"	f	file:
uh_file_range	uhttpd-file.c	/^static int uh_file_range(struct client *cl, struct stat *s, int *ok, int fd)$/;"	f	file:
uh_file_request	uhttpd-file.c	/^bool uh_file_request(struct client *cl, struct path_info *pi, int *detached)$/;"	f
uh_file_response_200	uhttpd-file.c	/^static int uh_file_response_200(struct client *cl, struct stat *s)$/;"	f	file:
uh_file_response_206	uhttpd-file.c	/^static int uh_file_response_206(struct client *cl, struct stat *s)$/;"	f	file:
uh_file_response_304	uhttpd-file.c	/^static int uh_file_response_304(struct client *cl, struct stat *s)$/;"	f	file:
uh_file_response_412	uhttpd-file.c	/^static int uh_file_response_412(struct client *cl)$/;"	f	file:
uh_file_response_ok_hdrs	uhttpd-file.c	/^static int uh_file_response_ok_hdrs(struct client *cl, struct stat *s)$/;"	f	file:
uh_file_scandir_filter_dir	uhttpd-file.c	/^static int uh_file_scandir_filter_dir(const struct dirent *e)$/;"	f	file:
uh_file_unix2date	uhttpd-file.c	/^static char * uh_file_unix2date(time_t ts)$/;"	f	file:
uh_http_header_check_method	uhttpd.c	/^static bool uh_http_header_check_method(const char *buf, ssize_t rlen)$/;"	f	file:
uh_http_header_parse	uhttpd.c	/^static struct http_request * uh_http_header_parse(struct client *cl,$/;"	f	file:
uh_http_header_recv	uhttpd.c	/^static struct http_request * uh_http_header_recv(struct client *cl)$/;"	f	file:
uh_http_response	uhttpd-utils.h	92;"	d
uh_http_send	uhttpd-utils.c	/^int uh_http_send(struct client *cl, struct http_request *req,$/;"	f
uh_http_sendc	uhttpd-utils.c	/^int uh_http_sendc(struct client *cl, const char *data, int len)$/;"	f
uh_http_sendf	uhttpd-utils.c	/^int uh_http_sendf(struct client *cl, struct http_request *req,$/;"	f
uh_http_sendhf	uhttpd-utils.c	/^int uh_http_sendhf(struct client *cl, int code, const char *summary,$/;"	f
uh_index_add	uhttpd-utils.c	/^struct index_file * uh_index_add(const char *filename)$/;"	f
uh_index_files	uhttpd-utils.c	/^struct index_file *uh_index_files = NULL;$/;"	v	typeref:struct:index_file
uh_initlua	uhttpd.c	/^static int uh_initlua(struct config *conf)$/;"	f	file:
uh_inittls	uhttpd.c	/^static int uh_inittls(struct config *conf)$/;"	f	file:
uh_initubus	uhttpd.c	/^static int uh_initubus(struct config *conf)$/;"	f	file:
uh_interpreter_add	uhttpd-utils.c	/^struct interpreter * uh_interpreter_add(const char *extn, const char *path)$/;"	f
uh_interpreter_lookup	uhttpd-utils.c	/^struct interpreter * uh_interpreter_lookup(const char *path)$/;"	f
uh_interpreters	uhttpd-utils.c	/^static struct interpreter *uh_interpreters = NULL;$/;"	v	typeref:struct:interpreter	file:
uh_kill9_cb	uhttpd.c	/^static void uh_kill9_cb(struct uloop_timeout *t)$/;"	f	file:
uh_listener_add	uhttpd-utils.c	/^struct listener * uh_listener_add(int sock, struct config *conf)$/;"	f
uh_listener_cb	uhttpd.c	/^static void uh_listener_cb(struct uloop_fd *u, unsigned int events)$/;"	f	file:
uh_listener_lookup	uhttpd-utils.c	/^struct listener * uh_listener_lookup(int sock)$/;"	f
uh_listeners	uhttpd-utils.c	/^static struct listener *uh_listeners = NULL;$/;"	v	typeref:struct:listener	file:
uh_lua_close	uhttpd-lua.c	/^void uh_lua_close(lua_State *L)$/;"	f
uh_lua_init	uhttpd-lua.c	/^lua_State * uh_lua_init(const struct config *conf)$/;"	f
uh_lua_recv	uhttpd-lua.c	/^static int uh_lua_recv(lua_State *L)$/;"	f	file:
uh_lua_request	uhttpd-lua.c	/^bool uh_lua_request(struct client *cl, lua_State *L)$/;"	f
uh_lua_send	uhttpd-lua.c	/^static int uh_lua_send(lua_State *L)$/;"	f	file:
uh_lua_send_common	uhttpd-lua.c	/^static int uh_lua_send_common(lua_State *L, bool chunked)$/;"	f	file:
uh_lua_sendc	uhttpd-lua.c	/^static int uh_lua_sendc(lua_State *L)$/;"	f	file:
uh_lua_shutdown	uhttpd-lua.c	/^static void uh_lua_shutdown(struct uh_lua_state *state)$/;"	f	file:
uh_lua_socket_cb	uhttpd-lua.c	/^static bool uh_lua_socket_cb(struct client *cl)$/;"	f	file:
uh_lua_state	uhttpd-lua.h	/^struct uh_lua_state {$/;"	s
uh_lua_str2str	uhttpd-lua.c	/^static int uh_lua_str2str(lua_State *L, int (*xlate_func) (char *, int, const char *, int))$/;"	f	file:
uh_lua_urldecode	uhttpd-lua.c	/^static int uh_lua_urldecode(lua_State *L)$/;"	f	file:
uh_lua_urlencode	uhttpd-lua.c	/^static int uh_lua_urlencode(lua_State *L)$/;"	f	file:
uh_mime_types	uhttpd-mimetypes.h	/^static struct mimetype uh_mime_types[] = {$/;"	v	typeref:struct:mimetype
uh_path_lookup	uhttpd-utils.c	/^struct path_info * uh_path_lookup(struct client *cl, const char *url)$/;"	f
uh_path_match	uhttpd.c	/^static int uh_path_match(const char *prefix, const char *url)$/;"	f	file:
uh_raw_recv	uhttpd-utils.c	/^int uh_raw_recv(int fd, char *buf, int len, int sec)$/;"	f
uh_raw_send	uhttpd-utils.c	/^int uh_raw_send(int fd, const char *buf, int len, int sec)$/;"	f
uh_realms	uhttpd-utils.c	/^static struct auth_realm *uh_realms = NULL;$/;"	v	typeref:struct:auth_realm	file:
uh_rpipe_cb	uhttpd.c	/^static void uh_rpipe_cb(struct uloop_fd *u, unsigned int events)$/;"	f	file:
uh_sigterm	uhttpd.c	/^static void uh_sigterm(int sig)$/;"	f	file:
uh_socket_bind	uhttpd.c	/^static int uh_socket_bind(const char *host, const char *port,$/;"	f	file:
uh_socket_cb	uhttpd.c	/^static void uh_socket_cb(struct uloop_fd *u, unsigned int events)$/;"	f	file:
uh_socket_wait	uhttpd-utils.c	/^bool uh_socket_wait(int fd, int sec, bool write)$/;"	f
uh_tcp_recv	uhttpd-utils.c	/^int uh_tcp_recv(struct client *cl, char *buf, int len)$/;"	f
uh_tcp_recv_lowlevel	uhttpd-utils.c	/^int uh_tcp_recv_lowlevel(struct client *cl, char *buf, int len)$/;"	f
uh_tcp_send	uhttpd-utils.c	/^int uh_tcp_send(struct client *cl, const char *buf, int len)$/;"	f
uh_tcp_send_lowlevel	uhttpd-utils.c	/^int uh_tcp_send_lowlevel(struct client *cl, const char *buf, int len)$/;"	f
uh_timeout_cb	uhttpd.c	/^static void uh_timeout_cb(struct uloop_timeout *t)$/;"	f	file:
uh_tls_client_accept	uhttpd-tls.c	/^int uh_tls_client_accept(struct client *c)$/;"	f
uh_tls_client_close	uhttpd-tls.c	/^void uh_tls_client_close(struct client *c)$/;"	f
uh_tls_client_recv	uhttpd-tls.c	/^int uh_tls_client_recv(struct client *c, char *buf, int len)$/;"	f
uh_tls_client_send	uhttpd-tls.c	/^int uh_tls_client_send(struct client *c, const char *buf, int len)$/;"	f
uh_tls_ctx_cert	uhttpd-tls.c	/^int uh_tls_ctx_cert(SSL_CTX *c, const char *file)$/;"	f
uh_tls_ctx_free	uhttpd-tls.c	/^void uh_tls_ctx_free(struct listener *l)$/;"	f
uh_tls_ctx_init	uhttpd-tls.c	/^SSL_CTX * uh_tls_ctx_init(void)$/;"	f
uh_tls_ctx_key	uhttpd-tls.c	/^int uh_tls_ctx_key(SSL_CTX *c, const char *file)$/;"	f
uh_ubus_avlcmp	uhttpd-ubus.c	/^uh_ubus_avlcmp(const void *k1, const void *k2, void *ptr)$/;"	f	file:
uh_ubus_close	uhttpd-ubus.c	/^uh_ubus_close(struct uh_ubus_state *state)$/;"	f
uh_ubus_handle_create	uhttpd-ubus.c	/^uh_ubus_handle_create(struct ubus_context *ctx, struct ubus_object *obj,$/;"	f	file:
uh_ubus_handle_destroy	uhttpd-ubus.c	/^uh_ubus_handle_destroy(struct ubus_context *ctx, struct ubus_object *obj,$/;"	f	file:
uh_ubus_handle_get	uhttpd-ubus.c	/^uh_ubus_handle_get(struct ubus_context *ctx, struct ubus_object *obj,$/;"	f	file:
uh_ubus_handle_grant	uhttpd-ubus.c	/^uh_ubus_handle_grant(struct ubus_context *ctx, struct ubus_object *obj,$/;"	f	file:
uh_ubus_handle_list	uhttpd-ubus.c	/^uh_ubus_handle_list(struct ubus_context *ctx, struct ubus_object *obj,$/;"	f	file:
uh_ubus_handle_revoke	uhttpd-ubus.c	/^uh_ubus_handle_revoke(struct ubus_context *ctx, struct ubus_object *obj,$/;"	f	file:
uh_ubus_handle_set	uhttpd-ubus.c	/^uh_ubus_handle_set(struct ubus_context *ctx, struct ubus_object *obj,$/;"	f	file:
uh_ubus_handle_unset	uhttpd-ubus.c	/^uh_ubus_handle_unset(struct ubus_context *ctx, struct ubus_object *obj,$/;"	f	file:
uh_ubus_init	uhttpd-ubus.c	/^uh_ubus_init(const struct config *conf)$/;"	f
uh_ubus_random	uhttpd-ubus.c	/^uh_ubus_random(char *dest)$/;"	f	file:
uh_ubus_request	uhttpd-ubus.c	/^uh_ubus_request(struct client *cl, struct uh_ubus_state *state)$/;"	f
uh_ubus_request_cb	uhttpd-ubus.c	/^uh_ubus_request_cb(struct ubus_request *req, int type, struct blob_attr *msg)$/;"	f	file:
uh_ubus_request_data	uhttpd-ubus.h	/^struct uh_ubus_request_data {$/;"	s
uh_ubus_request_parse_post	uhttpd-ubus.c	/^uh_ubus_request_parse_post(struct client *cl, int len, struct blob_buf *b)$/;"	f	file:
uh_ubus_request_parse_url	uhttpd-ubus.c	/^uh_ubus_request_parse_url(struct client *cl, char **sid, char **obj, char **fun)$/;"	f	file:
uh_ubus_session	uhttpd-ubus.h	/^struct uh_ubus_session {$/;"	s
uh_ubus_session_acl	uhttpd-ubus.h	/^struct uh_ubus_session_acl {$/;"	s
uh_ubus_session_cleanup	uhttpd-ubus.c	/^uh_ubus_session_cleanup(struct uh_ubus_state *state)$/;"	f	file:
uh_ubus_session_create	uhttpd-ubus.c	/^uh_ubus_session_create(struct uh_ubus_state *state, int timeout)$/;"	f	file:
uh_ubus_session_data	uhttpd-ubus.h	/^struct uh_ubus_session_data {$/;"	s
uh_ubus_session_destroy	uhttpd-ubus.c	/^uh_ubus_session_destroy(struct uh_ubus_state *state,$/;"	f	file:
uh_ubus_session_dump	uhttpd-ubus.c	/^uh_ubus_session_dump(struct uh_ubus_session *ses,$/;"	f	file:
uh_ubus_session_dump_acls	uhttpd-ubus.c	/^uh_ubus_session_dump_acls(struct uh_ubus_session *ses, struct blob_buf *b)$/;"	f	file:
uh_ubus_session_dump_data	uhttpd-ubus.c	/^uh_ubus_session_dump_data(struct uh_ubus_session *ses, struct blob_buf *b)$/;"	f	file:
uh_ubus_session_get	uhttpd-ubus.c	/^uh_ubus_session_get(struct uh_ubus_state *state, const char *id)$/;"	f	file:
uh_ubus_session_grant	uhttpd-ubus.c	/^uh_ubus_session_grant(struct uh_ubus_session *ses, struct ubus_context *ctx,$/;"	f	file:
uh_ubus_session_revoke	uhttpd-ubus.c	/^uh_ubus_session_revoke(struct uh_ubus_session *ses, struct ubus_context *ctx,$/;"	f	file:
uh_ubus_state	uhttpd-ubus.h	/^struct uh_ubus_state {$/;"	s
uh_ubus_strmatch	uhttpd-ubus.c	/^uh_ubus_strmatch(const char *str, const char *pat)$/;"	f	file:
uh_ufd_add	uhttpd-utils.c	/^void uh_ufd_add(struct uloop_fd *u, uloop_fd_handler h, unsigned int ev)$/;"	f
uh_ufd_remove	uhttpd-utils.c	/^void uh_ufd_remove(struct uloop_fd *u, int doclose)$/;"	f
uh_urldecode	uhttpd-utils.c	/^int uh_urldecode(char *buf, int blen, const char *src, int slen)$/;"	f
uh_urlencode	uhttpd-utils.c	/^int uh_urlencode(char *buf, int blen, const char *src, int slen)$/;"	f
ul_init	libubox/lua/uloop.c	/^static int ul_init(lua_State *L)$/;"	f	file:
ul_process	libubox/lua/uloop.c	/^static int ul_process(lua_State *L)$/;"	f	file:
ul_process_cb	libubox/lua/uloop.c	/^static void ul_process_cb(struct uloop_process *p, int ret)$/;"	f	file:
ul_run	libubox/lua/uloop.c	/^static int ul_run(lua_State *L)$/;"	f	file:
ul_timer	libubox/lua/uloop.c	/^static int ul_timer(lua_State *L)$/;"	f	file:
ul_timer_cb	libubox/lua/uloop.c	/^static void ul_timer_cb(struct uloop_timeout *t)$/;"	f	file:
ul_timer_free	libubox/lua/uloop.c	/^static int ul_timer_free(lua_State *L)$/;"	f	file:
ul_timer_set	libubox/lua/uloop.c	/^static int ul_timer_set(lua_State *L)$/;"	f	file:
uloop_cancelled	libubox/uloop.c	/^bool uloop_cancelled = false;$/;"	v
uloop_clear_processes	libubox/uloop.c	/^static void uloop_clear_processes(void)$/;"	f	file:
uloop_clear_timeouts	libubox/uloop.c	/^static void uloop_clear_timeouts(void)$/;"	f	file:
uloop_done	libubox/uloop.c	/^void uloop_done(void)$/;"	f
uloop_end	libubox/uloop.h	/^static inline void uloop_end(void)$/;"	f
uloop_fd	libubox/uloop.h	/^struct uloop_fd$/;"	s
uloop_fd_add	libubox/uloop.c	/^int uloop_fd_add(struct uloop_fd *sock, unsigned int flags)$/;"	f
uloop_fd_delete	libubox/uloop.c	/^int uloop_fd_delete(struct uloop_fd *sock)$/;"	f
uloop_fd_handler	libubox/uloop.h	/^typedef void (*uloop_fd_handler)(struct uloop_fd *u, unsigned int events);$/;"	t
uloop_func	libubox/lua/uloop.c	/^static luaL_reg uloop_func[] = {$/;"	v	file:
uloop_get_next_timeout	libubox/uloop.c	/^static int uloop_get_next_timeout(struct timeval *tv)$/;"	f	file:
uloop_handle_processes	libubox/uloop.c	/^static void uloop_handle_processes(void)$/;"	f	file:
uloop_handle_sigchld	libubox/uloop.c	/^bool uloop_handle_sigchld = true;$/;"	v
uloop_handle_sigint	libubox/uloop.c	/^static void uloop_handle_sigint(int signo)$/;"	f	file:
uloop_init	libubox/uloop.c	/^int uloop_init(void)$/;"	f
uloop_process	libubox/uloop.h	/^struct uloop_process$/;"	s
uloop_process_add	libubox/uloop.c	/^int uloop_process_add(struct uloop_process *p)$/;"	f
uloop_process_delete	libubox/uloop.c	/^int uloop_process_delete(struct uloop_process *p)$/;"	f
uloop_process_handler	libubox/uloop.h	/^typedef void (*uloop_process_handler)(struct uloop_process *c, int ret);$/;"	t
uloop_process_timeouts	libubox/uloop.c	/^static void uloop_process_timeouts(struct timeval *tv)$/;"	f	file:
uloop_run	libubox/uloop.c	/^void uloop_run(void)$/;"	f
uloop_run_events	libubox/uloop.c	/^static void uloop_run_events(int timeout)$/;"	f	file:
uloop_setup_signals	libubox/uloop.c	/^static void uloop_setup_signals(void)$/;"	f	file:
uloop_sigchld	libubox/uloop.c	/^static void uloop_sigchld(int signo)$/;"	f	file:
uloop_timeout	libubox/uloop.h	/^struct uloop_timeout$/;"	s
uloop_timeout_add	libubox/uloop.c	/^int uloop_timeout_add(struct uloop_timeout *timeout)$/;"	f
uloop_timeout_cancel	libubox/uloop.c	/^int uloop_timeout_cancel(struct uloop_timeout *timeout)$/;"	f
uloop_timeout_handler	libubox/uloop.h	/^typedef void (*uloop_timeout_handler)(struct uloop_timeout *t);$/;"	t
uloop_timeout_set	libubox/uloop.c	/^int uloop_timeout_set(struct uloop_timeout *timeout, int msecs)$/;"	f
update	libubox/vlist.h	/^	vlist_update_cb update;$/;"	m	struct:vlist_tree
url	uhttpd.h	/^	char *url;$/;"	m	struct:http_request
usage	libubox/examples/ustream-example.c	/^static int usage(const char *name)$/;"	f	file:
usage	libubox/jshn/jshn.c	/^static int usage(const char *progname)$/;"	f	file:
usage	ubus/example/cli.c	/^static int usage(const char *prog)$/;"	f	file:
usage	ubus/example/ubusd.c	/^static int usage(const char *progname)$/;"	f	file:
user	uhttpd.h	/^	char user[32];$/;"	m	struct:auth_realm
usock	libubox/usock.c	/^int usock(int type, const char *host, const char *service) {$/;"	f
usock_connect	libubox/usock.c	/^static int usock_connect(struct sockaddr *sa, int sa_len, int family, int socktype, bool server)$/;"	f	file:
usock_inet	libubox/usock.c	/^static int usock_inet(int type, const char *host, const char *service, int socktype, bool server)$/;"	f	file:
usock_set_flags	libubox/usock.c	/^static void usock_set_flags(int sock, unsigned int type)$/;"	f	file:
usock_unix	libubox/usock.c	/^static int usock_unix(const char *host, int socktype, bool server)$/;"	f	file:
ustream	libubox/ustream.h	/^struct ustream {$/;"	s
ustream_add_buf	libubox/ustream.c	/^static void ustream_add_buf(struct ustream_buf_list *l, struct ustream_buf *buf)$/;"	f	file:
ustream_alloc_default	libubox/ustream.c	/^static int ustream_alloc_default(struct ustream *s, struct ustream_buf_list *l)$/;"	f	file:
ustream_buf	libubox/ustream.h	/^struct ustream_buf {$/;"	s
ustream_buf_list	libubox/ustream.h	/^struct ustream_buf_list {$/;"	s
ustream_can_alloc	libubox/ustream.c	/^static bool ustream_can_alloc(struct ustream_buf_list *l)$/;"	f	file:
ustream_consume	libubox/ustream.c	/^void ustream_consume(struct ustream *s, int len)$/;"	f
ustream_fd	libubox/ustream.h	/^struct ustream_fd {$/;"	s
ustream_fd_free	libubox/ustream-fd.c	/^static void ustream_fd_free(struct ustream *s)$/;"	f	file:
ustream_fd_init	libubox/ustream-fd.c	/^void ustream_fd_init(struct ustream_fd *sf, int fd)$/;"	f
ustream_fd_poll	libubox/ustream-fd.c	/^static bool ustream_fd_poll(struct ustream *s)$/;"	f	file:
ustream_fd_read_pending	libubox/ustream-fd.c	/^static void ustream_fd_read_pending(struct ustream_fd *sf, bool *more)$/;"	f	file:
ustream_fd_set_uloop	libubox/ustream-fd.c	/^static void ustream_fd_set_uloop(struct ustream *s)$/;"	f	file:
ustream_fd_write	libubox/ustream-fd.c	/^static int ustream_fd_write(struct ustream *s, const char *buf, int buflen, bool more)$/;"	f	file:
ustream_fill_read	libubox/ustream.c	/^void ustream_fill_read(struct ustream *s, int len)$/;"	f
ustream_fixup_string	libubox/ustream.c	/^static void ustream_fixup_string(struct ustream *s, struct ustream_buf *buf)$/;"	f	file:
ustream_free	libubox/ustream.c	/^void ustream_free(struct ustream *s)$/;"	f
ustream_free_buf	libubox/ustream.c	/^static void ustream_free_buf(struct ustream_buf_list *l, struct ustream_buf *buf)$/;"	f	file:
ustream_free_buffers	libubox/ustream.c	/^static void ustream_free_buffers(struct ustream_buf_list *l)$/;"	f	file:
ustream_get_read_buf	libubox/ustream.c	/^char *ustream_get_read_buf(struct ustream *s, int *buflen)$/;"	f
ustream_init_buf	libubox/ustream.c	/^static void ustream_init_buf(struct ustream_buf *buf, int len)$/;"	f	file:
ustream_init_defaults	libubox/ustream.c	/^void ustream_init_defaults(struct ustream *s)$/;"	f
ustream_poll	libubox/ustream.h	/^static inline bool ustream_poll(struct ustream *s)$/;"	f
ustream_prepare_buf	libubox/ustream.c	/^static bool ustream_prepare_buf(struct ustream *s, struct ustream_buf_list *l, int len)$/;"	f	file:
ustream_printf	libubox/ustream.c	/^int ustream_printf(struct ustream *s, const char *format, ...)$/;"	f
ustream_read_blocked	libubox/ustream.h	/^static inline bool ustream_read_blocked(struct ustream *s)$/;"	f
ustream_reserve	libubox/ustream.c	/^char *ustream_reserve(struct ustream *s, int len, int *maxlen)$/;"	f
ustream_set_read_blocked	libubox/ustream.c	/^void ustream_set_read_blocked(struct ustream *s, bool set)$/;"	f
ustream_should_move	libubox/ustream.c	/^static bool ustream_should_move(struct ustream_buf_list *l, struct ustream_buf *buf, int len)$/;"	f	file:
ustream_state_change	libubox/ustream.h	/^static inline void ustream_state_change(struct ustream *s)$/;"	f
ustream_state_change_cb	libubox/ustream.c	/^static void ustream_state_change_cb(struct uloop_timeout *t)$/;"	f	file:
ustream_uloop_cb	libubox/ustream-fd.c	/^static void ustream_uloop_cb(struct uloop_fd *fd, unsigned int events)$/;"	f	file:
ustream_vprintf	libubox/ustream.c	/^int ustream_vprintf(struct ustream *s, const char *format, va_list arg)$/;"	f
ustream_write	libubox/ustream.c	/^int ustream_write(struct ustream *s, const char *data, int len, bool more)$/;"	f
ustream_write_buffered	libubox/ustream.c	/^static int ustream_write_buffered(struct ustream *s, const char *data, int len, int wr)$/;"	f	file:
ustream_write_error	libubox/ustream.c	/^static void ustream_write_error(struct ustream *s)$/;"	f	file:
ustream_write_pending	libubox/ustream.c	/^bool ustream_write_pending(struct ustream *s)$/;"	f
v	json/linkhash.h	/^	const void *v;$/;"	m	struct:lh_entry
val	json/json_object_private.h	/^	struct json_object *val;$/;"	m	struct:json_object_iter	typeref:struct:json_object_iter::json_object
validate	libubox/blob.h	/^	bool (*validate)(const struct blob_attr_info *, struct blob_attr *);$/;"	m	struct:blob_attr_info
vasprintf	json/printbuf.c	/^static int vasprintf(char **buf, const char *fmt, va_list ap)$/;"	f	file:
verbose	ubus/example/cli.c	/^static int verbose = 0;$/;"	v	file:
version	libubox/vlist.h	/^	int version;$/;"	m	struct:vlist_node
version	libubox/vlist.h	/^	int version;$/;"	m	struct:vlist_tree
version	ubus/ubusmsg.h	/^	uint8_t version;$/;"	m	struct:ubus_msghdr
version	uhttpd.h	/^	enum http_version version;$/;"	m	struct:http_request	typeref:enum:http_request::http_version
vlist_add	libubox/vlist.c	/^vlist_add(struct vlist_tree *tree, struct vlist_node *node, void *key)$/;"	f
vlist_delete	libubox/vlist.c	/^vlist_delete(struct vlist_tree *tree, struct vlist_node *node)$/;"	f
vlist_find	libubox/vlist.h	46;"	d
vlist_flush	libubox/vlist.c	/^vlist_flush(struct vlist_tree *tree)$/;"	f
vlist_flush_all	libubox/vlist.c	/^vlist_flush_all(struct vlist_tree *tree)$/;"	f
vlist_for_each_element	libubox/vlist.h	59;"	d
vlist_init	libubox/vlist.c	/^vlist_init(struct vlist_tree *tree, avl_tree_comp cmp, vlist_update_cb update)$/;"	f
vlist_node	libubox/vlist.h	/^struct vlist_node {$/;"	s
vlist_tree	libubox/vlist.h	/^struct vlist_tree {$/;"	s
vlist_update	libubox/vlist.h	/^static inline void vlist_update(struct vlist_tree *tree)$/;"	f
vlist_update_cb	libubox/vlist.h	/^typedef void (*vlist_update_cb)(struct vlist_tree *tree,$/;"	t
vsnprintf	json/printbuf.c	69;"	d	file:
w	libubox/ustream.h	/^	struct ustream_buf_list r, w;$/;"	m	struct:ustream	typeref:struct:ustream::
wait_data	ubus/libubus.c	/^static void wait_data(int fd, bool write)$/;"	f	file:
watch_method	ubus/libubus.c	/^static const struct ubus_method watch_method = {$/;"	v	typeref:struct:ubus_method	file:
watch_policy	ubus/example/ubus-example.c	/^static const struct blobmsg_policy watch_policy[__WATCH_MAX] = {$/;"	v	typeref:struct:blobmsg_policy	file:
watch_policy	ubus/libubus.c	/^static const struct blobmsg_policy watch_policy[] = {$/;"	v	typeref:struct:blobmsg_policy	file:
watched	ubus/ubusd_obj.h	/^	struct list_head watchers, watched;$/;"	m	struct:ubus_object	typeref:struct:ubus_object::
watched	ubus/ubusd_obj.h	/^	struct ubus_object *watcher, *watched;$/;"	m	struct:ubus_watch	typeref:struct:ubus_watch::
watched_list	ubus/ubusd_obj.h	/^	struct list_head watcher_list, watched_list;$/;"	m	struct:ubus_watch	typeref:struct:ubus_watch::
watcher	ubus/ubusd_obj.h	/^	struct ubus_object *watcher, *watched;$/;"	m	struct:ubus_watch	typeref:struct:ubus_watch::ubus_object
watcher_list	ubus/ubusd_obj.h	/^	struct list_head watcher_list, watched_list;$/;"	m	struct:ubus_watch	typeref:struct:ubus_watch::list_head
watchers	ubus/ubusd_obj.h	/^	struct list_head watchers, watched;$/;"	m	struct:ubus_object	typeref:struct:ubus_object::list_head
wpipe	uhttpd.h	/^	struct uloop_fd wpipe;$/;"	m	struct:client	typeref:struct:client::uloop_fd
wr	uhttpd.h	/^		char *wr;$/;"	m	struct:client::__anon2
write	libubox/ustream.h	/^	int (*write)(struct ustream *s, const char *buf, int len, bool more);$/;"	m	struct:ustream
write_error	libubox/ustream.h	/^	bool write_error;$/;"	m	struct:ustream
write_key_string	libubox/jshn/jshn.c	/^static void write_key_string(const char *key)$/;"	f	file:
writev_retry	ubus/libubus.c	/^static int writev_retry(int fd, struct iovec *iov, int iov_len)$/;"	f	file:
